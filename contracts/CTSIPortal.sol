// Copyright 2021 Cartesi Pte. Ltd.

// SPDX-License-Identifier: Apache-2.0
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

/// @title CTSI Portal
pragma solidity >=0.7.0;

interface CTSIPortal {
    /// @notice deposits CTSI in portal contract and create tokens in L2
    /// @param _L1Sender address on L1 that authorized the transaction
    /// @param _L2receivers array with receivers addresses
    /// @param _amounts array of amounts of ether to be distributed
    /// @param _data information to be interpreted by L2
    /// @return hash of input generated by deposit
    /// @dev  receivers[i] receive amounts[i]
    function ctsiDeposit(
        address _L1Sender,
        address[] calldata _L2receivers,
        uint256[] calldata _amounts,
        bytes calldata _data
    ) external returns (bytes32);

    /// @notice executes a descartesV2 output
    /// @param _data data with information necessary to execute output
    /// @dev can only be called by Output contract
    function executeDescartesV2Output(bytes calldata _data) external;

    // @notice emitted on CTSI deposited
    event CTSIDeposited(
        address _L1Sender,
        address[] _L2receivers,
        uint256[] _amounts,
        bytes _data
    );

    // @notice emitted on CTSI withdrawal
    event CTSIWithdrawn(
        address payable _receiver,
        uint256 _amount
    );
}
