# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
name: "Build"
on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      image-name:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      CI_TOKEN:
        required: true
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}
            name=docker.io/${{ github.repository_owner }}/${{ inputs.image-name }},enable=${{ github.repository_owner == 'cartesi' }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch,enable=${{ github.repository_owner != 'cartesi' }}
            type=ref,event=pr,enable=${{ github.repository_owner != 'cartesi' }}
            type=sha,format=long,enable=${{ github.repository_owner != 'cartesi' }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ github.repository_owner == 'cartesi' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
            ./docker-bake.platforms.hcl
          targets: ${{ inputs.target }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
