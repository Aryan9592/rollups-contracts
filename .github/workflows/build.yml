# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build
on:
  pull_request:
  push:
    tags:
      - v*
    branches:
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      postgres_indexer:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_indexer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
      postgres_reader:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_reader
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5435:5432
    env:
      CARGO_REGISTRIES_CARTESI_INDEX: https://github.com/cartesi/crates-index
    defaults:
      run:
        working-directory: offchain
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
      - name: ðŸ“¦ Install protoc
        run: sudo apt update && sudo apt install -y protobuf-compiler libprotobuf-dev
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            offchain/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo install diesel_cli --no-default-features --features "postgres" --force
      - run: cargo fmt --all -- --check
      - run: cargo check --workspace
      - run: cargo test --no-run
      - run: cargo test
        env:
          ROLLUPS_READER_BINARY_PATH: ../target/debug/reader

  test_onchain:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - run: yarn install
        working-directory: onchain/rollups
      - run: yarn build
        working-directory: onchain/rollups
      - run: forge test -vvv
        working-directory: onchain/rollups

  build_docker:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
    needs:
      - test
      - test_onchain
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=long

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker images
        id: docker_build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: deps
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      - uses: snok/container-retention-policy@v1
        with:
          image-names: rollups
          cut-off: one second ago UTC
          timestamp-to-use: updated_at
          account-type: org
          org-name: ${{ github.repository_owner }}
          token: ${{ secrets.GHCR_TOKEN }}

  dispatcher:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: dispatcher
      image-name: rollups-dispatcher
    secrets: inherit

  state_server:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: state-server
      image-name: rollups-state-server
    secrets: inherit

  indexer:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: indexer
      image-name: rollups-indexer
    secrets: inherit

  reader:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: reader
      image-name: query-server
    secrets: inherit

  inspect_server:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: inspect-server
      image-name: rollups-inspect-server
    secrets: inherit

  server_manager_broker_proxy:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: server-manager-broker-proxy
      image-name: rollups-server-manager-broker-proxy
    secrets: inherit

  hardhat:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: hardhat
      image-name: rollups-hardhat
    secrets: inherit

  cli:
    needs: build_docker
    uses: ./.github/workflows/docker.yml
    with:
      target: cli
      image-name: rollups-cli
    secrets: inherit
