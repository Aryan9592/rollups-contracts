{
  "contractName": "LibClaimsMask",
  "sourceName": "contracts/libraries/LibClaimsMask.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "alreadyClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        }
      ],
      "name": "clearAgreementMask",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        }
      ],
      "name": "getAgreementMask",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        }
      ],
      "name": "getConsensusGoalMask",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "getNumClaims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "increaseNumClaims",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "newClaimsMask",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numValidators",
          "type": "uint256"
        }
      ],
      "name": "newClaimsMaskWithConsensusGoalSet",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "removeValidator",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "setAgreementMask",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setNumClaims",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x61055161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c8063cb9f88131161007b578063cb9f881314610128578063cd70835c14610156578063cf7b90a614610169578063d4056ffe14610183578063de7fb2801461019a578063fa95f400146101ad57600080fd5b806352f1d2b4146100b8578063574125c2146100de5780638336d005146100f1578063a8c5d8f414610102578063ac266b8c14610115575b600080fd5b6100cb6100c6366004610424565b6101c1565b6040519081526020015b60405180910390f35b6100cb6100ec366004610450565b61021d565b6100cb6100ff366004610450565b90565b6100cb610110366004610469565b61027e565b6100cb610123366004610469565b6102cc565b610146610136366004610469565b60f89190911c901c600116151590565b60405190151581526020016100d5565b6100cb610164366004610469565b610332565b6100cb610177366004610450565b6001600160f81b031690565b6100cb610191366004610450565b60f01c60ff1690565b6100cb6101a8366004610424565b610370565b6100cb6101bb366004610450565b60f81c90565b6000600883106101ec5760405162461bcd60e51b81526004016101e39061048b565b60405180910390fd5b60006101f8858561027e565b9050600061020684836104cd565b9050610213868683610370565b9695505050505050565b600060088211156102655760405162461bcd60e51b8152602060048201526012602482015271757020746f20382076616c696461746f727360701b60448201526064016101e3565b6000610274600180851b6104e5565b60f01b9392505050565b6000600882106102a05760405162461bcd60e51b81526004016101e39061048b565b60006102b1600163400000006104e5565b9050806102bf84601e6104fc565b85901c1691505092915050565b6000600882106102ee5760405162461bcd60e51b81526004016101e39061048b565b8260006102fc8460f86104cd565b6001901b199182169190506103128460f06104cd565b6001901b1991821691905061032982856000610370565b95945050505050565b6000600882106103545760405162461bcd60e51b81526004016101e39061048b565b60006103618360f86104cd565b6001901b841791505092915050565b6000600883106103925760405162461bcd60e51b81526004016101e39061048b565b6103a1600163400000006104e5565b8211156103e65760405162461bcd60e51b8152602060048201526013602482015272436c61696d734d61736b204f766572666c6f7760681b60448201526064016101e3565b60006103f384601e6104fc565b610402600163400000006104e5565b901b19905084811661041585601e6104fc565b9390931b909217949350505050565b60008060006060848603121561043957600080fd5b505081359360208301359350604090920135919050565b60006020828403121561046257600080fd5b5035919050565b6000806040838503121561047c57600080fd5b50508035926020909101359150565b602080825260129082015271696e646578206f7574206f662072616e676560701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156104e0576104e06104b7565b500190565b6000828210156104f7576104f76104b7565b500390565b6000816000190483118215151615610516576105166104b7565b50029056fea26469706673582212203b7b0bad37adb9cc5e0857b6fa086328302081fb7c5a8152c39eef0f6358c04c64736f6c634300080d0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c8063cb9f88131161007b578063cb9f881314610128578063cd70835c14610156578063cf7b90a614610169578063d4056ffe14610183578063de7fb2801461019a578063fa95f400146101ad57600080fd5b806352f1d2b4146100b8578063574125c2146100de5780638336d005146100f1578063a8c5d8f414610102578063ac266b8c14610115575b600080fd5b6100cb6100c6366004610424565b6101c1565b6040519081526020015b60405180910390f35b6100cb6100ec366004610450565b61021d565b6100cb6100ff366004610450565b90565b6100cb610110366004610469565b61027e565b6100cb610123366004610469565b6102cc565b610146610136366004610469565b60f89190911c901c600116151590565b60405190151581526020016100d5565b6100cb610164366004610469565b610332565b6100cb610177366004610450565b6001600160f81b031690565b6100cb610191366004610450565b60f01c60ff1690565b6100cb6101a8366004610424565b610370565b6100cb6101bb366004610450565b60f81c90565b6000600883106101ec5760405162461bcd60e51b81526004016101e39061048b565b60405180910390fd5b60006101f8858561027e565b9050600061020684836104cd565b9050610213868683610370565b9695505050505050565b600060088211156102655760405162461bcd60e51b8152602060048201526012602482015271757020746f20382076616c696461746f727360701b60448201526064016101e3565b6000610274600180851b6104e5565b60f01b9392505050565b6000600882106102a05760405162461bcd60e51b81526004016101e39061048b565b60006102b1600163400000006104e5565b9050806102bf84601e6104fc565b85901c1691505092915050565b6000600882106102ee5760405162461bcd60e51b81526004016101e39061048b565b8260006102fc8460f86104cd565b6001901b199182169190506103128460f06104cd565b6001901b1991821691905061032982856000610370565b95945050505050565b6000600882106103545760405162461bcd60e51b81526004016101e39061048b565b60006103618360f86104cd565b6001901b841791505092915050565b6000600883106103925760405162461bcd60e51b81526004016101e39061048b565b6103a1600163400000006104e5565b8211156103e65760405162461bcd60e51b8152602060048201526013602482015272436c61696d734d61736b204f766572666c6f7760681b60448201526064016101e3565b60006103f384601e6104fc565b610402600163400000006104e5565b901b19905084811661041585601e6104fc565b9390931b909217949350505050565b60008060006060848603121561043957600080fd5b505081359360208301359350604090920135919050565b60006020828403121561046257600080fd5b5035919050565b6000806040838503121561047c57600080fd5b50508035926020909101359150565b602080825260129082015271696e646578206f7574206f662072616e676560701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156104e0576104e06104b7565b500190565b6000828210156104f7576104f76104b7565b500390565b6000816000190483118215151615610516576105166104b7565b50029056fea26469706673582212203b7b0bad37adb9cc5e0857b6fa086328302081fb7c5a8152c39eef0f6358c04c64736f6c634300080d0033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "alreadyClaimed(uint256,uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value",
          "_validatorIndex": "index of the validator in the validator array, starting from 0"
        }
      },
      "clearAgreementMask(uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value"
        }
      },
      "getAgreementMask(uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value"
        }
      },
      "getConsensusGoalMask(uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value"
        }
      },
      "getNumClaims(uint256,uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value",
          "_validatorIndex": "index of the validator in the validator array, starting from 0     this index can be obtained though `getNumberOfClaimsByIndex` function in Validator Manager"
        }
      },
      "increaseNumClaims(uint256,uint256,uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value",
          "_validatorIndex": "index of the validator in the validator array, starting from 0",
          "_value": "the increase amount"
        }
      },
      "newClaimsMask(uint256)": {
        "params": {
          "_value": "the value following the format of ClaimsMask"
        }
      },
      "newClaimsMaskWithConsensusGoalSet(uint256)": {
        "params": {
          "_numValidators": "the number of validators"
        }
      },
      "removeValidator(uint256,uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value",
          "_validatorIndex": "index of the validator in the validator array, starting from 0"
        }
      },
      "setAgreementMask(uint256,uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value",
          "_validatorIndex": "index of the validator in the validator array, starting from 0"
        }
      },
      "setNumClaims(uint256,uint256,uint256)": {
        "params": {
          "_claimsMask": "the ClaimsMask value",
          "_validatorIndex": "index of the validator in the validator array, starting from 0",
          "_value": "the set value"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x551 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB9F8813 GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xCB9F8813 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xCD70835C EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xCF7B90A6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xD4056FFE EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xDE7FB280 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xFA95F400 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52F1D2B4 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x574125C2 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8336D005 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xA8C5D8F4 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xAC266B8C EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST PUSH2 0xCB PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH2 0xCB PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x146 PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH1 0xF8 SWAP2 SWAP1 SWAP2 SHR SWAP1 SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0xF0 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP6 DUP6 PUSH2 0x27E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x206 DUP5 DUP4 PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH2 0x213 DUP7 DUP7 DUP4 PUSH2 0x370 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x757020746F20382076616C696461746F7273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274 PUSH1 0x1 DUP1 DUP6 SHL PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0xF0 SHL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2BF DUP5 PUSH1 0x1E PUSH2 0x4FC JUMP JUMPDEST DUP6 SWAP1 SHR AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH2 0x2FC DUP5 PUSH1 0xF8 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x312 DUP5 PUSH1 0xF0 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x329 DUP3 DUP6 PUSH1 0x0 PUSH2 0x370 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361 DUP4 PUSH1 0xF8 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL DUP5 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x4E5 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x436C61696D734D61736B204F766572666C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP5 PUSH1 0x1E PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x402 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 SHL NOT SWAP1 POP DUP5 DUP2 AND PUSH2 0x415 DUP6 PUSH1 0x1E PUSH2 0x4FC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SHL SWAP1 SWAP3 OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x696E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x4E0 PUSH2 0x4B7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0x4B7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x516 JUMPI PUSH2 0x516 PUSH2 0x4B7 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH28 0xBAD37ADB9CC5E0857B6FA086328302081FB7C5A8152C39EEF0F6358 0xC0 0x4C PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
      "sourceMap": "1263:6302:37:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1263:6302:37;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@alreadyClaimed_6050": {
          "entryPoint": null,
          "id": 6050,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@clearAgreementMask_6004": {
          "entryPoint": null,
          "id": 6004,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getAgreementMask_6022": {
          "entryPoint": null,
          "id": 6022,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getConsensusGoalMask_6112": {
          "entryPoint": null,
          "id": 6112,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getNumClaims_5854": {
          "entryPoint": 638,
          "id": 5854,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@increaseNumClaims_5895": {
          "entryPoint": 449,
          "id": 5895,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@newClaimsMaskWithConsensusGoalSet_5813": {
          "entryPoint": 541,
          "id": 5813,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@newClaimsMask_5780": {
          "entryPoint": null,
          "id": 5780,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@removeValidator_6184": {
          "entryPoint": 716,
          "id": 6184,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@setAgreementMask_6091": {
          "entryPoint": 818,
          "id": 6091,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@setNumClaims_5973": {
          "entryPoint": 880,
          "id": 5973,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 1104,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762t_uint256": {
          "entryPoint": 1129,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762t_uint256t_uint256": {
          "entryPoint": 1060,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_724a1a52159ca2ba80a0176a83b5dd7273d23b0484847d7480bf867e72e8022d__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1163,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c4d2189ab07abe2786c9ddd18bc105c0ac91aadb5554043dc1484eea89108e20__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_d1a2afdc0f74321c3b7d82f19b47510e11d228fd856d186619a9fd649a0593ab__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_userDefinedValueType$_ClaimsMask_$5762__to_t_uint256__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 1229,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 1276,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 1253,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 1207,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:3269:49",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:49",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "149:212:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "195:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "204:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "207:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "197:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "197:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "197:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "170:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "179:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "166:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "166:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "191:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "162:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "162:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "159:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "220:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "230:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "220:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "262:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "289:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "300:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "285:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "285:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "272:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "272:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "262:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "313:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "340:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "351:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "336:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "323:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "323:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "313:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762t_uint256t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "99:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "110:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "122:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "130:6:49",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "138:6:49",
                    "type": ""
                  }
                ],
                "src": "14:347:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "506:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "516:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "528:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "539:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "524:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "524:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "516:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "558:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "569:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "551:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "551:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_userDefinedValueType$_ClaimsMask_$5762__to_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "475:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "486:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "497:4:49",
                    "type": ""
                  }
                ],
                "src": "366:216:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "657:110:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "703:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "712:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "715:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "705:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "705:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "705:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "678:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "687:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "674:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "699:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "670:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "667:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "728:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "751:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "738:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "738:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "728:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "623:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "634:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "646:6:49",
                    "type": ""
                  }
                ],
                "src": "587:180:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "890:161:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "936:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "945:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "948:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "938:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "938:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "938:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "911:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "920:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "907:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "907:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "932:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "903:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "903:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "900:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "961:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "984:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "971:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "961:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1003:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1030:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1041:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1026:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1026:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1013:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1013:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1003:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "848:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "859:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "871:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "879:6:49",
                    "type": ""
                  }
                ],
                "src": "772:279:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1165:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1175:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1187:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1198:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1183:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1183:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1175:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1217:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1228:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1210:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1210:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1134:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1145:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1156:4:49",
                    "type": ""
                  }
                ],
                "src": "1056:185:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1349:92:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1359:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1371:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1367:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1367:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1359:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1401:9:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1426:6:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1419:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1419:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1412:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1412:22:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1394:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1394:41:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1394:41:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1318:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1329:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1340:4:49",
                    "type": ""
                  }
                ],
                "src": "1246:195:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1547:110:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1593:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1602:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1605:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1595:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1595:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1595:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1568:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1577:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1564:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1564:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1589:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1560:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1560:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1557:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1618:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1641:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1628:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1628:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1618:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1513:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1524:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1536:6:49",
                    "type": ""
                  }
                ],
                "src": "1446:211:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1836:168:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1853:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1864:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1846:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1846:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1846:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1887:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1898:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1883:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1883:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1903:2:49",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1876:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1876:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1876:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1926:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1937:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1922:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1922:18:49"
                          },
                          {
                            "hexValue": "696e646578206f7574206f662072616e6765",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1942:20:49",
                            "type": "",
                            "value": "index out of range"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1915:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1915:48:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1915:48:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1972:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1984:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1995:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1980:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1972:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_724a1a52159ca2ba80a0176a83b5dd7273d23b0484847d7480bf867e72e8022d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1813:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1827:4:49",
                    "type": ""
                  }
                ],
                "src": "1662:342:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2041:95:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2058:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2065:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2070:10:49",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2061:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2061:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2051:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2051:31:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2051:31:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2098:1:49",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:4:49",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2091:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2091:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2091:15:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2122:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2125:4:49",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "2115:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2115:15:49"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "2009:127:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2189:80:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2216:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "2218:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2218:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2218:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2205:1:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2212:1:49"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2208:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2208:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2202:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2202:13:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2199:39:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2247:16:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2258:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2261:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2254:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2254:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "2247:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "2172:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "2175:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "2181:3:49",
                    "type": ""
                  }
                ],
                "src": "2141:128:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2448:168:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2465:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2476:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2458:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2458:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2458:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2499:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2510:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2495:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2495:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2515:2:49",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2488:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2488:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2538:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2549:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2534:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2534:18:49"
                          },
                          {
                            "hexValue": "757020746f20382076616c696461746f7273",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2554:20:49",
                            "type": "",
                            "value": "up to 8 validators"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2527:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2527:48:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2527:48:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2584:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2596:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2607:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2592:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2592:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2584:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_d1a2afdc0f74321c3b7d82f19b47510e11d228fd856d186619a9fd649a0593ab__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2425:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2439:4:49",
                    "type": ""
                  }
                ],
                "src": "2274:342:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2670:76:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2692:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "2694:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2694:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2694:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2686:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2689:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2683:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2683:8:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2680:34:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2723:17:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2735:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2738:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2731:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2731:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "2723:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "2652:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "2655:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "2661:4:49",
                    "type": ""
                  }
                ],
                "src": "2621:125:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2803:116:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2862:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "2864:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2864:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2864:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2834:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2827:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2827:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2820:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2820:17:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2842:1:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2853:1:49",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2849:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2849:6:49"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2857:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2845:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2845:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2839:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2839:21:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2816:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2816:45:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2813:71:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2893:20:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2908:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2911:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "2904:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2904:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "2893:7:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "2782:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "2785:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "2791:7:49",
                    "type": ""
                  }
                ],
                "src": "2751:168:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3098:169:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3115:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3126:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3108:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3108:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3108:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3149:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3160:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3145:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3145:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3165:2:49",
                            "type": "",
                            "value": "19"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3138:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3138:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3138:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3188:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3199:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3184:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3184:18:49"
                          },
                          {
                            "hexValue": "436c61696d734d61736b204f766572666c6f77",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3204:21:49",
                            "type": "",
                            "value": "ClaimsMask Overflow"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3177:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3177:49:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3177:49:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3235:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3247:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3258:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3243:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3243:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3235:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c4d2189ab07abe2786c9ddd18bc105c0ac91aadb5554043dc1484eea89108e20__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3075:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3089:4:49",
                    "type": ""
                  }
                ],
                "src": "2924:343:49"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_userDefinedValueType$_ClaimsMask_$5762__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5762(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_724a1a52159ca2ba80a0176a83b5dd7273d23b0484847d7480bf867e72e8022d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"index out of range\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d1a2afdc0f74321c3b7d82f19b47510e11d228fd856d186619a9fd649a0593ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"up to 8 validators\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c4d2189ab07abe2786c9ddd18bc105c0ac91aadb5554043dc1484eea89108e20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ClaimsMask Overflow\")\n        tail := add(headStart, 96)\n    }\n}",
          "id": 49,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB9F8813 GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xCB9F8813 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xCD70835C EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xCF7B90A6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xD4056FFE EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xDE7FB280 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xFA95F400 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52F1D2B4 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x574125C2 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8336D005 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xA8C5D8F4 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xAC266B8C EQ PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST PUSH2 0xCB PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH2 0xCB PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x146 PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH1 0xF8 SWAP2 SWAP1 SWAP2 SHR SWAP1 SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0xF0 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP6 DUP6 PUSH2 0x27E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x206 DUP5 DUP4 PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH2 0x213 DUP7 DUP7 DUP4 PUSH2 0x370 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x757020746F20382076616C696461746F7273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274 PUSH1 0x1 DUP1 DUP6 SHL PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0xF0 SHL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2BF DUP5 PUSH1 0x1E PUSH2 0x4FC JUMP JUMPDEST DUP6 SWAP1 SHR AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH2 0x2FC DUP5 PUSH1 0xF8 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x312 DUP5 PUSH1 0xF0 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x329 DUP3 DUP6 PUSH1 0x0 PUSH2 0x370 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361 DUP4 PUSH1 0xF8 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL DUP5 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x4E5 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x436C61696D734D61736B204F766572666C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP5 PUSH1 0x1E PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x402 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 SHL NOT SWAP1 POP DUP5 DUP2 AND PUSH2 0x415 DUP6 PUSH1 0x1E PUSH2 0x4FC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SHL SWAP1 SWAP3 OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x696E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x4E0 PUSH2 0x4B7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0x4B7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x516 JUMPI PUSH2 0x516 PUSH2 0x4B7 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH28 0xBAD37ADB9CC5E0857B6FA086328302081FB7C5A8152C39EEF0F6358 0xC0 0x4C PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
      "sourceMap": "1263:6302:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3149:452;;;;;;:::i;:::-;;:::i;:::-;;;551:25:49;;;539:2;524:18;3149:452:37;;;;;;;;1846:329;;;;;;:::i;:::-;;:::i;1513:119::-;;;;;;:::i;:::-;1618:6;1513:119;2506:370;;;;;;:::i;:::-;;:::i;6793:770::-;;;;;;:::i;:::-;;:::i;5355:343::-;;;;;;:::i;:::-;5641:3;5607:37;;;;5606:58;;5684:1;5605:80;5604:87;;;5355:343;;;;1419:14:49;;1412:22;1394:41;;1382:2;1367:18;5355:343:37;1246:195:49;5911:366:37;;;;;;:::i;:::-;;:::i;4589:263::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4734:49:37;;4589:263;6383:207;;;;;;:::i;:::-;6513:44;;;;;6383:207;3863:631;;;;;;:::i;:::-;;:::i;4953:195::-;;;;;;:::i;:::-;5113:3;5079:37;;4953:195;3149:452;3292:10;3340:1;3322:15;:19;3314:50;;;;-1:-1:-1;;;3314:50:37;;;;;;;:::i;:::-;;;;;;;;;3374:18;3395:42;3408:11;3421:15;3395:12;:42::i;:::-;3374:63;-1:-1:-1;3447:14:37;3464:19;3477:6;3374:63;3464:19;:::i;:::-;3447:36;;3544:50;3557:11;3570:15;3587:6;3544:12;:50::i;:::-;3537:57;3149:452;-1:-1:-1;;;;;;3149:452:37:o;1846:329::-;1958:10;2010:1;1992:14;:19;;1984:50;;;;-1:-1:-1;;;1984:50:37;;2476:2:49;1984:50:37;;;2458:21:49;2515:2;2495:18;;;2488:30;-1:-1:-1;;;2534:18:49;;;2527:48;2592:18;;1984:50:37;2274:342:49;1984:50:37;2044:21;2068:25;2092:1;2069:19;;;2068:25;:::i;:::-;2143:3;2126:20;;1846:329;-1:-1:-1;;;1846:329:37:o;2506:370::-;2622:7;2671:1;2653:15;:19;2645:50;;;;-1:-1:-1;;;2645:50:37;;;;;;;:::i;:::-;2705:15;2723:23;2745:1;2724:17;2723:23;:::i;:::-;2705:41;-1:-1:-1;2705:41:37;2827:30;2842:15;1323:2;2827:30;:::i;:::-;2794:11;2776:82;;2775:94;2756:113;;;2506:370;;;;:::o;6793:770::-;6912:10;6964:1;6946:15;:19;6938:50;;;;-1:-1:-1;;;6938:50:37;;;;;;;:::i;:::-;7042:11;6998:23;7142:21;:15;7160:3;7142:21;:::i;:::-;7136:1;:28;;7134:31;7211:26;;;;7134:31;-1:-1:-1;7320:21:37;:15;7338:3;7320:21;:::i;:::-;7314:1;:28;;7312:31;7393:26;;;;7312:31;-1:-1:-1;7490:66:37;7393:26;7537:15;7554:1;7490:12;:66::i;:::-;7471:85;6793:770;-1:-1:-1;;;;;6793:770:37:o;5911:366::-;6031:10;6083:1;6065:15;:19;6057:50;;;;-1:-1:-1;;;6057:50:37;;;;;;;:::i;:::-;6117:15;6188:21;6194:15;6188:3;:21;:::i;:::-;6182:1;:28;;6136:75;;;-1:-1:-1;;5911:366:37;;;;:::o;3863:631::-;4001:10;4049:1;4031:15;:19;4023:50;;;;-1:-1:-1;;;4023:50:37;;;;;;;:::i;:::-;4102:23;4124:1;4103:17;4102:23;:::i;:::-;4091:6;:35;;4083:67;;;;-1:-1:-1;;;4083:67:37;;3126:2:49;4083:67:37;;;3108:21:49;3165:2;3145:18;;;3138:30;-1:-1:-1;;;3184:18:49;;;3177:49;3243:18;;4083:67:37;2924:343:49;4083:67:37;4160:15;4222:30;4237:15;1323:2;4222:30;:::i;:::-;4181:23;4203:1;4182:17;4181:23;:::i;:::-;4180:73;;4178:76;;-1:-1:-1;4292:40:37;;;4417:30;4432:15;1323:2;4417:30;:::i;:::-;4406:42;;;;4385:64;;;;;-1:-1:-1;;;;3863:631:37:o;14:347:49:-;122:6;130;138;191:2;179:9;170:7;166:23;162:32;159:52;;;207:1;204;197:12;159:52;-1:-1:-1;;230:23:49;;;300:2;285:18;;272:32;;-1:-1:-1;351:2:49;336:18;;;323:32;;14:347;-1:-1:-1;14:347:49:o;587:180::-;646:6;699:2;687:9;678:7;674:23;670:32;667:52;;;715:1;712;705:12;667:52;-1:-1:-1;738:23:49;;587:180;-1:-1:-1;587:180:49:o;772:279::-;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;-1:-1:-1;;971:23:49;;;1041:2;1026:18;;;1013:32;;-1:-1:-1;772:279:49:o;1662:342::-;1864:2;1846:21;;;1903:2;1883:18;;;1876:30;-1:-1:-1;;;1937:2:49;1922:18;;1915:48;1995:2;1980:18;;1662:342::o;2009:127::-;2070:10;2065:3;2061:20;2058:1;2051:31;2101:4;2098:1;2091:15;2125:4;2122:1;2115:15;2141:128;2181:3;2212:1;2208:6;2205:1;2202:13;2199:39;;;2218:18;;:::i;:::-;-1:-1:-1;2254:9:49;;2141:128::o;2621:125::-;2661:4;2689:1;2686;2683:8;2680:34;;;2694:18;;:::i;:::-;-1:-1:-1;2731:9:49;;2621:125::o;2751:168::-;2791:7;2857:1;2853;2849:6;2845:14;2842:1;2839:21;2834:1;2827:9;2820:17;2816:45;2813:71;;;2864:18;;:::i;:::-;-1:-1:-1;2904:9:49;;2751:168::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "272200",
        "executionCost": "343",
        "totalCost": "272543"
      },
      "external": {
        "alreadyClaimed(uint256,uint256)": "315",
        "clearAgreementMask(uint256)": "304",
        "getAgreementMask(uint256)": "358",
        "getConsensusGoalMask(uint256)": "320",
        "getNumClaims(uint256,uint256)": "566",
        "increaseNumClaims(uint256,uint256,uint256)": "infinite",
        "newClaimsMask(uint256)": "287",
        "newClaimsMaskWithConsensusGoalSet(uint256)": "397",
        "removeValidator(uint256,uint256)": "infinite",
        "setAgreementMask(uint256,uint256)": "427",
        "setNumClaims(uint256,uint256,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "alreadyClaimed(uint256,uint256)": "cb9f8813",
      "clearAgreementMask(uint256)": "cf7b90a6",
      "getAgreementMask(uint256)": "fa95f400",
      "getConsensusGoalMask(uint256)": "d4056ffe",
      "getNumClaims(uint256,uint256)": "a8c5d8f4",
      "increaseNumClaims(uint256,uint256,uint256)": "52f1d2b4",
      "newClaimsMask(uint256)": "8336d005",
      "newClaimsMaskWithConsensusGoalSet(uint256)": "574125c2",
      "removeValidator(uint256,uint256)": "ac266b8c",
      "setAgreementMask(uint256,uint256)": "cd70835c",
      "setNumClaims(uint256,uint256,uint256)": "de7fb280"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"alreadyClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"}],\"name\":\"clearAgreementMask\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"}],\"name\":\"getAgreementMask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"}],\"name\":\"getConsensusGoalMask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"getNumClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseNumClaims\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"newClaimsMask\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numValidators\",\"type\":\"uint256\"}],\"name\":\"newClaimsMaskWithConsensusGoalSet\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"removeValidator\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"setAgreementMask\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setNumClaims\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"alreadyClaimed(uint256,uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\",\"_validatorIndex\":\"index of the validator in the validator array, starting from 0\"}},\"clearAgreementMask(uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\"}},\"getAgreementMask(uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\"}},\"getConsensusGoalMask(uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\"}},\"getNumClaims(uint256,uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\",\"_validatorIndex\":\"index of the validator in the validator array, starting from 0     this index can be obtained though `getNumberOfClaimsByIndex` function in Validator Manager\"}},\"increaseNumClaims(uint256,uint256,uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\",\"_validatorIndex\":\"index of the validator in the validator array, starting from 0\",\"_value\":\"the increase amount\"}},\"newClaimsMask(uint256)\":{\"params\":{\"_value\":\"the value following the format of ClaimsMask\"}},\"newClaimsMaskWithConsensusGoalSet(uint256)\":{\"params\":{\"_numValidators\":\"the number of validators\"}},\"removeValidator(uint256,uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\",\"_validatorIndex\":\"index of the validator in the validator array, starting from 0\"}},\"setAgreementMask(uint256,uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\",\"_validatorIndex\":\"index of the validator in the validator array, starting from 0\"}},\"setNumClaims(uint256,uint256,uint256)\":{\"params\":{\"_claimsMask\":\"the ClaimsMask value\",\"_validatorIndex\":\"index of the validator in the validator array, starting from 0\",\"_value\":\"the set value\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"alreadyClaimed(uint256,uint256)\":{\"notice\":\"check if a validator has already claimed\"},\"clearAgreementMask(uint256)\":{\"notice\":\"get consensus goal mask\"},\"getAgreementMask(uint256)\":{\"notice\":\"get the entire agreement mask\"},\"getConsensusGoalMask(uint256)\":{\"notice\":\"get the entire consensus goal mask\"},\"getNumClaims(uint256,uint256)\":{\"notice\":\"this function returns the #claims for the specified validator\"},\"increaseNumClaims(uint256,uint256,uint256)\":{\"notice\":\"this function increases the #claims for the specified validator\"},\"newClaimsMask(uint256)\":{\"notice\":\"this function creates a new ClaimsMask variable with value _value\"},\"newClaimsMaskWithConsensusGoalSet(uint256)\":{\"notice\":\"this function creates a new ClaimsMask variable with the consensus goal mask set,         according to the number of validators\"},\"removeValidator(uint256,uint256)\":{\"notice\":\"remove validator from the ClaimsMask\"},\"setAgreementMask(uint256,uint256)\":{\"notice\":\"set agreement mask for the specified validator\"},\"setNumClaims(uint256,uint256,uint256)\":{\"notice\":\"this function sets the #claims for the specified validator\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibClaimsMask.sol\":\"LibClaimsMask\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/LibClaimsMask.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title ClaimsMask library\\npragma solidity >=0.8.8;\\n\\n// ClaimsMask is used to keep track of the number of claims for up to 8 validators\\n// | agreement mask | consensus goal mask | #claims_validator7 | #claims_validator6 | ... | #claims_validator0 |\\n// |     8 bits     |        8 bits       |      30 bits       |      30 bits       | ... |      30 bits       |\\n// In Validator Manager, #claims_validator indicates the #claims the validator has made.\\n// In Fee Manager, #claims_validator indicates the #claims the validator has redeemed. In this case,\\n//      agreement mask and consensus goal mask are not used.\\n\\ntype ClaimsMask is uint256;\\n\\nlibrary LibClaimsMask {\\n    uint256 constant claimsBitLen = 30; // #bits used for each #claims\\n\\n    /// @notice this function creates a new ClaimsMask variable with value _value\\n    /// @param  _value the value following the format of ClaimsMask\\n    function newClaimsMask(uint256 _value) public pure returns (ClaimsMask) {\\n        return ClaimsMask.wrap(_value);\\n    }\\n\\n    /// @notice this function creates a new ClaimsMask variable with the consensus goal mask set,\\n    ///         according to the number of validators\\n    /// @param  _numValidators the number of validators\\n    function newClaimsMaskWithConsensusGoalSet(uint256 _numValidators)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        require(_numValidators <= 8, \\\"up to 8 validators\\\");\\n        uint256 consensusMask = (1 << _numValidators) - 1;\\n        return ClaimsMask.wrap(consensusMask << 240); // 256 - 8 - 8 = 240\\n    }\\n\\n    /// @notice this function returns the #claims for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    ///     this index can be obtained though `getNumberOfClaimsByIndex` function in Validator Manager\\n    function getNumClaims(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 bitmask = (1 << claimsBitLen) - 1;\\n        return\\n            (ClaimsMask.unwrap(_claimsMask) >>\\n                (claimsBitLen * _validatorIndex)) & bitmask;\\n    }\\n\\n    /// @notice this function increases the #claims for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    /// @param  _value the increase amount\\n    function increaseNumClaims(\\n        ClaimsMask _claimsMask,\\n        uint256 _validatorIndex,\\n        uint256 _value\\n    ) public pure returns (ClaimsMask) {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 currentNum = getNumClaims(_claimsMask, _validatorIndex);\\n        uint256 newNum = currentNum + _value; // overflows checked by default with sol0.8\\n        return setNumClaims(_claimsMask, _validatorIndex, newNum);\\n    }\\n\\n    /// @notice this function sets the #claims for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    /// @param  _value the set value\\n    function setNumClaims(\\n        ClaimsMask _claimsMask,\\n        uint256 _validatorIndex,\\n        uint256 _value\\n    ) public pure returns (ClaimsMask) {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        require(_value <= ((1 << claimsBitLen) - 1), \\\"ClaimsMask Overflow\\\");\\n        uint256 bitmask = ~(((1 << claimsBitLen) - 1) <<\\n            (claimsBitLen * _validatorIndex));\\n        uint256 clearedClaimsMask = ClaimsMask.unwrap(_claimsMask) & bitmask;\\n        _claimsMask = ClaimsMask.wrap(\\n            clearedClaimsMask | (_value << (claimsBitLen * _validatorIndex))\\n        );\\n        return _claimsMask;\\n    }\\n\\n    /// @notice get consensus goal mask\\n    /// @param  _claimsMask the ClaimsMask value\\n    function clearAgreementMask(ClaimsMask _claimsMask)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        uint256 clearedMask = ClaimsMask.unwrap(_claimsMask) & ((1 << 248) - 1); // 256 - 8 = 248\\n        return ClaimsMask.wrap(clearedMask);\\n    }\\n\\n    /// @notice get the entire agreement mask\\n    /// @param  _claimsMask the ClaimsMask value\\n    function getAgreementMask(ClaimsMask _claimsMask)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        return (ClaimsMask.unwrap(_claimsMask) >> 248); // get the first 8 bits\\n    }\\n\\n    /// @notice check if a validator has already claimed\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    function alreadyClaimed(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (bool)\\n    {\\n        // get the first 8 bits. Then & operation on the validator's bit to see if it's set\\n        return\\n            (((ClaimsMask.unwrap(_claimsMask) >> 248) >> _validatorIndex) &\\n                1) != 0;\\n    }\\n\\n    /// @notice set agreement mask for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    function setAgreementMask(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 setMask = (ClaimsMask.unwrap(_claimsMask) |\\n            (1 << (248 + _validatorIndex))); // 256 - 8 = 248\\n        return ClaimsMask.wrap(setMask);\\n    }\\n\\n    /// @notice get the entire consensus goal mask\\n    /// @param  _claimsMask the ClaimsMask value\\n    function getConsensusGoalMask(ClaimsMask _claimsMask)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        return ((ClaimsMask.unwrap(_claimsMask) << 8) >> 248); // get the second 8 bits\\n    }\\n\\n    /// @notice remove validator from the ClaimsMask\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    function removeValidator(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 claimsMaskValue = ClaimsMask.unwrap(_claimsMask);\\n        // remove validator from agreement bitmask\\n        uint256 zeroMask = ~(1 << (_validatorIndex + 248)); // 256 - 8 = 248\\n        claimsMaskValue = (claimsMaskValue & zeroMask);\\n        // remove validator from consensus goal mask\\n        zeroMask = ~(1 << (_validatorIndex + 240)); // 256 - 8 - 8 = 240\\n        claimsMaskValue = (claimsMaskValue & zeroMask);\\n        // remove validator from #claims\\n        return\\n            setNumClaims(ClaimsMask.wrap(claimsMaskValue), _validatorIndex, 0);\\n    }\\n}\\n\",\"keccak256\":\"0x581915d6dcd3aa9e447f89b8bf902bc4f4a72c40b9e8575e196741a8974ea74a\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "alreadyClaimed(uint256,uint256)": {
        "notice": "check if a validator has already claimed"
      },
      "clearAgreementMask(uint256)": {
        "notice": "get consensus goal mask"
      },
      "getAgreementMask(uint256)": {
        "notice": "get the entire agreement mask"
      },
      "getConsensusGoalMask(uint256)": {
        "notice": "get the entire consensus goal mask"
      },
      "getNumClaims(uint256,uint256)": {
        "notice": "this function returns the #claims for the specified validator"
      },
      "increaseNumClaims(uint256,uint256,uint256)": {
        "notice": "this function increases the #claims for the specified validator"
      },
      "newClaimsMask(uint256)": {
        "notice": "this function creates a new ClaimsMask variable with value _value"
      },
      "newClaimsMaskWithConsensusGoalSet(uint256)": {
        "notice": "this function creates a new ClaimsMask variable with the consensus goal mask set,         according to the number of validators"
      },
      "removeValidator(uint256,uint256)": {
        "notice": "remove validator from the ClaimsMask"
      },
      "setAgreementMask(uint256,uint256)": {
        "notice": "set agreement mask for the specified validator"
      },
      "setNumClaims(uint256,uint256,uint256)": {
        "notice": "this function sets the #claims for the specified validator"
      }
    },
    "version": 1
  }
}