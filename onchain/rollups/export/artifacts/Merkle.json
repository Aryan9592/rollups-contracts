{
  "contractName": "Merkle",
  "sourceName": "@cartesi/util/contracts/Merkle.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "name": "calculateRootFromPowerOfTwo",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getEmptyTreeHashAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_wordIndex",
          "type": "uint256"
        }
      ],
      "name": "getHashOfWordAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_log2Size",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRootFromBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_position",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfReplacement",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfFullDrive",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_replacement",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "siblings",
          "type": "bytes32[]"
        }
      ],
      "name": "getRootAfterReplacementInDrive",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x6115ff61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806334bd712d14610066578063451a10551461008b57806379de46011461009e57806382b0eab8146100b1578063c84583a1146100c4575b600080fd5b610079610074366004610ad9565b6100d7565b60405190815260200160405180910390f35b610079610099366004610b51565b610229565b6100796100ac366004610b6a565b6102ba565b6100796100bf366004610c1b565b6104d0565b6100796100d2366004610ad9565b6106cb565b6000600382901b816100ea600883610cef565b9050848211156101365760405162461bcd60e51b8152602060048201526012602482015271776f7264206f7574206f6620626f756e647360701b60448201526064015b60405180910390fd5b8481116101795761014981838789610d07565b60405160200161015a929190610d31565b6040516020818303038152906040528051906020012092505050610222565b60408051600880825281830190925260009160208201818036833701905050905060006101a68488610d41565b905060005b818110156102135788886101bf8388610cef565b8181106101ce576101ce610d58565b9050013560f81c60f81b8382815181106101ea576101ea610d58565b60200101906001600160f81b031916908160001a9053508061020b81610d6e565b9150506101ab565b50508051602090910120925050505b9392505050565b600080610237836020610d87565b9050610244816020610cef565b6107a0101561028b5760405162461bcd60e51b8152602060048201526013602482015272696e646578206f7574206f6620626f756e647360681b604482015260640161012d565b600080604051806107c001604052806107a08152602001610e2a6107a091399290920160200151949350505050565b60008585101580156102cd575060038610155b80156102da575060408511155b6103445760405162461bcd60e51b815260206004820152603560248201527f33203c3d206c6f6753697a654f665265706c6163656d656e74203c3d206c6f6760448201527414da5e9953d9919d5b1b111c9a5d99480f0f480d8d605a1b606482015260840161012d565b600180871b9088906103569083610d41565b16156103a45760405162461bcd60e51b815260206004820152601760248201527f506f736974696f6e206973206e6f7420616c69676e6564000000000000000000604482015260640161012d565b6103ae8787610d41565b83146103fc5760405162461bcd60e51b815260206004820152601b60248201527f50726f6f66206c656e67746820646f6573206e6f74206d617463680000000000604482015260640161012d565b60005b838110156104c35781811b8916600003610464578585858381811061042657610426610d58565b90506020020135604051602001610447929190918252602082015260400190565b6040516020818303038152906040528051906020012095506104b1565b84848281811061047657610476610d58565b9050602002013586604051602001610498929190918252602082015260400190565b6040516020818303038152906040528051906020012095505b806104bb81610d6e565b9150506103ff565b5093979650505050505050565b805160405163d82ae4b160e01b815260009173__$114cc05e390485200171fdb6122b6fcd26$__9163d82ae4b19161050e9160040190815260200190565b602060405180830381865af415801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610da6565b61059b5760405162461bcd60e51b815260206004820152601860248201527f6172726179206c656e206e6f7420706f776572206f6620320000000000000000604482015260640161012d565b81516001036105c657816000815181106105b7576105b7610d58565b60200260200101519050919050565b600060018351901c67ffffffffffffffff8111156105e6576105e6610c05565b60405190808252806020026020018201604052801561060f578160200160208202803683370190505b50905060005b83518110156106c15783818151811061063057610630610d58565b6020026020010151848260016106469190610cef565b8151811061065657610656610d58565b6020026020010151604051602001610678929190918252602082015260400190565b6040516020818303038152906040528051906020012082600183901c815181106106a4576106a4610d58565b60209081029190910101526106ba600282610cef565b9050610615565b50610222816104d0565b6000600382101580156106df575060408211155b61072b5760405162461bcd60e51b815260206004820152601960248201527f72616e6765206f66206c6f673253697a653a205b332c36345d00000000000000604482015260640161012d565b600083900361074957610742610099600384610d41565b9050610222565b6000610756600384610d41565b6001901b9050600381901b8411156107b05760405162461bcd60e51b815260206004820152601960248201527f6461746120697320626967676572207468616e20647269766500000000000000604482015260640161012d565b6040516306c8e54b60e01b8152600385901c600482015260009073__$114cc05e390485200171fdb6122b6fcd26$__906306c8e54b90602401602060405180830381865af4158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a9190610dc8565b610835906002610deb565b60ff16905060008167ffffffffffffffff81111561085557610855610c05565b60405190808252806020026020018201604052801561087e578160200160208202803683370190505b5090506000806000805b86841015610a7057600384901b8a11156108d9576108a78b8b866100d7565b8584815181106108b9576108b9610d58565b6020908102919091010152836108ce81610d6e565b94505083915061098a565b60405163052dcf5f60e31b81526004810185905273__$114cc05e390485200171fdb6122b6fcd26$__9063296e7af890602401602060405180830381865af4158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190610e10565b905061095881610229565b85848151811061096a5761096a610d58565b60209081029190910101526109826001821b85610cef565b935083811c91505b8261099481610d6e565b9350505b81600116600003610a6b576000856109b1600186610d41565b815181106109c1576109c1610d58565b602002602001015190506000866002866109db9190610d41565b815181106109eb576109eb610d58565b602002602001015190508082604051602001610a11929190918252602082015260400190565b6040516020818303038152906040528051906020012087600287610a359190610d41565b81518110610a4557610a45610d58565b6020908102919091010152610a5b600186610d41565b9450600184901c93505050610998565b610888565b82600114610aae5760405162461bcd60e51b815260206004820152600b60248201526a39ba30b1b59032b93937b960a91b604482015260640161012d565b84600081518110610ac157610ac1610d58565b60200260200101519750505050505050509392505050565b600080600060408486031215610aee57600080fd5b833567ffffffffffffffff80821115610b0657600080fd5b818601915086601f830112610b1a57600080fd5b813581811115610b2957600080fd5b876020828501011115610b3b57600080fd5b6020928301989097509590910135949350505050565b600060208284031215610b6357600080fd5b5035919050565b60008060008060008060a08789031215610b8357600080fd5b86359550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610bb757600080fd5b818901915089601f830112610bcb57600080fd5b813581811115610bda57600080fd5b8a60208260051b8501011115610bef57600080fd5b6020830194508093505050509295509295509295565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610c2e57600080fd5b823567ffffffffffffffff80821115610c4657600080fd5b818501915085601f830112610c5a57600080fd5b813581811115610c6c57610c6c610c05565b8060051b604051601f19603f83011681018181108582111715610c9157610c91610c05565b604052918252848201925083810185019188831115610caf57600080fd5b938501935b82851015610ccd57843584529385019392850192610cb4565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d0257610d02610cd9565b500190565b60008085851115610d1757600080fd5b83861115610d2457600080fd5b5050820193919092039150565b8183823760009101908152919050565b600082821015610d5357610d53610cd9565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018201610d8057610d80610cd9565b5060010190565b6000816000190483118215151615610da157610da1610cd9565b500290565b600060208284031215610db857600080fd5b8151801515811461022257600080fd5b600060208284031215610dda57600080fd5b815160ff8116811461022257600080fd5b600060ff821660ff84168060ff03821115610e0857610e08610cd9565b019392505050565b600060208284031215610e2257600080fd5b505191905056fe011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce4d9470a821fbe90117ec357e30bad9305732fb19ddf54a07dd3e29f440619254ae39ce8537aca75e2eff3e38c98011dfe934e700a0967732fc07b430dd656a233fc9a15f5b4869c872f81087bb6104b7d63e6f9ab47f2c43f3535eae7172aa7f17d2dd614cddaa4d879276b11e0672c9560033d3e8453a1d045339d34ba601b9c37b8b13ca95166fb7af16988a70fcc90f38bf9126fd833da710a47fb37a55e68e7a427fa943d9966b389f4f257173676090c6e95f43e2cb6d65f8758111e30930b0b9deb73e155c59740bacf14a6ff04b64bb8e201a506409c3fe381ca4ea90cd5deac729d0fdaccc441d09d7325f41586ba13c801b7eccae0f95d8f3933efed8b96e5b7f6f459e9cb6a2f41bf276c7b85c10cd4662c04cbbb365434726c0a0c9695393027fb106a8153109ac516288a88b28a93817899460d6310b71cf1e6163e8806fa0d4b197a259e8c3ac28864268159d0ac85f8581ca28fa7d2c0c03eb91e3eee5ca7a3da2b3053c9770db73599fb149f620e3facef95e947c0ee860b72122e31e4bbd2b7c783d79cc30f60c6238651da7f0726f767d22747264fdb046f7549f26cc70ed5e18baeb6c81bb0625cb95bb4019aeecd40774ee87ae29ec517a71f6ee264c5d761379b3d7d617ca83677374b49d10aec50505ac087408ca892b573c267a712a52e1d06421fe276a03efb1889f337201110fdc32a81f8e152499af665835aabfdc6740c7e2c3791a31c3cdc9f5ab962f681b12fc092816a62f27d86025599a41233848702f0cfc0437b445682df51147a632a0a083d2d38b5e13e466a8935afff58bb533b3ef5d27fba63ee6b0fd9e67ff20af9d50deee3f8bf065ec220c1fd4ba57e341261d55997f85d66d32152526736872693d2b437a233e2337b715f6ac9a6a272622fdc2d67fcfe1da3459f8dab4ed7e40a657a54c36766c5e8ac9a88b35b05c34747e6507f6b044ab66180dc76ac1a696de03189593fedc0d0dbbd855c8ead673544899b0960e4a5a7ca43b4ef90afe607de7698caefdc242788f654b57a4fb32a71b335ef6ff9a4cc118b282b53bdd6d6192b7a82c3c5126b9c7e33c8e5a5ac9738b8bd31247fb7402054f97b573e8abb9faad219f4fd085aceaa7f542d787ee4196d365f3cc566e7bbcfbfd451230c48d804c017d21e2d8fa914e2559bb72bf0ab78c8ab92f00ef0d0d576eccdd486b64138a4172674857e543d1d5b639058dd908186597e366ad5f3d9c7ceaff44d04d1550b8d33abc751df07437834ba5acb32328a396994aebb3c40f759c2d6d7a3cb5377e55d5d218ef5a296dda8ddc355f3f50c3d0b660a51dfa4d98a6a5a33564556cf83c1373a814641d6a1dcef97b883fee61bb84fe60a3409340217e629cc7e4dcc93b85d8820921ff5826148b60e6939acd7838e1d7f20562bff8ee4b5ec4a05ad997a57b9796fdcb2eda87883c2640b072b140b946bfdf6575cacc066fdae04f6951e63624cbd316a677cad529bbe4e97b9144e4bc06c4afd1de55dd3e1175f90423847a230d34dfb71ed56f2965a7f6c72e6aa33c24c303fd67745d632656c5ef90bec80f4f5d1daa251988826cef375c81c36bf457e09687056f924677cb0bccf98dff81e014ce25f2d132497923e267363963cdf4302c5049d63131dc03fd95f65d8b6aa5934f817252c028c90f56d413b9d5d10d89790707dae2fabb249f649929927c21dd71e3f656826de5451c5da375aadecbd59d5ebf3a31fae65ac1b316a1611f1b276b26530f58d7247df459ce1f86db1d734f6f811932f042cee45d0e455306d01081bc3384f82c5fb2aacaa19d89cdfa46cc916eac61121475ba2e6191b4feecbe1789717021a158ace5d06744b40f551076b67cd63af60007f8c99876e1424883a45ec49d497ddaf808a5521ca74a999ab0b3c7aa9c80f85e93977ec61ce68b20307a1a81f71ca645b568fcd319ccbb5f651e87b707d37c39e15f945ea69e2f7c7d2ccc85b7e654c07e96f0636ae4044fe0e38590b431795ad0f8647bdd613713ada493cc17efd313206380e6a685b8198475bbd021c6e9d94daab2214947127506073e44d5408ba166c512a0b86805d07f5a44d3c41706be2bc15e712e55805248b92e8677d90f6d284d1d6ffaff2c430657042a0e82624fa3717b06cc0a6fd12230ea586dae83019fb9e06034ed2803c98d554b93c9a52348cafff75c40174a91f9ae6b8647854a156029f0b88b83316663ce574a4978277bb6bb27a31085634b6ec78864b6d8201c7e93903d75815067e378289a3d072ae172dafa6a452470f8d645bebfad9779594fc0784bb764a22e3a8181d93db7bf97893c414217a618ccb14caa9e92e8c61673afc9583662e812adba1f87a9c68202d60e909efab43c42c0cb00695fc7f1ffe67c75ca894c3c51e1e5e731360199e600f6ced9a87b2a6a87e70bf251bb5075ab222138288164b2eda727515ea7de12e2496d4fe42ea8d1a120c03cf9c50622c2afe4acb0dad98fd62d07ab4e828a94495f6d1ab973982c7ccbe6c1fae02788e4422ae22282fa49cbdb04ba54a7a238c6fc41187451383460762c06d1c8a72b9cd718866ad4b689e10c9a8c38fe5ef045bd785b01e980fc82c7e3532ce81876b778dd9f1ceeba4478e86411fb6fdd790683916ca832592485093644e8760cd7b4c01dba1ccc82b661bf13f0e3f34acd6b88a26469706673582212204a40224fd3591aa04fd04ce875d6c9c3db7f8c704fe0613b137a0e7eb4f957f764736f6c634300080d0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806334bd712d14610066578063451a10551461008b57806379de46011461009e57806382b0eab8146100b1578063c84583a1146100c4575b600080fd5b610079610074366004610ad9565b6100d7565b60405190815260200160405180910390f35b610079610099366004610b51565b610229565b6100796100ac366004610b6a565b6102ba565b6100796100bf366004610c1b565b6104d0565b6100796100d2366004610ad9565b6106cb565b6000600382901b816100ea600883610cef565b9050848211156101365760405162461bcd60e51b8152602060048201526012602482015271776f7264206f7574206f6620626f756e647360701b60448201526064015b60405180910390fd5b8481116101795761014981838789610d07565b60405160200161015a929190610d31565b6040516020818303038152906040528051906020012092505050610222565b60408051600880825281830190925260009160208201818036833701905050905060006101a68488610d41565b905060005b818110156102135788886101bf8388610cef565b8181106101ce576101ce610d58565b9050013560f81c60f81b8382815181106101ea576101ea610d58565b60200101906001600160f81b031916908160001a9053508061020b81610d6e565b9150506101ab565b50508051602090910120925050505b9392505050565b600080610237836020610d87565b9050610244816020610cef565b6107a0101561028b5760405162461bcd60e51b8152602060048201526013602482015272696e646578206f7574206f6620626f756e647360681b604482015260640161012d565b600080604051806107c001604052806107a08152602001610e2a6107a091399290920160200151949350505050565b60008585101580156102cd575060038610155b80156102da575060408511155b6103445760405162461bcd60e51b815260206004820152603560248201527f33203c3d206c6f6753697a654f665265706c6163656d656e74203c3d206c6f6760448201527414da5e9953d9919d5b1b111c9a5d99480f0f480d8d605a1b606482015260840161012d565b600180871b9088906103569083610d41565b16156103a45760405162461bcd60e51b815260206004820152601760248201527f506f736974696f6e206973206e6f7420616c69676e6564000000000000000000604482015260640161012d565b6103ae8787610d41565b83146103fc5760405162461bcd60e51b815260206004820152601b60248201527f50726f6f66206c656e67746820646f6573206e6f74206d617463680000000000604482015260640161012d565b60005b838110156104c35781811b8916600003610464578585858381811061042657610426610d58565b90506020020135604051602001610447929190918252602082015260400190565b6040516020818303038152906040528051906020012095506104b1565b84848281811061047657610476610d58565b9050602002013586604051602001610498929190918252602082015260400190565b6040516020818303038152906040528051906020012095505b806104bb81610d6e565b9150506103ff565b5093979650505050505050565b805160405163d82ae4b160e01b815260009173__$114cc05e390485200171fdb6122b6fcd26$__9163d82ae4b19161050e9160040190815260200190565b602060405180830381865af415801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610da6565b61059b5760405162461bcd60e51b815260206004820152601860248201527f6172726179206c656e206e6f7420706f776572206f6620320000000000000000604482015260640161012d565b81516001036105c657816000815181106105b7576105b7610d58565b60200260200101519050919050565b600060018351901c67ffffffffffffffff8111156105e6576105e6610c05565b60405190808252806020026020018201604052801561060f578160200160208202803683370190505b50905060005b83518110156106c15783818151811061063057610630610d58565b6020026020010151848260016106469190610cef565b8151811061065657610656610d58565b6020026020010151604051602001610678929190918252602082015260400190565b6040516020818303038152906040528051906020012082600183901c815181106106a4576106a4610d58565b60209081029190910101526106ba600282610cef565b9050610615565b50610222816104d0565b6000600382101580156106df575060408211155b61072b5760405162461bcd60e51b815260206004820152601960248201527f72616e6765206f66206c6f673253697a653a205b332c36345d00000000000000604482015260640161012d565b600083900361074957610742610099600384610d41565b9050610222565b6000610756600384610d41565b6001901b9050600381901b8411156107b05760405162461bcd60e51b815260206004820152601960248201527f6461746120697320626967676572207468616e20647269766500000000000000604482015260640161012d565b6040516306c8e54b60e01b8152600385901c600482015260009073__$114cc05e390485200171fdb6122b6fcd26$__906306c8e54b90602401602060405180830381865af4158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a9190610dc8565b610835906002610deb565b60ff16905060008167ffffffffffffffff81111561085557610855610c05565b60405190808252806020026020018201604052801561087e578160200160208202803683370190505b5090506000806000805b86841015610a7057600384901b8a11156108d9576108a78b8b866100d7565b8584815181106108b9576108b9610d58565b6020908102919091010152836108ce81610d6e565b94505083915061098a565b60405163052dcf5f60e31b81526004810185905273__$114cc05e390485200171fdb6122b6fcd26$__9063296e7af890602401602060405180830381865af4158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190610e10565b905061095881610229565b85848151811061096a5761096a610d58565b60209081029190910101526109826001821b85610cef565b935083811c91505b8261099481610d6e565b9350505b81600116600003610a6b576000856109b1600186610d41565b815181106109c1576109c1610d58565b602002602001015190506000866002866109db9190610d41565b815181106109eb576109eb610d58565b602002602001015190508082604051602001610a11929190918252602082015260400190565b6040516020818303038152906040528051906020012087600287610a359190610d41565b81518110610a4557610a45610d58565b6020908102919091010152610a5b600186610d41565b9450600184901c93505050610998565b610888565b82600114610aae5760405162461bcd60e51b815260206004820152600b60248201526a39ba30b1b59032b93937b960a91b604482015260640161012d565b84600081518110610ac157610ac1610d58565b60200260200101519750505050505050509392505050565b600080600060408486031215610aee57600080fd5b833567ffffffffffffffff80821115610b0657600080fd5b818601915086601f830112610b1a57600080fd5b813581811115610b2957600080fd5b876020828501011115610b3b57600080fd5b6020928301989097509590910135949350505050565b600060208284031215610b6357600080fd5b5035919050565b60008060008060008060a08789031215610b8357600080fd5b86359550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610bb757600080fd5b818901915089601f830112610bcb57600080fd5b813581811115610bda57600080fd5b8a60208260051b8501011115610bef57600080fd5b6020830194508093505050509295509295509295565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610c2e57600080fd5b823567ffffffffffffffff80821115610c4657600080fd5b818501915085601f830112610c5a57600080fd5b813581811115610c6c57610c6c610c05565b8060051b604051601f19603f83011681018181108582111715610c9157610c91610c05565b604052918252848201925083810185019188831115610caf57600080fd5b938501935b82851015610ccd57843584529385019392850192610cb4565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d0257610d02610cd9565b500190565b60008085851115610d1757600080fd5b83861115610d2457600080fd5b5050820193919092039150565b8183823760009101908152919050565b600082821015610d5357610d53610cd9565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018201610d8057610d80610cd9565b5060010190565b6000816000190483118215151615610da157610da1610cd9565b500290565b600060208284031215610db857600080fd5b8151801515811461022257600080fd5b600060208284031215610dda57600080fd5b815160ff8116811461022257600080fd5b600060ff821660ff84168060ff03821115610e0857610e08610cd9565b019392505050565b600060208284031215610e2257600080fd5b505191905056fe011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce4d9470a821fbe90117ec357e30bad9305732fb19ddf54a07dd3e29f440619254ae39ce8537aca75e2eff3e38c98011dfe934e700a0967732fc07b430dd656a233fc9a15f5b4869c872f81087bb6104b7d63e6f9ab47f2c43f3535eae7172aa7f17d2dd614cddaa4d879276b11e0672c9560033d3e8453a1d045339d34ba601b9c37b8b13ca95166fb7af16988a70fcc90f38bf9126fd833da710a47fb37a55e68e7a427fa943d9966b389f4f257173676090c6e95f43e2cb6d65f8758111e30930b0b9deb73e155c59740bacf14a6ff04b64bb8e201a506409c3fe381ca4ea90cd5deac729d0fdaccc441d09d7325f41586ba13c801b7eccae0f95d8f3933efed8b96e5b7f6f459e9cb6a2f41bf276c7b85c10cd4662c04cbbb365434726c0a0c9695393027fb106a8153109ac516288a88b28a93817899460d6310b71cf1e6163e8806fa0d4b197a259e8c3ac28864268159d0ac85f8581ca28fa7d2c0c03eb91e3eee5ca7a3da2b3053c9770db73599fb149f620e3facef95e947c0ee860b72122e31e4bbd2b7c783d79cc30f60c6238651da7f0726f767d22747264fdb046f7549f26cc70ed5e18baeb6c81bb0625cb95bb4019aeecd40774ee87ae29ec517a71f6ee264c5d761379b3d7d617ca83677374b49d10aec50505ac087408ca892b573c267a712a52e1d06421fe276a03efb1889f337201110fdc32a81f8e152499af665835aabfdc6740c7e2c3791a31c3cdc9f5ab962f681b12fc092816a62f27d86025599a41233848702f0cfc0437b445682df51147a632a0a083d2d38b5e13e466a8935afff58bb533b3ef5d27fba63ee6b0fd9e67ff20af9d50deee3f8bf065ec220c1fd4ba57e341261d55997f85d66d32152526736872693d2b437a233e2337b715f6ac9a6a272622fdc2d67fcfe1da3459f8dab4ed7e40a657a54c36766c5e8ac9a88b35b05c34747e6507f6b044ab66180dc76ac1a696de03189593fedc0d0dbbd855c8ead673544899b0960e4a5a7ca43b4ef90afe607de7698caefdc242788f654b57a4fb32a71b335ef6ff9a4cc118b282b53bdd6d6192b7a82c3c5126b9c7e33c8e5a5ac9738b8bd31247fb7402054f97b573e8abb9faad219f4fd085aceaa7f542d787ee4196d365f3cc566e7bbcfbfd451230c48d804c017d21e2d8fa914e2559bb72bf0ab78c8ab92f00ef0d0d576eccdd486b64138a4172674857e543d1d5b639058dd908186597e366ad5f3d9c7ceaff44d04d1550b8d33abc751df07437834ba5acb32328a396994aebb3c40f759c2d6d7a3cb5377e55d5d218ef5a296dda8ddc355f3f50c3d0b660a51dfa4d98a6a5a33564556cf83c1373a814641d6a1dcef97b883fee61bb84fe60a3409340217e629cc7e4dcc93b85d8820921ff5826148b60e6939acd7838e1d7f20562bff8ee4b5ec4a05ad997a57b9796fdcb2eda87883c2640b072b140b946bfdf6575cacc066fdae04f6951e63624cbd316a677cad529bbe4e97b9144e4bc06c4afd1de55dd3e1175f90423847a230d34dfb71ed56f2965a7f6c72e6aa33c24c303fd67745d632656c5ef90bec80f4f5d1daa251988826cef375c81c36bf457e09687056f924677cb0bccf98dff81e014ce25f2d132497923e267363963cdf4302c5049d63131dc03fd95f65d8b6aa5934f817252c028c90f56d413b9d5d10d89790707dae2fabb249f649929927c21dd71e3f656826de5451c5da375aadecbd59d5ebf3a31fae65ac1b316a1611f1b276b26530f58d7247df459ce1f86db1d734f6f811932f042cee45d0e455306d01081bc3384f82c5fb2aacaa19d89cdfa46cc916eac61121475ba2e6191b4feecbe1789717021a158ace5d06744b40f551076b67cd63af60007f8c99876e1424883a45ec49d497ddaf808a5521ca74a999ab0b3c7aa9c80f85e93977ec61ce68b20307a1a81f71ca645b568fcd319ccbb5f651e87b707d37c39e15f945ea69e2f7c7d2ccc85b7e654c07e96f0636ae4044fe0e38590b431795ad0f8647bdd613713ada493cc17efd313206380e6a685b8198475bbd021c6e9d94daab2214947127506073e44d5408ba166c512a0b86805d07f5a44d3c41706be2bc15e712e55805248b92e8677d90f6d284d1d6ffaff2c430657042a0e82624fa3717b06cc0a6fd12230ea586dae83019fb9e06034ed2803c98d554b93c9a52348cafff75c40174a91f9ae6b8647854a156029f0b88b83316663ce574a4978277bb6bb27a31085634b6ec78864b6d8201c7e93903d75815067e378289a3d072ae172dafa6a452470f8d645bebfad9779594fc0784bb764a22e3a8181d93db7bf97893c414217a618ccb14caa9e92e8c61673afc9583662e812adba1f87a9c68202d60e909efab43c42c0cb00695fc7f1ffe67c75ca894c3c51e1e5e731360199e600f6ced9a87b2a6a87e70bf251bb5075ab222138288164b2eda727515ea7de12e2496d4fe42ea8d1a120c03cf9c50622c2afe4acb0dad98fd62d07ab4e828a94495f6d1ab973982c7ccbe6c1fae02788e4422ae22282fa49cbdb04ba54a7a238c6fc41187451383460762c06d1c8a72b9cd718866ad4b689e10c9a8c38fe5ef045bd785b01e980fc82c7e3532ce81876b778dd9f1ceeba4478e86411fb6fdd790683916ca832592485093644e8760cd7b4c01dba1ccc82b661bf13f0e3f34acd6b88a26469706673582212204a40224fd3591aa04fd04ce875d6c9c3db7f8c704fe0613b137a0e7eb4f957f764736f6c634300080d0033",
  "linkReferences": {
    "@cartesi/util/contracts/CartesiMath.sol": {
      "CartesiMath": [
        {
          "length": 20,
          "start": 1310
        },
        {
          "length": 20,
          "start": 2054
        },
        {
          "length": 20,
          "start": 2345
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@cartesi/util/contracts/CartesiMath.sol": {
      "CartesiMath": [
        {
          "length": 20,
          "start": 1252
        },
        {
          "length": 20,
          "start": 1996
        },
        {
          "length": 20,
          "start": 2287
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "calculateRootFromPowerOfTwo(bytes32[])": {
        "params": {
          "hashes": "The array containing power of 2 elements"
        },
        "returns": {
          "_0": "byte32 the root hash being calculated"
        }
      },
      "getEmptyTreeHashAtIndex(uint256)": {
        "details": "first index is keccak(0), second index is keccak(keccak(0), keccak(0))",
        "params": {
          "_index": "of hash wanted"
        }
      },
      "getHashOfWordAtIndex(bytes,uint256)": {
        "details": "if word is incomplete (< 8 bytes) it gets padded with zeroes",
        "params": {
          "_data": "array of bytes",
          "_wordIndex": "index of word inside the bytes to get the hash of"
        }
      },
      "getMerkleRootFromBytes(bytes,uint256)": {
        "details": "_data is padded with zeroes until is multiple of 8root is completed with zero tree until log2size is completehashes are taken word by word (8 bytes by 8 bytes)",
        "params": {
          "_data": "array of bytes to be merklelized",
          "_log2Size": "log2 of total size of the drive"
        }
      },
      "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": {
        "params": {
          "_logSizeOfFullDrive": "log2 of size the full drive, which can be the entire machine",
          "_logSizeOfReplacement": "log2 of size the replacement",
          "_position": "position of _drive",
          "_replacement": "hash of the replacement",
          "siblings": "of replacement that merkle root can be calculated"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {
        "@cartesi/util/contracts/CartesiMath.sol": {
          "CartesiMath": [
            {
              "length": 20,
              "start": 1310
            },
            {
              "length": 20,
              "start": 2054
            },
            {
              "length": 20,
              "start": 2345
            }
          ]
        }
      },
      "opcodes": "PUSH2 0x15FF PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34BD712D EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x451A1055 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x79DE4601 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x82B0EAB8 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC84583A1 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST PUSH2 0x79 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x79 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x79 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 SWAP1 SHL DUP2 PUSH2 0xEA PUSH1 0x8 DUP4 PUSH2 0xCEF JUMP JUMPDEST SWAP1 POP DUP5 DUP3 GT ISZERO PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x776F7264206F7574206F6620626F756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 GT PUSH2 0x179 JUMPI PUSH2 0x149 DUP2 DUP4 DUP8 DUP10 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15A SWAP3 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A6 DUP5 DUP9 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI DUP9 DUP9 PUSH2 0x1BF DUP4 DUP9 PUSH2 0xCEF JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1CE JUMPI PUSH2 0x1CE PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH2 0x20B DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AB JUMP JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH1 0x20 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x244 DUP2 PUSH1 0x20 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x7A0 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x696E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x7C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x7A0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2A PUSH2 0x7A0 SWAP2 CODECOPY SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x2CD JUMPI POP PUSH1 0x3 DUP7 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI POP PUSH1 0x40 DUP6 GT ISZERO JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x33203C3D206C6F6753697A654F665265706C6163656D656E74203C3D206C6F67 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x14DA5E9953D9919D5B1B111C9A5D99480F0F480D8D PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x1 DUP1 DUP8 SHL SWAP1 DUP9 SWAP1 PUSH2 0x356 SWAP1 DUP4 PUSH2 0xD41 JUMP JUMPDEST AND ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E206973206E6F7420616C69676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x3AE DUP8 DUP8 PUSH2 0xD41 JUMP JUMPDEST DUP4 EQ PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F66206C656E67746820646F6573206E6F74206D617463680000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C3 JUMPI DUP2 DUP2 SHL DUP10 AND PUSH1 0x0 SUB PUSH2 0x464 JUMPI DUP6 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x426 JUMPI PUSH2 0x426 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x447 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP PUSH2 0x4B1 JUMP JUMPDEST DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x476 JUMPI PUSH2 0x476 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x498 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP JUMPDEST DUP1 PUSH2 0x4BB DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FF JUMP JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xD82AE4B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xD82AE4B1 SWAP2 PUSH2 0x50E SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6172726179206C656E206E6F7420706F776572206F6620320000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 SUB PUSH2 0x5C6 JUMPI DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 MLOAD SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH2 0x5E6 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x60F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x6C1 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x630 JUMPI PUSH2 0x630 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 PUSH1 0x1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x656 JUMPI PUSH2 0x656 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x678 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 DUP4 SWAP1 SHR DUP2 MLOAD DUP2 LT PUSH2 0x6A4 JUMPI PUSH2 0x6A4 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6BA PUSH1 0x2 DUP3 PUSH2 0xCEF JUMP JUMPDEST SWAP1 POP PUSH2 0x615 JUMP JUMPDEST POP PUSH2 0x222 DUP2 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI POP PUSH1 0x40 DUP3 GT ISZERO JUMPDEST PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72616E6765206F66206C6F673253697A653A205B332C36345D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x749 JUMPI PUSH2 0x742 PUSH2 0x99 PUSH1 0x3 DUP5 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP PUSH2 0x222 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x756 PUSH1 0x3 DUP5 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x3 DUP2 SWAP1 SHL DUP5 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6461746120697320626967676572207468616E20647269766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6C8E54B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x3 DUP6 SWAP1 SHR PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x6C8E54B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82A SWAP2 SWAP1 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0x835 SWAP1 PUSH1 0x2 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x855 JUMPI PUSH2 0x855 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP5 LT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x3 DUP5 SWAP1 SHL DUP11 GT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8A7 DUP12 DUP12 DUP7 PUSH2 0xD7 JUMP JUMPDEST DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8B9 JUMPI PUSH2 0x8B9 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP4 PUSH2 0x8CE DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP5 POP POP DUP4 SWAP2 POP PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52DCF5F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x296E7AF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0x958 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x96A JUMPI PUSH2 0x96A PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x982 PUSH1 0x1 DUP3 SHL DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP4 POP DUP4 DUP2 SHR SWAP2 POP JUMPDEST DUP3 PUSH2 0x994 DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0xA6B JUMPI PUSH1 0x0 DUP6 PUSH2 0x9B1 PUSH1 0x1 DUP7 PUSH2 0xD41 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH2 0x9C1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP7 PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9EB JUMPI PUSH2 0x9EB PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA11 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x2 DUP8 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA45 JUMPI PUSH2 0xA45 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xA5B PUSH1 0x1 DUP7 PUSH2 0xD41 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP5 SWAP1 SHR SWAP4 POP POP POP PUSH2 0x998 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x39BA30B1B59032B93937B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAC1 JUMPI PUSH2 0xAC1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP8 POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC6C JUMPI PUSH2 0xC6C PUSH2 0xC05 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xCCD JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xCB4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD02 PUSH2 0xCD9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD53 PUSH2 0xCD9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD80 JUMPI PUSH2 0xD80 PUSH2 0xCD9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA1 PUSH2 0xCD9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0xE08 JUMPI PUSH2 0xE08 PUSH2 0xCD9 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID ADD SHL 0x4D SUB 0xDD DUP13 ADD CALL DIV SWAP2 NUMBER 0xCF SWAP13 0x4C DUP2 PUSH31 0x4B167F1D1B83E5C6F0F10D89BA1E7BCE4D9470A821FBE90117EC357E30BAD9 ADDRESS JUMPI ORIGIN 0xFB NOT 0xDD CREATE2 0x4A SMOD 0xDD RETURNDATACOPY 0x29 DELEGATECALL BLOCKHASH PUSH2 0x9254 0xAE CODECOPY 0xCE DUP6 CALLDATACOPY 0xAC 0xA7 0x5E 0x2E SELFDESTRUCT RETURNDATACOPY CODESIZE 0xC9 DUP1 GT 0xDF 0xE9 CALLVALUE 0xE7 STOP LOG0 SWAP7 PUSH24 0x32FC07B430DD656A233FC9A15F5B4869C872F81087BB6104 0xB7 0xD6 RETURNDATACOPY PUSH16 0x9AB47F2C43F3535EAE7172AA7F17D2DD PUSH2 0x4CDD 0xAA 0x4D DUP8 SWAP3 PUSH23 0xB11E0672C9560033D3E8453A1D045339D34BA601B9C37B DUP12 SGT 0xCA SWAP6 AND PUSH16 0xB7AF16988A70FCC90F38BF9126FD833D 0xA7 LT LOG4 PUSH32 0xB37A55E68E7A427FA943D9966B389F4F257173676090C6E95F43E2CB6D65F875 DUP2 GT 0xE3 MULMOD ADDRESS 0xB0 0xB9 0xDE 0xB7 RETURNDATACOPY ISZERO 0x5C MSIZE PUSH21 0xBACF14A6FF04B64BB8E201A506409C3FE381CA4EA SWAP1 0xCD 0x5D 0xEA 0xC7 0x29 0xD0 REVERT 0xAC 0xCC DIFFICULTY SAR MULMOD 0xD7 ORIGIN 0x5F COINBASE PC PUSH12 0xA13C801B7ECCAE0F95D8F393 RETURNDATACOPY INVALID 0xD8 0xB9 PUSH15 0x5B7F6F459E9CB6A2F41BF276C7B85C LT 0xCD CHAINID PUSH3 0xC04CBB 0xB3 PUSH6 0x434726C0A0C9 PUSH10 0x5393027FB106A8153109 0xAC MLOAD PUSH3 0x88A88B 0x28 0xA9 CODESIZE OR DUP10 SWAP5 PUSH1 0xD6 BALANCE SIGNEXTEND PUSH18 0xCF1E6163E8806FA0D4B197A259E8C3AC2886 TIMESTAMP PUSH9 0x159D0AC85F8581CA28 STATICCALL PUSH30 0x2C0C03EB91E3EEE5CA7A3DA2B3053C9770DB73599FB149F620E3FACEF95E SWAP5 PUSH29 0xEE860B72122E31E4BBD2B7C783D79CC30F60C6238651DA7F0726F767D 0x22 PUSH21 0x7264FDB046F7549F26CC70ED5E18BAEB6C81BB0625 0xCB SWAP6 0xBB BLOCKHASH NOT 0xAE 0xEC 0xD4 SMOD PUSH21 0xEE87AE29EC517A71F6EE264C5D761379B3D7D617CA DUP4 PUSH8 0x7374B49D10AEC505 SDIV 0xAC ADDMOD PUSH21 0x8CA892B573C267A712A52E1D06421FE276A03EFB1 DUP9 SWAP16 CALLER PUSH19 0x1110FDC32A81F8E152499AF665835AABFDC67 BLOCKHASH 0xC7 0xE2 0xC3 PUSH26 0x1A31C3CDC9F5AB962F681B12FC092816A62F27D86025599A4123 CODESIZE BASEFEE PUSH17 0x2F0CFC0437B445682DF51147A632A0A083 0xD2 0xD3 DUP12 0x5E SGT 0xE4 PUSH7 0xA8935AFFF58BB5 CALLER 0xB3 0xEF 0x5D 0x27 0xFB 0xA6 RETURNDATACOPY 0xE6 0xB0 REVERT SWAP15 PUSH8 0xFF20AF9D50DEEE3F DUP12 CREATE PUSH6 0xEC220C1FD4BA JUMPI 0xE3 COINBASE 0x26 SAR SSTORE SWAP10 PUSH32 0x85D66D32152526736872693D2B437A233E2337B715F6AC9A6A272622FDC2D67F 0xCF 0xE1 0xDA CALLVALUE MSIZE 0xF8 0xDA 0xB4 0xED PUSH31 0x40A657A54C36766C5E8AC9A88B35B05C34747E6507F6B044AB66180DC76AC1 0xA6 SWAP7 0xDE SUB XOR SWAP6 SWAP4 INVALID 0xDC 0xD 0xD 0xBB 0xD8 SSTORE 0xC8 0xEA 0xD6 PUSH20 0x544899B0960E4A5A7CA43B4EF90AFE607DE7698C 0xAE REVERT 0xC2 TIMESTAMP PUSH25 0x8F654B57A4FB32A71B335EF6FF9A4CC118B282B53BDD6D6192 0xB7 0xA8 0x2C EXTCODECOPY MLOAD 0x26 0xB9 0xC7 0xE3 EXTCODECOPY DUP15 GAS GAS 0xC9 PUSH20 0x8B8BD31247FB7402054F97B573E8ABB9FAAD219F 0x4F 0xD0 DUP6 0xAC 0xEA 0xA7 CREATE2 TIMESTAMP 0xD7 DUP8 0xEE COINBASE SWAP7 0xD3 PUSH6 0xF3CC566E7BBC 0xFB REVERT GASLIMIT SLT ADDRESS 0xC4 DUP14 DUP1 0x4C ADD PUSH30 0x21E2D8FA914E2559BB72BF0AB78C8AB92F00EF0D0D576ECCDD486B64138A COINBASE PUSH19 0x674857E543D1D5B639058DD908186597E366AD 0x5F RETURNDATASIZE SWAP13 PUSH29 0xEAFF44D04D1550B8D33ABC751DF07437834BA5ACB32328A396994AEBB3 0xC4 0xF PUSH22 0x9C2D6D7A3CB5377E55D5D218EF5A296DDA8DDC355F3F POP 0xC3 0xD0 0xB6 PUSH1 0xA5 SAR STATICCALL 0x4D SWAP9 0xA6 0xA5 LOG3 CALLDATALOAD PUSH5 0x556CF83C13 PUSH20 0xA814641D6A1DCEF97B883FEE61BB84FE60A34093 BLOCKHASH 0x21 PUSH31 0x629CC7E4DCC93B85D8820921FF5826148B60E6939ACD7838E1D7F20562BFF8 0xEE 0x4B 0x5E 0xC4 LOG0 GAS 0xD9 SWAP8 0xA5 PUSH28 0x9796FDCB2EDA87883C2640B072B140B946BFDF6575CACC066FDAE04F PUSH10 0x51E63624CBD316A677CA 0xD5 0x29 0xBB 0xE4 0xE9 PUSH28 0x9144E4BC06C4AFD1DE55DD3E1175F90423847A230D34DFB71ED56F29 PUSH6 0xA7F6C72E6AA3 EXTCODECOPY 0x24 0xC3 SUB REVERT PUSH8 0x745D632656C5EF90 0xBE 0xC8 0xF 0x4F 0x5D SAR 0xAA 0x25 NOT DUP9 DUP3 PUSH13 0xEF375C81C36BF457E09687056F SWAP3 CHAINID PUSH24 0xCB0BCCF98DFF81E014CE25F2D132497923E267363963CDF4 ADDRESS 0x2C POP 0x49 0xD6 BALANCE BALANCE 0xDC SUB REVERT SWAP6 0xF6 0x5D DUP12 PUSH11 0xA5934F817252C028C90F56 0xD4 SGT 0xB9 0xD5 0xD1 0xD DUP10 PUSH26 0x707DAE2FABB249F649929927C21DD71E3F656826DE5451C5DA3 PUSH22 0xAADECBD59D5EBF3A31FAE65AC1B316A1611F1B276B26 MSTORE8 0xF PC 0xD7 0x24 PUSH30 0xF459CE1F86DB1D734F6F811932F042CEE45D0E455306D01081BC3384F82C 0x5F 0xB2 0xAA 0xCA LOG1 SWAP14 DUP10 0xCD STATICCALL CHAINID 0xCC SWAP2 PUSH15 0xAC61121475BA2E6191B4FEECBE1789 PUSH18 0x7021A158ACE5D06744B40F551076B67CD63A 0xF6 STOP SMOD 0xF8 0xC9 SWAP9 PUSH23 0xE1424883A45EC49D497DDAF808A5521CA74A999AB0B3C7 0xAA SWAP13 DUP1 0xF8 0x5E SWAP4 SWAP8 PUSH31 0xC61CE68B20307A1A81F71CA645B568FCD319CCBB5F651E87B707D37C39E15F SWAP5 0x5E 0xA6 SWAP15 0x2F PUSH29 0x7D2CCC85B7E654C07E96F0636AE4044FE0E38590B431795AD0F8647BDD PUSH2 0x3713 0xAD LOG4 SWAP4 0xCC OR 0xEF 0xD3 SGT KECCAK256 PUSH4 0x80E6A685 0xB8 NOT DUP5 PUSH22 0xBBD021C6E9D94DAAB2214947127506073E44D5408BA1 PUSH7 0xC512A0B86805D0 PUSH32 0x5A44D3C41706BE2BC15E712E55805248B92E8677D90F6D284D1D6FFAFF2C4306 JUMPI DIV 0x2A 0xE DUP3 PUSH3 0x4FA371 PUSH28 0x6CC0A6FD12230EA586DAE83019FB9E06034ED2803C98D554B93C9A5 0x23 BASEFEE 0xCA SELFDESTRUCT 0xF7 0x5C BLOCKHASH OR 0x4A SWAP2 0xF9 0xAE PUSH12 0x8647854A156029F0B88B8331 PUSH7 0x63CE574A497827 PUSH28 0xB6BB27A31085634B6EC78864B6D8201C7E93903D75815067E378289A RETURNDATASIZE SMOD 0x2A 0xE1 PUSH19 0xDAFA6A452470F8D645BEBFAD9779594FC0784B 0xB7 PUSH5 0xA22E3A8181 0xD9 RETURNDATASIZE 0xB7 0xBF SWAP8 DUP10 EXTCODECOPY COINBASE TIMESTAMP OR 0xA6 XOR 0xCC 0xB1 0x4C 0xAA SWAP15 SWAP3 0xE8 0xC6 AND PUSH20 0xAFC9583662E812ADBA1F87A9C68202D60E909EFA 0xB4 EXTCODECOPY TIMESTAMP 0xC0 0xCB STOP PUSH10 0x5FC7F1FFE67C75CA894C EXTCODECOPY MLOAD 0xE1 0xE5 0xE7 BALANCE CALLDATASIZE ADD SWAP10 0xE6 STOP 0xF6 0xCE 0xD9 0xA8 PUSH28 0x2A6A87E70BF251BB5075AB222138288164B2EDA727515EA7DE12E249 PUSH14 0x4FE42EA8D1A120C03CF9C50622C2 0xAF 0xE4 0xAC 0xB0 0xDA 0xD9 DUP16 0xD6 0x2D SMOD 0xAB 0x4E DUP3 DUP11 SWAP5 0x49 0x5F PUSH14 0x1AB973982C7CCBE6C1FAE02788E4 TIMESTAMP 0x2A 0xE2 0x22 DUP3 STATICCALL 0x49 0xCB 0xDB DIV 0xBA SLOAD 0xA7 LOG2 CODESIZE 0xC6 0xFC COINBASE XOR PUSH21 0x51383460762C06D1C8A72B9CD718866AD4B689E10C SWAP11 DUP13 CODESIZE INVALID 0x5E CREATE GASLIMIT 0xBD PUSH25 0x5B01E980FC82C7E3532CE81876B778DD9F1CEEBA4478E86411 0xFB PUSH16 0xDD790683916CA832592485093644E876 0xC 0xD7 0xB4 0xC0 SAR 0xBA SHR 0xCC DUP3 0xB6 PUSH2 0xBF13 CREATE 0xE3 RETURN 0x4A 0xCD PUSH12 0x88A26469706673582212204A BLOCKHASH 0x22 0x4F 0xD3 MSIZE BYTE LOG0 0x4F 0xD0 0x4C 0xE8 PUSH22 0xD6C9C3DB7F8C704FE0613B137A0E7EB4F957F764736F PUSH13 0x634300080D0033000000000000 ",
      "sourceMap": "708:11508:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;708:11508:2;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@calculateRootFromPowerOfTwo_1146": {
          "entryPoint": 1232,
          "id": 1146,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getEmptyTreeHashAtIndex_765": {
          "entryPoint": 553,
          "id": 765,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getHashOfWordAtIndex_1065": {
          "entryPoint": 215,
          "id": 1065,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getMerkleRootFromBytes_976": {
          "entryPoint": 1739,
          "id": 976,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getRootAfterReplacementInDrive_731": {
          "entryPoint": 698,
          "id": 731,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr": {
          "entryPoint": 3099,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 3494,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes_calldata_ptrt_uint256": {
          "entryPoint": 2777,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 2897,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 3600,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_calldata_ptr": {
          "entryPoint": 2922,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 6
        },
        "abi_decode_tuple_t_uint8_fromMemory": {
          "entryPoint": 3528,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_calldata_ptr_slice__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 3377,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_15af30d584791b2d15f96e44f381f21fdbca8deb5781606163acc1df2ee321ce__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_44b0b1c5b161a7806824676cd6612d5ef3299e86645f5328a549a68b8a10bbe3__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_523f20b5920c0fcf685b39690311653b566cebaa86fada1cf192f28f8ac8014f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_6241252ba649d15bf00762829e6dd7773f21033a5420d256f52c9ff9153cec7b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_796a1b217b66546f9c4f7788d552b7e18faafb903288eefdc97134ec2d90310c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_b4557f2a59adddfd6243c6a911e57a7e5a69a40a13ce65f7b00f2d4d4fb36734__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c2944b7cebd8ea380290646bd5db7dba4bf913fc3ed4fd93c852f0f73d3128e7__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_eed516072b2550c72e3348ead859d99a87d4879a686eafecb170998606c300b2__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_f61e918a50d782deb5b37382531eaadbc7442ac7ba3465a3555177d7de818744__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "calldata_array_index_range_access_t_bytes_calldata_ptr": {
          "entryPoint": 3335,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 2
        },
        "checked_add_t_uint256": {
          "entryPoint": 3311,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_add_t_uint8": {
          "entryPoint": 3563,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 3463,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 3393,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "increment_t_uint256": {
          "entryPoint": 3438,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 3289,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 3416,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 3077,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:9286:49",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:49",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "120:559:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "166:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "175:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "168:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "168:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "168:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "141:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "150:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "162:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "133:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "133:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "130:52:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "191:37:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "218:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "205:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "205:23:49"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "195:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "237:28:49",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "247:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "241:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "292:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "301:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "304:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "294:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "294:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "294:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "280:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "288:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "277:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "277:14:49"
                      },
                      "nodeType": "YulIf",
                      "src": "274:34:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "317:32:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "331:9:49"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "327:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "327:22:49"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "321:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "397:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "406:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "409:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "399:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "399:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "399:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "376:2:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "380:4:49",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "372:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "372:13:49"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "387:7:49"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "368:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "368:27:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "361:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "361:35:49"
                      },
                      "nodeType": "YulIf",
                      "src": "358:55:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "422:30:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "449:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "436:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "436:16:49"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "426:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "479:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "488:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "491:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "481:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "481:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "481:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "467:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "475:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "464:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:14:49"
                      },
                      "nodeType": "YulIf",
                      "src": "461:34:49"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "547:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "556:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "559:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "549:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "549:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "549:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "518:2:49"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:6:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "514:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "514:15:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "531:4:49",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:26:49"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "538:7:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "507:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:39:49"
                      },
                      "nodeType": "YulIf",
                      "src": "504:59:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "572:23:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "586:2:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "590:4:49",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "582:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:13:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "572:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "604:16:49",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "614:6:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "604:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "629:44:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "656:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "667:4:49",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "652:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "652:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "639:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "639:34:49"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "629:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_calldata_ptrt_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "70:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "81:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "93:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "101:6:49",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "109:6:49",
                    "type": ""
                  }
                ],
                "src": "14:665:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "793:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "803:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "815:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "826:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "811:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "811:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "803:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "845:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "856:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "838:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "838:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "838:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "762:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "773:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "784:4:49",
                    "type": ""
                  }
                ],
                "src": "684:185:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "944:110:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "990:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "999:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1002:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "992:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "992:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "992:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "965:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "961:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "961:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "986:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "957:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "954:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1015:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1025:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1015:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "910:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "921:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "933:6:49",
                    "type": ""
                  }
                ],
                "src": "874:180:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1232:716:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1279:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1288:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1291:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1281:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1281:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1281:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1253:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1262:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1249:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1249:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1274:3:49",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1245:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:33:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1242:53:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1304:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1327:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1314:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1304:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1346:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1373:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1384:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1369:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1369:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1356:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1356:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1346:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1397:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1424:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1435:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1420:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1420:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1407:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1397:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1448:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1475:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1486:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1471:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1471:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1458:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1448:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1499:47:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1530:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1541:3:49",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1526:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1526:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1513:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1513:33:49"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1503:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1555:28:49",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1565:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1559:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1610:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1619:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1622:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1612:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1612:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1612:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1598:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1606:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1595:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1595:14:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1592:34:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1635:32:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1649:9:49"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1660:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1645:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1645:22:49"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1639:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1715:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1724:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1727:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1717:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1717:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1717:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1694:2:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1698:4:49",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1690:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1690:13:49"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1705:7:49"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1686:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1686:27:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1679:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:35:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1676:55:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1740:30:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1767:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1754:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1754:16:49"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1744:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1797:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1806:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1809:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1799:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1799:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1799:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1785:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1793:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1782:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1782:14:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1779:34:49"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1871:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1880:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1883:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1873:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1873:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1873:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1836:2:49"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1844:1:49",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1847:6:49"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1840:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1840:14:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1832:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1832:23:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1857:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1828:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1828:32:49"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1862:7:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1825:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1825:45:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1822:65:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1896:21:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1910:2:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1914:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1906:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1906:11:49"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1896:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1926:16:49",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1936:6:49"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "1926:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1158:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1169:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1181:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1189:6:49",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1197:6:49",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1205:6:49",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "1213:6:49",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "1221:6:49",
                    "type": ""
                  }
                ],
                "src": "1059:889:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1985:95:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2002:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2009:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2014:10:49",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2005:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2005:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1995:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1995:31:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1995:31:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2042:1:49",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2045:4:49",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2035:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2035:15:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2066:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2069:4:49",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "2059:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2059:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2059:15:49"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "1953:127:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2180:1020:49",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2190:12:49",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2200:2:49",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2194:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2247:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2256:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2259:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2249:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2249:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2249:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2222:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2231:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2218:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2218:23:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2243:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2214:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2214:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2211:52:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2272:37:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2299:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2286:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2286:23:49"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2276:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2318:28:49",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2328:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "2322:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2373:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2382:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2385:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2375:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2375:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2375:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2361:6:49"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2369:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2358:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2358:14:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2355:34:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2398:32:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2412:9:49"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2423:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2408:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2408:22:49"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "2402:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2478:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2487:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2490:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2480:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2480:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2480:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2457:2:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2461:4:49",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2453:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2453:13:49"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2468:7:49"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2449:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2449:27:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2442:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2442:35:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2439:55:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2503:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2526:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2513:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2513:16:49"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "2507:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2552:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2554:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2554:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2554:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2544:2:49"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2548:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2541:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2541:10:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2538:36:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2583:20:49",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2597:1:49",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2600:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2593:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2593:10:49"
                      },
                      "variables": [
                        {
                          "name": "_5",
                          "nodeType": "YulTypedName",
                          "src": "2587:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2612:23:49",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2632:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2626:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2626:9:49"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "2616:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2644:56:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2666:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "2682:2:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2686:2:49",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2678:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2678:11:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2695:2:49",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2691:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2691:7:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2674:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2674:25:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2662:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2662:38:49"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "2648:10:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2759:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2761:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2761:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2761:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2718:10:49"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2730:2:49"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2715:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2715:18:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2738:10:49"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2750:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2735:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2735:22:49"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2712:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2712:46:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2709:72:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2797:2:49",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2801:10:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2790:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2790:22:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2790:22:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2821:17:49",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2832:6:49"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "2825:3:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2854:6:49"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2862:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2847:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:18:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2847:18:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2874:22:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2885:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2893:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2881:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2881:15:49"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "2874:3:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2905:34:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2927:2:49"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "2931:2:49"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2923:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2923:11:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2936:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2919:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2919:20:49"
                      },
                      "variables": [
                        {
                          "name": "srcEnd",
                          "nodeType": "YulTypedName",
                          "src": "2909:6:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2971:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2980:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2983:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2973:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2973:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2973:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2954:6:49"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2962:7:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2951:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2951:19:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2948:39:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2996:22:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3011:2:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3015:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3007:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3007:11:49"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "3000:3:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3083:86:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3104:3:49"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3122:3:49"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3109:12:49"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3109:17:49"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3097:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3097:30:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3097:30:49"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3140:19:49",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3151:3:49"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3156:2:49"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3147:3:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3147:12:49"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "3140:3:49"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "3038:3:49"
                          },
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3043:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3035:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3035:15:49"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "3051:23:49",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3053:19:49",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "3064:3:49"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3069:2:49"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3060:3:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3060:12:49"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "3053:3:49"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "3031:3:49",
                        "statements": []
                      },
                      "src": "3027:142:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3178:16:49",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3188:6:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3178:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2146:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2157:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2169:6:49",
                    "type": ""
                  }
                ],
                "src": "2085:1115:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3237:95:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3254:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3261:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3266:10:49",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3257:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3257:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3247:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3247:31:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3247:31:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3294:1:49",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3297:4:49",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3287:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3287:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3287:15:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3318:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3321:4:49",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "3311:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3311:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3311:15:49"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "3205:127:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3385:80:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3412:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "3414:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3414:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3414:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "3401:1:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3408:1:49"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3404:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3404:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3398:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3398:13:49"
                      },
                      "nodeType": "YulIf",
                      "src": "3395:39:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3443:16:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "3454:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3457:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3450:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3450:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "3443:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "3368:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "3371:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "3377:3:49",
                    "type": ""
                  }
                ],
                "src": "3337:128:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3644:168:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3661:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3654:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3654:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3654:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3695:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3706:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3691:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3691:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3711:2:49",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3684:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3684:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3684:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3734:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3745:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3730:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3730:18:49"
                          },
                          {
                            "hexValue": "776f7264206f7574206f6620626f756e6473",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3750:20:49",
                            "type": "",
                            "value": "word out of bounds"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3723:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3723:48:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3723:48:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3780:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3792:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3803:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3788:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3788:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3780:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_15af30d584791b2d15f96e44f381f21fdbca8deb5781606163acc1df2ee321ce__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3621:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3635:4:49",
                    "type": ""
                  }
                ],
                "src": "3470:342:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3947:201:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3985:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3994:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3997:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3987:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3987:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3987:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "startIndex",
                            "nodeType": "YulIdentifier",
                            "src": "3963:10:49"
                          },
                          {
                            "name": "endIndex",
                            "nodeType": "YulIdentifier",
                            "src": "3975:8:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3960:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3960:24:49"
                      },
                      "nodeType": "YulIf",
                      "src": "3957:44:49"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4034:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4043:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4046:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4036:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4036:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4036:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "endIndex",
                            "nodeType": "YulIdentifier",
                            "src": "4016:8:49"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4026:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4013:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4013:20:49"
                      },
                      "nodeType": "YulIf",
                      "src": "4010:40:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4059:36:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4076:6:49"
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulIdentifier",
                            "src": "4084:10:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "offsetOut",
                          "nodeType": "YulIdentifier",
                          "src": "4059:9:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4104:38:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "endIndex",
                            "nodeType": "YulIdentifier",
                            "src": "4121:8:49"
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulIdentifier",
                            "src": "4131:10:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4117:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4117:25:49"
                      },
                      "variableNames": [
                        {
                          "name": "lengthOut",
                          "nodeType": "YulIdentifier",
                          "src": "4104:9:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "3881:6:49",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "3889:6:49",
                    "type": ""
                  },
                  {
                    "name": "startIndex",
                    "nodeType": "YulTypedName",
                    "src": "3897:10:49",
                    "type": ""
                  },
                  {
                    "name": "endIndex",
                    "nodeType": "YulTypedName",
                    "src": "3909:8:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "offsetOut",
                    "nodeType": "YulTypedName",
                    "src": "3922:9:49",
                    "type": ""
                  },
                  {
                    "name": "lengthOut",
                    "nodeType": "YulTypedName",
                    "src": "3933:9:49",
                    "type": ""
                  }
                ],
                "src": "3817:331:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4306:124:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4329:3:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4334:6:49"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4342:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "4316:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4316:33:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4316:33:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4358:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4372:3:49"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4377:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4368:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4368:16:49"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4362:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4400:2:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4404:1:49",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4393:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4393:13:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4393:13:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4415:9:49",
                      "value": {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4422:2:49"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4415:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_calldata_ptr_slice__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4274:3:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4279:6:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4287:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4298:3:49",
                    "type": ""
                  }
                ],
                "src": "4153:277:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4484:76:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4506:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4508:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4508:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4508:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4500:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4503:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4497:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4497:8:49"
                      },
                      "nodeType": "YulIf",
                      "src": "4494:34:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4537:17:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4549:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4552:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4545:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "4537:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "4466:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "4469:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "4475:4:49",
                    "type": ""
                  }
                ],
                "src": "4435:125:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4597:95:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4614:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4621:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4626:10:49",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4617:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4617:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4607:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4607:31:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4607:31:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:1:49",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4657:4:49",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4647:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4647:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4647:15:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4678:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4681:4:49",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "4671:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4671:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4671:15:49"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "4565:127:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4744:88:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4775:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4777:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4777:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4777:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4760:5:49"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4771:1:49",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4767:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4767:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4757:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4757:17:49"
                      },
                      "nodeType": "YulIf",
                      "src": "4754:43:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4806:20:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4817:5:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4824:1:49",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4813:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4813:13:49"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "4806:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "4726:5:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "4736:3:49",
                    "type": ""
                  }
                ],
                "src": "4697:135:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4889:116:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4948:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4950:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4950:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4950:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4920:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4913:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4913:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4906:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4906:17:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4928:1:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4939:1:49",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4935:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4935:6:49"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4943:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "4931:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4931:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4925:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4925:21:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4902:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4902:45:49"
                      },
                      "nodeType": "YulIf",
                      "src": "4899:71:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4979:20:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4994:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4997:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "4990:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4990:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "4979:7:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "4868:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "4871:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "4877:7:49",
                    "type": ""
                  }
                ],
                "src": "4837:168:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5184:169:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5201:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5212:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5194:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5194:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5194:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5235:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5246:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5231:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5231:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5251:2:49",
                            "type": "",
                            "value": "19"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5224:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5224:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5224:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5274:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5285:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5270:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5270:18:49"
                          },
                          {
                            "hexValue": "696e646578206f7574206f6620626f756e6473",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5290:21:49",
                            "type": "",
                            "value": "index out of bounds"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5263:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5263:49:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5263:49:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5321:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5333:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5344:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5329:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5329:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5321:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_eed516072b2550c72e3348ead859d99a87d4879a686eafecb170998606c300b2__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5161:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5175:4:49",
                    "type": ""
                  }
                ],
                "src": "5010:343:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5532:243:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5549:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5560:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5542:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5542:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5542:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5583:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5594:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5579:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5579:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5599:2:49",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5572:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5572:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5572:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5622:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5633:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5618:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5618:18:49"
                          },
                          {
                            "hexValue": "33203c3d206c6f6753697a654f665265706c6163656d656e74203c3d206c6f67",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5638:34:49",
                            "type": "",
                            "value": "3 <= logSizeOfReplacement <= log"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5611:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5611:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5611:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5693:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5704:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5689:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5689:18:49"
                          },
                          {
                            "hexValue": "53697a654f6646756c6c4472697665203c3d203634",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5709:23:49",
                            "type": "",
                            "value": "SizeOfFullDrive <= 64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5682:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:51:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5682:51:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5742:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5754:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5765:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5750:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5750:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5742:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_44b0b1c5b161a7806824676cd6612d5ef3299e86645f5328a549a68b8a10bbe3__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5509:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5523:4:49",
                    "type": ""
                  }
                ],
                "src": "5358:417:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5954:173:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5971:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5982:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5964:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5964:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5964:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6005:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6016:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6001:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6001:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6021:2:49",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5994:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5994:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5994:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6044:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6055:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6040:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6040:18:49"
                          },
                          {
                            "hexValue": "506f736974696f6e206973206e6f7420616c69676e6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6060:25:49",
                            "type": "",
                            "value": "Position is not aligned"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6033:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6033:53:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6033:53:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6095:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6107:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6118:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6103:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6103:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6095:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_6241252ba649d15bf00762829e6dd7773f21033a5420d256f52c9ff9153cec7b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5931:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5945:4:49",
                    "type": ""
                  }
                ],
                "src": "5780:347:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6306:177:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6323:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6334:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6316:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6316:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6316:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6357:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6368:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6353:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6353:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6373:2:49",
                            "type": "",
                            "value": "27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6346:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6346:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6346:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6396:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6407:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6392:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6392:18:49"
                          },
                          {
                            "hexValue": "50726f6f66206c656e67746820646f6573206e6f74206d61746368",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6412:29:49",
                            "type": "",
                            "value": "Proof length does not match"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6385:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:57:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6385:57:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6451:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6463:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6474:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6459:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6459:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6451:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_b4557f2a59adddfd6243c6a911e57a7e5a69a40a13ce65f7b00f2d4d4fb36734__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6283:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6297:4:49",
                    "type": ""
                  }
                ],
                "src": "6132:351:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6635:100:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6652:3:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6657:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6645:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6645:19:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6645:19:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6684:3:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6689:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6680:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6680:12:49"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6694:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6673:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6673:28:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6673:28:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6710:19:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6721:3:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6726:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6717:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6717:12:49"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "6710:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "6603:3:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6608:6:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6616:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "6627:3:49",
                    "type": ""
                  }
                ],
                "src": "6488:247:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6849:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6859:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6871:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6882:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6867:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6867:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6859:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6901:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6912:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6894:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6894:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6894:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6818:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6829:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6840:4:49",
                    "type": ""
                  }
                ],
                "src": "6740:185:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7008:199:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7054:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7063:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7066:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7056:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7056:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7056:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7029:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7038:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7025:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7025:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7050:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7021:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7021:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "7018:52:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7079:29:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7098:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7092:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7092:16:49"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "7083:5:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7161:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7170:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7173:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7163:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7163:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7163:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7130:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7151:5:49"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "7144:6:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7144:13:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7137:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7137:21:49"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "7127:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7127:32:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7120:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7120:40:49"
                      },
                      "nodeType": "YulIf",
                      "src": "7117:60:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7186:15:49",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7196:5:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7186:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6974:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6985:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6997:6:49",
                    "type": ""
                  }
                ],
                "src": "6930:277:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7386:174:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7403:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7414:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7396:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7396:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7396:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7437:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7448:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7433:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7433:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7453:2:49",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7426:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7426:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7426:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7476:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7487:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7472:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7472:18:49"
                          },
                          {
                            "hexValue": "6172726179206c656e206e6f7420706f776572206f662032",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7492:26:49",
                            "type": "",
                            "value": "array len not power of 2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7465:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7465:54:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7465:54:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7528:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7540:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7551:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7536:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7536:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7528:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f61e918a50d782deb5b37382531eaadbc7442ac7ba3465a3555177d7de818744__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7363:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7377:4:49",
                    "type": ""
                  }
                ],
                "src": "7212:348:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7739:175:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7756:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7767:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7749:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7749:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7749:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7790:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7801:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7786:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7786:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7806:2:49",
                            "type": "",
                            "value": "25"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7779:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7779:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7779:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7829:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7840:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7825:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7825:18:49"
                          },
                          {
                            "hexValue": "72616e6765206f66206c6f673253697a653a205b332c36345d",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7845:27:49",
                            "type": "",
                            "value": "range of log2Size: [3,64]"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7818:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7818:55:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7818:55:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7882:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7894:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7905:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7890:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7890:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7882:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c2944b7cebd8ea380290646bd5db7dba4bf913fc3ed4fd93c852f0f73d3128e7__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7716:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7730:4:49",
                    "type": ""
                  }
                ],
                "src": "7565:349:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8093:175:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8110:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8121:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8103:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8103:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8144:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8155:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8140:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8140:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8160:2:49",
                            "type": "",
                            "value": "25"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8133:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8133:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8133:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8183:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8194:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8179:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8179:18:49"
                          },
                          {
                            "hexValue": "6461746120697320626967676572207468616e206472697665",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8199:27:49",
                            "type": "",
                            "value": "data is bigger than drive"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8172:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8172:55:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8172:55:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8236:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8248:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8259:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8244:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8244:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8236:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_523f20b5920c0fcf685b39690311653b566cebaa86fada1cf192f28f8ac8014f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8070:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8084:4:49",
                    "type": ""
                  }
                ],
                "src": "7919:349:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8352:194:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8398:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8407:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8410:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8400:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8400:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8400:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8373:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8382:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8369:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8369:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8394:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8365:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8365:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "8362:52:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8423:29:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8442:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8436:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8436:16:49"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8427:5:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8500:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8509:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8512:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8502:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8502:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8502:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8474:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8485:5:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8492:4:49",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "8481:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8481:16:49"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "8471:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8471:27:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8464:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8464:35:49"
                      },
                      "nodeType": "YulIf",
                      "src": "8461:55:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8525:15:49",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8535:5:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8525:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint8_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8318:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8329:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8341:6:49",
                    "type": ""
                  }
                ],
                "src": "8273:273:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8597:158:49",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8607:23:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "8622:1:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8625:4:49",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8618:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8618:12:49"
                      },
                      "variables": [
                        {
                          "name": "x_1",
                          "nodeType": "YulTypedName",
                          "src": "8611:3:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8639:23:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8654:1:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8657:4:49",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8650:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8650:12:49"
                      },
                      "variables": [
                        {
                          "name": "y_1",
                          "nodeType": "YulTypedName",
                          "src": "8643:3:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8698:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "8700:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8700:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8700:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "8677:3:49"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8686:4:49",
                                "type": "",
                                "value": "0xff"
                              },
                              {
                                "name": "y_1",
                                "nodeType": "YulIdentifier",
                                "src": "8692:3:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8682:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8682:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8674:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8674:23:49"
                      },
                      "nodeType": "YulIf",
                      "src": "8671:49:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8729:20:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "8740:3:49"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "8745:3:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8736:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8736:13:49"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "8729:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "8580:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "8583:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "8589:3:49",
                    "type": ""
                  }
                ],
                "src": "8551:204:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8841:103:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8887:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8896:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8899:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8889:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8889:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8889:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8862:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8871:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8858:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8858:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8883:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8854:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8854:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "8851:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8912:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8928:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8922:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8922:16:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8912:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8807:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8818:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8830:6:49",
                    "type": ""
                  }
                ],
                "src": "8760:184:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9123:161:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9140:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9151:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9133:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9133:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9133:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9174:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9185:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9170:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9170:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9190:2:49",
                            "type": "",
                            "value": "11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9163:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9163:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9163:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9213:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9224:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9209:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9209:18:49"
                          },
                          {
                            "hexValue": "737461636b206572726f72",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9229:13:49",
                            "type": "",
                            "value": "stack error"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9202:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9202:41:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9202:41:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9252:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9264:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9275:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9260:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9260:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9252:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_796a1b217b66546f9c4f7788d552b7e18faafb903288eefdc97134ec2d90310c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9100:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9114:4:49",
                    "type": ""
                  }
                ],
                "src": "8949:335:49"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value4 := add(_2, 32)\n        value5 := length\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_15af30d584791b2d15f96e44f381f21fdbca8deb5781606163acc1df2ee321ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"word out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_slice__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_eed516072b2550c72e3348ead859d99a87d4879a686eafecb170998606c300b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_44b0b1c5b161a7806824676cd6612d5ef3299e86645f5328a549a68b8a10bbe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"3 <= logSizeOfReplacement <= log\")\n        mstore(add(headStart, 96), \"SizeOfFullDrive <= 64\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6241252ba649d15bf00762829e6dd7773f21033a5420d256f52c9ff9153cec7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Position is not aligned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4557f2a59adddfd6243c6a911e57a7e5a69a40a13ce65f7b00f2d4d4fb36734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Proof length does not match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f61e918a50d782deb5b37382531eaadbc7442ac7ba3465a3555177d7de818744__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"array len not power of 2\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c2944b7cebd8ea380290646bd5db7dba4bf913fc3ed4fd93c852f0f73d3128e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"range of log2Size: [3,64]\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_523f20b5920c0fcf685b39690311653b566cebaa86fada1cf192f28f8ac8014f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"data is bigger than drive\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_796a1b217b66546f9c4f7788d552b7e18faafb903288eefdc97134ec2d90310c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"stack error\")\n        tail := add(headStart, 96)\n    }\n}",
          "id": 49,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {
        "@cartesi/util/contracts/CartesiMath.sol": {
          "CartesiMath": [
            {
              "length": 20,
              "start": 1252
            },
            {
              "length": 20,
              "start": 1996
            },
            {
              "length": 20,
              "start": 2287
            }
          ]
        }
      },
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34BD712D EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x451A1055 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x79DE4601 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x82B0EAB8 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC84583A1 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST PUSH2 0x79 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x79 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x79 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 SWAP1 SHL DUP2 PUSH2 0xEA PUSH1 0x8 DUP4 PUSH2 0xCEF JUMP JUMPDEST SWAP1 POP DUP5 DUP3 GT ISZERO PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x776F7264206F7574206F6620626F756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 GT PUSH2 0x179 JUMPI PUSH2 0x149 DUP2 DUP4 DUP8 DUP10 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15A SWAP3 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A6 DUP5 DUP9 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI DUP9 DUP9 PUSH2 0x1BF DUP4 DUP9 PUSH2 0xCEF JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1CE JUMPI PUSH2 0x1CE PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH2 0x20B DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AB JUMP JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH1 0x20 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x244 DUP2 PUSH1 0x20 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x7A0 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x696E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x7C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x7A0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2A PUSH2 0x7A0 SWAP2 CODECOPY SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x2CD JUMPI POP PUSH1 0x3 DUP7 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI POP PUSH1 0x40 DUP6 GT ISZERO JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x33203C3D206C6F6753697A654F665265706C6163656D656E74203C3D206C6F67 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x14DA5E9953D9919D5B1B111C9A5D99480F0F480D8D PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x1 DUP1 DUP8 SHL SWAP1 DUP9 SWAP1 PUSH2 0x356 SWAP1 DUP4 PUSH2 0xD41 JUMP JUMPDEST AND ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E206973206E6F7420616C69676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x3AE DUP8 DUP8 PUSH2 0xD41 JUMP JUMPDEST DUP4 EQ PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F66206C656E67746820646F6573206E6F74206D617463680000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C3 JUMPI DUP2 DUP2 SHL DUP10 AND PUSH1 0x0 SUB PUSH2 0x464 JUMPI DUP6 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x426 JUMPI PUSH2 0x426 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x447 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP PUSH2 0x4B1 JUMP JUMPDEST DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x476 JUMPI PUSH2 0x476 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x498 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP JUMPDEST DUP1 PUSH2 0x4BB DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FF JUMP JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xD82AE4B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xD82AE4B1 SWAP2 PUSH2 0x50E SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6172726179206C656E206E6F7420706F776572206F6620320000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 SUB PUSH2 0x5C6 JUMPI DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 MLOAD SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH2 0x5E6 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x60F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x6C1 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x630 JUMPI PUSH2 0x630 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 PUSH1 0x1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x656 JUMPI PUSH2 0x656 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x678 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 DUP4 SWAP1 SHR DUP2 MLOAD DUP2 LT PUSH2 0x6A4 JUMPI PUSH2 0x6A4 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6BA PUSH1 0x2 DUP3 PUSH2 0xCEF JUMP JUMPDEST SWAP1 POP PUSH2 0x615 JUMP JUMPDEST POP PUSH2 0x222 DUP2 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI POP PUSH1 0x40 DUP3 GT ISZERO JUMPDEST PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72616E6765206F66206C6F673253697A653A205B332C36345D00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x749 JUMPI PUSH2 0x742 PUSH2 0x99 PUSH1 0x3 DUP5 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP PUSH2 0x222 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x756 PUSH1 0x3 DUP5 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x3 DUP2 SWAP1 SHL DUP5 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6461746120697320626967676572207468616E20647269766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6C8E54B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x3 DUP6 SWAP1 SHR PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x6C8E54B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82A SWAP2 SWAP1 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0x835 SWAP1 PUSH1 0x2 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x855 JUMPI PUSH2 0x855 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP5 LT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x3 DUP5 SWAP1 SHL DUP11 GT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8A7 DUP12 DUP12 DUP7 PUSH2 0xD7 JUMP JUMPDEST DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8B9 JUMPI PUSH2 0x8B9 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP4 PUSH2 0x8CE DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP5 POP POP DUP4 SWAP2 POP PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52DCF5F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x296E7AF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP PUSH2 0x958 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x96A JUMPI PUSH2 0x96A PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x982 PUSH1 0x1 DUP3 SHL DUP6 PUSH2 0xCEF JUMP JUMPDEST SWAP4 POP DUP4 DUP2 SHR SWAP2 POP JUMPDEST DUP3 PUSH2 0x994 DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0xA6B JUMPI PUSH1 0x0 DUP6 PUSH2 0x9B1 PUSH1 0x1 DUP7 PUSH2 0xD41 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH2 0x9C1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP7 PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9EB JUMPI PUSH2 0x9EB PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA11 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x2 DUP8 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA45 JUMPI PUSH2 0xA45 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xA5B PUSH1 0x1 DUP7 PUSH2 0xD41 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP5 SWAP1 SHR SWAP4 POP POP POP PUSH2 0x998 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x39BA30B1B59032B93937B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAC1 JUMPI PUSH2 0xAC1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP8 POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC6C JUMPI PUSH2 0xC6C PUSH2 0xC05 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xCCD JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xCB4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD02 PUSH2 0xCD9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD53 PUSH2 0xCD9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD80 JUMPI PUSH2 0xD80 PUSH2 0xCD9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA1 PUSH2 0xCD9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0xE08 JUMPI PUSH2 0xE08 PUSH2 0xCD9 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID ADD SHL 0x4D SUB 0xDD DUP13 ADD CALL DIV SWAP2 NUMBER 0xCF SWAP13 0x4C DUP2 PUSH31 0x4B167F1D1B83E5C6F0F10D89BA1E7BCE4D9470A821FBE90117EC357E30BAD9 ADDRESS JUMPI ORIGIN 0xFB NOT 0xDD CREATE2 0x4A SMOD 0xDD RETURNDATACOPY 0x29 DELEGATECALL BLOCKHASH PUSH2 0x9254 0xAE CODECOPY 0xCE DUP6 CALLDATACOPY 0xAC 0xA7 0x5E 0x2E SELFDESTRUCT RETURNDATACOPY CODESIZE 0xC9 DUP1 GT 0xDF 0xE9 CALLVALUE 0xE7 STOP LOG0 SWAP7 PUSH24 0x32FC07B430DD656A233FC9A15F5B4869C872F81087BB6104 0xB7 0xD6 RETURNDATACOPY PUSH16 0x9AB47F2C43F3535EAE7172AA7F17D2DD PUSH2 0x4CDD 0xAA 0x4D DUP8 SWAP3 PUSH23 0xB11E0672C9560033D3E8453A1D045339D34BA601B9C37B DUP12 SGT 0xCA SWAP6 AND PUSH16 0xB7AF16988A70FCC90F38BF9126FD833D 0xA7 LT LOG4 PUSH32 0xB37A55E68E7A427FA943D9966B389F4F257173676090C6E95F43E2CB6D65F875 DUP2 GT 0xE3 MULMOD ADDRESS 0xB0 0xB9 0xDE 0xB7 RETURNDATACOPY ISZERO 0x5C MSIZE PUSH21 0xBACF14A6FF04B64BB8E201A506409C3FE381CA4EA SWAP1 0xCD 0x5D 0xEA 0xC7 0x29 0xD0 REVERT 0xAC 0xCC DIFFICULTY SAR MULMOD 0xD7 ORIGIN 0x5F COINBASE PC PUSH12 0xA13C801B7ECCAE0F95D8F393 RETURNDATACOPY INVALID 0xD8 0xB9 PUSH15 0x5B7F6F459E9CB6A2F41BF276C7B85C LT 0xCD CHAINID PUSH3 0xC04CBB 0xB3 PUSH6 0x434726C0A0C9 PUSH10 0x5393027FB106A8153109 0xAC MLOAD PUSH3 0x88A88B 0x28 0xA9 CODESIZE OR DUP10 SWAP5 PUSH1 0xD6 BALANCE SIGNEXTEND PUSH18 0xCF1E6163E8806FA0D4B197A259E8C3AC2886 TIMESTAMP PUSH9 0x159D0AC85F8581CA28 STATICCALL PUSH30 0x2C0C03EB91E3EEE5CA7A3DA2B3053C9770DB73599FB149F620E3FACEF95E SWAP5 PUSH29 0xEE860B72122E31E4BBD2B7C783D79CC30F60C6238651DA7F0726F767D 0x22 PUSH21 0x7264FDB046F7549F26CC70ED5E18BAEB6C81BB0625 0xCB SWAP6 0xBB BLOCKHASH NOT 0xAE 0xEC 0xD4 SMOD PUSH21 0xEE87AE29EC517A71F6EE264C5D761379B3D7D617CA DUP4 PUSH8 0x7374B49D10AEC505 SDIV 0xAC ADDMOD PUSH21 0x8CA892B573C267A712A52E1D06421FE276A03EFB1 DUP9 SWAP16 CALLER PUSH19 0x1110FDC32A81F8E152499AF665835AABFDC67 BLOCKHASH 0xC7 0xE2 0xC3 PUSH26 0x1A31C3CDC9F5AB962F681B12FC092816A62F27D86025599A4123 CODESIZE BASEFEE PUSH17 0x2F0CFC0437B445682DF51147A632A0A083 0xD2 0xD3 DUP12 0x5E SGT 0xE4 PUSH7 0xA8935AFFF58BB5 CALLER 0xB3 0xEF 0x5D 0x27 0xFB 0xA6 RETURNDATACOPY 0xE6 0xB0 REVERT SWAP15 PUSH8 0xFF20AF9D50DEEE3F DUP12 CREATE PUSH6 0xEC220C1FD4BA JUMPI 0xE3 COINBASE 0x26 SAR SSTORE SWAP10 PUSH32 0x85D66D32152526736872693D2B437A233E2337B715F6AC9A6A272622FDC2D67F 0xCF 0xE1 0xDA CALLVALUE MSIZE 0xF8 0xDA 0xB4 0xED PUSH31 0x40A657A54C36766C5E8AC9A88B35B05C34747E6507F6B044AB66180DC76AC1 0xA6 SWAP7 0xDE SUB XOR SWAP6 SWAP4 INVALID 0xDC 0xD 0xD 0xBB 0xD8 SSTORE 0xC8 0xEA 0xD6 PUSH20 0x544899B0960E4A5A7CA43B4EF90AFE607DE7698C 0xAE REVERT 0xC2 TIMESTAMP PUSH25 0x8F654B57A4FB32A71B335EF6FF9A4CC118B282B53BDD6D6192 0xB7 0xA8 0x2C EXTCODECOPY MLOAD 0x26 0xB9 0xC7 0xE3 EXTCODECOPY DUP15 GAS GAS 0xC9 PUSH20 0x8B8BD31247FB7402054F97B573E8ABB9FAAD219F 0x4F 0xD0 DUP6 0xAC 0xEA 0xA7 CREATE2 TIMESTAMP 0xD7 DUP8 0xEE COINBASE SWAP7 0xD3 PUSH6 0xF3CC566E7BBC 0xFB REVERT GASLIMIT SLT ADDRESS 0xC4 DUP14 DUP1 0x4C ADD PUSH30 0x21E2D8FA914E2559BB72BF0AB78C8AB92F00EF0D0D576ECCDD486B64138A COINBASE PUSH19 0x674857E543D1D5B639058DD908186597E366AD 0x5F RETURNDATASIZE SWAP13 PUSH29 0xEAFF44D04D1550B8D33ABC751DF07437834BA5ACB32328A396994AEBB3 0xC4 0xF PUSH22 0x9C2D6D7A3CB5377E55D5D218EF5A296DDA8DDC355F3F POP 0xC3 0xD0 0xB6 PUSH1 0xA5 SAR STATICCALL 0x4D SWAP9 0xA6 0xA5 LOG3 CALLDATALOAD PUSH5 0x556CF83C13 PUSH20 0xA814641D6A1DCEF97B883FEE61BB84FE60A34093 BLOCKHASH 0x21 PUSH31 0x629CC7E4DCC93B85D8820921FF5826148B60E6939ACD7838E1D7F20562BFF8 0xEE 0x4B 0x5E 0xC4 LOG0 GAS 0xD9 SWAP8 0xA5 PUSH28 0x9796FDCB2EDA87883C2640B072B140B946BFDF6575CACC066FDAE04F PUSH10 0x51E63624CBD316A677CA 0xD5 0x29 0xBB 0xE4 0xE9 PUSH28 0x9144E4BC06C4AFD1DE55DD3E1175F90423847A230D34DFB71ED56F29 PUSH6 0xA7F6C72E6AA3 EXTCODECOPY 0x24 0xC3 SUB REVERT PUSH8 0x745D632656C5EF90 0xBE 0xC8 0xF 0x4F 0x5D SAR 0xAA 0x25 NOT DUP9 DUP3 PUSH13 0xEF375C81C36BF457E09687056F SWAP3 CHAINID PUSH24 0xCB0BCCF98DFF81E014CE25F2D132497923E267363963CDF4 ADDRESS 0x2C POP 0x49 0xD6 BALANCE BALANCE 0xDC SUB REVERT SWAP6 0xF6 0x5D DUP12 PUSH11 0xA5934F817252C028C90F56 0xD4 SGT 0xB9 0xD5 0xD1 0xD DUP10 PUSH26 0x707DAE2FABB249F649929927C21DD71E3F656826DE5451C5DA3 PUSH22 0xAADECBD59D5EBF3A31FAE65AC1B316A1611F1B276B26 MSTORE8 0xF PC 0xD7 0x24 PUSH30 0xF459CE1F86DB1D734F6F811932F042CEE45D0E455306D01081BC3384F82C 0x5F 0xB2 0xAA 0xCA LOG1 SWAP14 DUP10 0xCD STATICCALL CHAINID 0xCC SWAP2 PUSH15 0xAC61121475BA2E6191B4FEECBE1789 PUSH18 0x7021A158ACE5D06744B40F551076B67CD63A 0xF6 STOP SMOD 0xF8 0xC9 SWAP9 PUSH23 0xE1424883A45EC49D497DDAF808A5521CA74A999AB0B3C7 0xAA SWAP13 DUP1 0xF8 0x5E SWAP4 SWAP8 PUSH31 0xC61CE68B20307A1A81F71CA645B568FCD319CCBB5F651E87B707D37C39E15F SWAP5 0x5E 0xA6 SWAP15 0x2F PUSH29 0x7D2CCC85B7E654C07E96F0636AE4044FE0E38590B431795AD0F8647BDD PUSH2 0x3713 0xAD LOG4 SWAP4 0xCC OR 0xEF 0xD3 SGT KECCAK256 PUSH4 0x80E6A685 0xB8 NOT DUP5 PUSH22 0xBBD021C6E9D94DAAB2214947127506073E44D5408BA1 PUSH7 0xC512A0B86805D0 PUSH32 0x5A44D3C41706BE2BC15E712E55805248B92E8677D90F6D284D1D6FFAFF2C4306 JUMPI DIV 0x2A 0xE DUP3 PUSH3 0x4FA371 PUSH28 0x6CC0A6FD12230EA586DAE83019FB9E06034ED2803C98D554B93C9A5 0x23 BASEFEE 0xCA SELFDESTRUCT 0xF7 0x5C BLOCKHASH OR 0x4A SWAP2 0xF9 0xAE PUSH12 0x8647854A156029F0B88B8331 PUSH7 0x63CE574A497827 PUSH28 0xB6BB27A31085634B6EC78864B6D8201C7E93903D75815067E378289A RETURNDATASIZE SMOD 0x2A 0xE1 PUSH19 0xDAFA6A452470F8D645BEBFAD9779594FC0784B 0xB7 PUSH5 0xA22E3A8181 0xD9 RETURNDATASIZE 0xB7 0xBF SWAP8 DUP10 EXTCODECOPY COINBASE TIMESTAMP OR 0xA6 XOR 0xCC 0xB1 0x4C 0xAA SWAP15 SWAP3 0xE8 0xC6 AND PUSH20 0xAFC9583662E812ADBA1F87A9C68202D60E909EFA 0xB4 EXTCODECOPY TIMESTAMP 0xC0 0xCB STOP PUSH10 0x5FC7F1FFE67C75CA894C EXTCODECOPY MLOAD 0xE1 0xE5 0xE7 BALANCE CALLDATASIZE ADD SWAP10 0xE6 STOP 0xF6 0xCE 0xD9 0xA8 PUSH28 0x2A6A87E70BF251BB5075AB222138288164B2EDA727515EA7DE12E249 PUSH14 0x4FE42EA8D1A120C03CF9C50622C2 0xAF 0xE4 0xAC 0xB0 0xDA 0xD9 DUP16 0xD6 0x2D SMOD 0xAB 0x4E DUP3 DUP11 SWAP5 0x49 0x5F PUSH14 0x1AB973982C7CCBE6C1FAE02788E4 TIMESTAMP 0x2A 0xE2 0x22 DUP3 STATICCALL 0x49 0xCB 0xDB DIV 0xBA SLOAD 0xA7 LOG2 CODESIZE 0xC6 0xFC COINBASE XOR PUSH21 0x51383460762C06D1C8A72B9CD718866AD4B689E10C SWAP11 DUP13 CODESIZE INVALID 0x5E CREATE GASLIMIT 0xBD PUSH25 0x5B01E980FC82C7E3532CE81876B778DD9F1CEEBA4478E86411 0xFB PUSH16 0xDD790683916CA832592485093644E876 0xC 0xD7 0xB4 0xC0 SAR 0xBA SHR 0xCC DUP3 0xB6 PUSH2 0xBF13 CREATE 0xE3 RETURN 0x4A 0xCD PUSH12 0x88A26469706673582212204A BLOCKHASH 0x22 0x4F 0xD3 MSIZE BYTE LOG0 0x4F 0xD0 0x4C 0xE8 PUSH22 0xD6C9C3DB7F8C704FE0613B137A0E7EB4F957F764736F PUSH13 0x634300080D0033000000000000 ",
      "sourceMap": "708:11508:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10464:855;;;;;;:::i;:::-;;:::i;:::-;;;838:25:49;;;826:2;811:18;10464:855:2;;;;;;;6895:481;;;;;;:::i;:::-;;:::i;5501:1200::-;;;;;;:::i;:::-;;:::i;11529:685::-;;;;;;:::i;:::-;;:::i;7752:2460::-;;;;;;:::i;:::-;;:::i;10464:855::-;10581:7;796:1;10620:25;;;10581:7;10669:26;10678:16;10620:25;10669:26;:::i;:::-;10655:40;-1:-1:-1;10797:21:2;;;;10789:52;;;;-1:-1:-1;;;10789:52:2;;3672:2:49;10789:52:2;;;3654:21:49;3711:2;3691:18;;;3684:30;-1:-1:-1;;;3730:18:49;;;3723:48;3788:18;;10789:52:2;;;;;;;;;10856:19;;;10852:102;;10925:16;10937:3;10931:5;10925;;:16;:::i;:::-;10908:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10898:45;;;;;;10891:52;;;;;;10852:102;11106:12;;;11116:1;11106:12;;;;;;;;;11079:24;;11106:12;;;;;;;;;;-1:-1:-1;;11079:39:2;-1:-1:-1;11128:17:2;11148:20;11163:5;11148;:20;:::i;:::-;11128:40;;11184:9;11179:94;11199:9;11195:1;:13;11179:94;;;11246:5;;11252:9;11260:1;11252:5;:9;:::i;:::-;11246:16;;;;;;;:::i;:::-;;;;;;;;;11229:11;11241:1;11229:14;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;11229:33:2;;;;;;;;-1:-1:-1;11210:3:2;;;;:::i;:::-;;;;11179:94;;;-1:-1:-1;;11290:22:2;;;;;;;;-1:-1:-1;;;10464:855:2;;;;;;:::o;6895:481::-;6989:7;;7028:11;:6;7037:2;7028:11;:::i;:::-;7012:27;-1:-1:-1;7076:10:2;7012:27;7084:2;7076:10;:::i;:::-;910:4;7057:29;;7049:61;;;;-1:-1:-1;;;7049:61:2;;5212:2:49;7049:61:2;;;5194:21:49;5251:2;5231:18;;;5224:30;-1:-1:-1;;;5270:18:49;;;5263:49;5329:18;;7049:61:2;5010:343:49;7049:61:2;7120:19;7149:21;7173:17;;;;;;;;;;;;;;;;;7300:31;;;;7318:4;7300:31;7294:38;;6895:481;-1:-1:-1;;;;6895:481:2:o;5501:1200::-;5738:7;5801:21;5778:19;:44;;:90;;;;;5867:1;5842:21;:26;;5778:90;:135;;;;;5911:2;5888:19;:25;;5778:135;5757:235;;;;-1:-1:-1;;;5757:235:2;;5560:2:49;5757:235:2;;;5542:21:49;5599:2;5579:18;;;5572:30;5638:34;5618:18;;;5611:62;-1:-1:-1;;;5689:18:49;;;5682:51;5750:19;;5757:235:2;5358:417:49;5757:235:2;6018:1;:26;;;;6077:9;;6065:8;;6018:26;6065:8;:::i;:::-;6064:22;6063:29;6055:65;;;;-1:-1:-1;;;6055:65:2;;5982:2:49;6055:65:2;;;5964:21:49;6021:2;6001:18;;;5994:30;6060:25;6040:18;;;6033:53;6103:18;;6055:65:2;5780:347:49;6055:65:2;6170:43;6192:21;6170:19;:43;:::i;:::-;6151:62;;6130:136;;;;-1:-1:-1;;;6130:136:2;;6334:2:49;6130:136:2;;;6316:21:49;6373:2;6353:18;;;6346:30;6412:29;6392:18;;;6385:57;6459:18;;6130:136:2;6132:351:49;6130:136:2;6282:9;6277:388;6293:19;;;6277:388;;;6351:9;;;6338:23;;6366:1;6337:30;6333:322;;6450:12;6464:8;;6473:1;6464:11;;;;;;;:::i;:::-;;;;;;;6433:43;;;;;;;;6645:19:49;;;6689:2;6680:12;;6673:28;6726:2;6717:12;;6488:247;6433:43:2;;;;;;;;;;;;;6402:92;;;;;;6387:107;;6333:322;;;6596:8;;6605:1;6596:11;;;;;;;:::i;:::-;;;;;;;6609:12;6579:43;;;;;;;;6645:19:49;;;6689:2;6680:12;;6673:28;6726:2;6717:12;;6488:247;6579:43:2;;;;;;;;;;;;;6548:92;;;;;;6533:107;;6333:322;6314:3;;;;:::i;:::-;;;;6277:388;;;-1:-1:-1;6682:12:2;;5501:1200;-1:-1:-1;;;;;;;5501:1200:2:o;11529:685::-;11722:13;;11721:28;;-1:-1:-1;;;11721:28:2;;11636:7;;11721:26;;;;:28;;;;838:25:49;;;826:2;811:18;;684:185;11721:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11713:65;;;;-1:-1:-1;;;11713:65:2;;7414:2:49;11713:65:2;;;7396:21:49;7453:2;7433:18;;;7426:30;7492:26;7472:18;;;7465:54;7536:18;;11713:65:2;7212:348:49;11713:65:2;11793:6;:13;11810:1;11793:18;11789:419;;11834:6;11841:1;11834:9;;;;;;;;:::i;:::-;;;;;;;11827:16;;11529:685;;;:::o;11789:419::-;11874:26;11934:1;11917:6;:13;:18;;11903:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11903:33:2;;11874:62;;11956:9;11951:187;11971:6;:13;11967:1;:17;11951:187;;;12080:6;12087:1;12080:9;;;;;;;;:::i;:::-;;;;;;;12091:6;12098:1;12102;12098:5;;;;:::i;:::-;12091:13;;;;;;;;:::i;:::-;;;;;;;12063:42;;;;;;;;6645:19:49;;;6689:2;6680:12;;6673:28;6726:2;6717:12;;6488:247;12063:42:2;;;;;;;;;;;;;12032:91;;;;;;12012:9;12027:1;12022;:6;;12012:17;;;;;;;;:::i;:::-;;;;;;;;;;:111;11986:6;11991:1;11986:6;;:::i;:::-;;;11951:187;;;;12159:38;12187:9;12159:27;:38::i;7752:2460::-;7870:7;7914:1;7901:9;:14;;:33;;;;;7932:2;7919:9;:15;;7901:33;7893:71;;;;-1:-1:-1;;;7893:71:2;;7767:2:49;7893:71:2;;;7749:21:49;7806:2;7786:18;;;7779:30;7845:27;7825:18;;;7818:55;7890:18;;7893:71:2;7565:349:49;7893:71:2;8063:1;8047:17;;;8043:68;;8073:38;8097:13;8109:1;8097:9;:13;:::i;8073:38::-;8066:45;;;;8043:68;8166:12;8187:13;8199:1;8187:9;:13;:::i;:::-;8181:1;:20;;;-1:-1:-1;796:1:2;8232:19;;;:35;-1:-1:-1;8232:35:2;8211:107;;;;-1:-1:-1;;;8211:107:2;;8121:2:49;8211:107:2;;;8103:21:49;8160:2;8140:18;;;8133:30;8199:27;8179:18;;;8172:55;8244:18;;8211:107:2;7919:349:49;8211:107:2;8423:46;;-1:-1:-1;;;8423:46:2;;796:1;8424:29;;;8423:46;;;838:25:49;8385:19:2;;8423:44;;;;811:18:49;;8423:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8407:62;;:1;:62;:::i;:::-;8385:84;;;;8479:22;8518:11;8504:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8504:26:2;;8479:51;;8541:19;8623;8677:18;8752:21;8822:1308;8843:4;8829:11;:18;8822:1308;;;796:1;8868:26;;;8867:43;-1:-1:-1;8863:800:2;;;8998:40;9019:5;;9026:11;8998:20;:40::i;:::-;8977:5;8983:11;8977:18;;;;;;;;:::i;:::-;;;;;;;;;;:61;9056:13;;;;:::i;:::-;;;;9101:11;9088:24;;8863:800;;;9370:17;;-1:-1:-1;;;9370:17:2;;;;;838:25:49;;;9370:15:2;;;;811:18:49;;9370:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9354:33;;9427:38;9451:13;9427:23;:38::i;:::-;9406:5;9412:11;9406:18;;;;;;;;:::i;:::-;;;;;;;;;;:59;9555:34;9570:1;:18;;9555:11;:34;:::i;:::-;9541:48;-1:-1:-1;9620:28:2;;;;-1:-1:-1;8863:800:2;9677:13;;;;:::i;:::-;;;;9770:350;9777:10;9790:1;9777:14;9795:1;9777:19;9770:350;;9816:10;9829:5;9835:15;9849:1;9835:11;:15;:::i;:::-;9829:22;;;;;;;;:::i;:::-;;;;;;;9816:35;;9869:10;9882:5;9902:1;9888:11;:15;;;;:::i;:::-;9882:22;;;;;;;;:::i;:::-;;;;;;;9869:35;;9975:2;9979;9958:24;;;;;;;;6645:19:49;;;6689:2;6680:12;;6673:28;6726:2;6717:12;;6488:247;9958:24:2;;;;;;;;;;;;;9948:35;;;;;;9923:5;9943:1;9929:11;:15;;;;:::i;:::-;9923:22;;;;;;;;:::i;:::-;;;;;;;;;;:60;10015:15;10029:1;10015:11;:15;:::i;:::-;10001:29;;10104:1;10090:10;:15;;10077:28;;9798:322;;9770:350;;;8822:1308;;;10147:11;10162:1;10147:16;10139:40;;;;-1:-1:-1;;;10139:40:2;;9151:2:49;10139:40:2;;;9133:21:49;9190:2;9170:18;;;9163:30;-1:-1:-1;;;9209:18:49;;;9202:41;9260:18;;10139:40:2;8949:335:49;10139:40:2;10197:5;10203:1;10197:8;;;;;;;;:::i;:::-;;;;;;;10190:15;;;;;;;;;7752:2460;;;;;:::o;14:665:49:-;93:6;101;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;218:9;205:23;247:18;288:2;280:6;277:14;274:34;;;304:1;301;294:12;274:34;342:6;331:9;327:22;317:32;;387:7;380:4;376:2;372:13;368:27;358:55;;409:1;406;399:12;358:55;449:2;436:16;475:2;467:6;464:14;461:34;;;491:1;488;481:12;461:34;538:7;531:4;522:6;518:2;514:15;510:26;507:39;504:59;;;559:1;556;549:12;504:59;590:4;582:13;;;;614:6;;-1:-1:-1;652:20:49;;;;639:34;;14:665;-1:-1:-1;;;;14:665:49:o;874:180::-;933:6;986:2;974:9;965:7;961:23;957:32;954:52;;;1002:1;999;992:12;954:52;-1:-1:-1;1025:23:49;;874:180;-1:-1:-1;874:180:49:o;1059:889::-;1181:6;1189;1197;1205;1213;1221;1274:3;1262:9;1253:7;1249:23;1245:33;1242:53;;;1291:1;1288;1281:12;1242:53;1327:9;1314:23;1304:33;;1384:2;1373:9;1369:18;1356:32;1346:42;;1435:2;1424:9;1420:18;1407:32;1397:42;;1486:2;1475:9;1471:18;1458:32;1448:42;;1541:3;1530:9;1526:19;1513:33;1565:18;1606:2;1598:6;1595:14;1592:34;;;1622:1;1619;1612:12;1592:34;1660:6;1649:9;1645:22;1635:32;;1705:7;1698:4;1694:2;1690:13;1686:27;1676:55;;1727:1;1724;1717:12;1676:55;1767:2;1754:16;1793:2;1785:6;1782:14;1779:34;;;1809:1;1806;1799:12;1779:34;1862:7;1857:2;1847:6;1844:1;1840:14;1836:2;1832:23;1828:32;1825:45;1822:65;;;1883:1;1880;1873:12;1822:65;1914:2;1910;1906:11;1896:21;;1936:6;1926:16;;;;;1059:889;;;;;;;;:::o;1953:127::-;2014:10;2009:3;2005:20;2002:1;1995:31;2045:4;2042:1;2035:15;2069:4;2066:1;2059:15;2085:1115;2169:6;2200:2;2243;2231:9;2222:7;2218:23;2214:32;2211:52;;;2259:1;2256;2249:12;2211:52;2299:9;2286:23;2328:18;2369:2;2361:6;2358:14;2355:34;;;2385:1;2382;2375:12;2355:34;2423:6;2412:9;2408:22;2398:32;;2468:7;2461:4;2457:2;2453:13;2449:27;2439:55;;2490:1;2487;2480:12;2439:55;2526:2;2513:16;2548:2;2544;2541:10;2538:36;;;2554:18;;:::i;:::-;2600:2;2597:1;2593:10;2632:2;2626:9;2695:2;2691:7;2686:2;2682;2678:11;2674:25;2666:6;2662:38;2750:6;2738:10;2735:22;2730:2;2718:10;2715:18;2712:46;2709:72;;;2761:18;;:::i;:::-;2797:2;2790:22;2847:18;;;2881:15;;;;-1:-1:-1;2923:11:49;;;2919:20;;;2951:19;;;2948:39;;;2983:1;2980;2973:12;2948:39;3007:11;;;;3027:142;3043:6;3038:3;3035:15;3027:142;;;3109:17;;3097:30;;3060:12;;;;3147;;;;3027:142;;;3188:6;2085:1115;-1:-1:-1;;;;;;;;2085:1115:49:o;3205:127::-;3266:10;3261:3;3257:20;3254:1;3247:31;3297:4;3294:1;3287:15;3321:4;3318:1;3311:15;3337:128;3377:3;3408:1;3404:6;3401:1;3398:13;3395:39;;;3414:18;;:::i;:::-;-1:-1:-1;3450:9:49;;3337:128::o;3817:331::-;3922:9;3933;3975:8;3963:10;3960:24;3957:44;;;3997:1;3994;3987:12;3957:44;4026:6;4016:8;4013:20;4010:40;;;4046:1;4043;4036:12;4010:40;-1:-1:-1;;4072:23:49;;;4117:25;;;;;-1:-1:-1;3817:331:49:o;4153:277::-;4342:6;4334;4329:3;4316:33;4298:3;4368:16;;4393:13;;;4368:16;4153:277;-1:-1:-1;4153:277:49:o;4435:125::-;4475:4;4503:1;4500;4497:8;4494:34;;;4508:18;;:::i;:::-;-1:-1:-1;4545:9:49;;4435:125::o;4565:127::-;4626:10;4621:3;4617:20;4614:1;4607:31;4657:4;4654:1;4647:15;4681:4;4678:1;4671:15;4697:135;4736:3;4757:17;;;4754:43;;4777:18;;:::i;:::-;-1:-1:-1;4824:1:49;4813:13;;4697:135::o;4837:168::-;4877:7;4943:1;4939;4935:6;4931:14;4928:1;4925:21;4920:1;4913:9;4906:17;4902:45;4899:71;;;4950:18;;:::i;:::-;-1:-1:-1;4990:9:49;;4837:168::o;6930:277::-;6997:6;7050:2;7038:9;7029:7;7025:23;7021:32;7018:52;;;7066:1;7063;7056:12;7018:52;7098:9;7092:16;7151:5;7144:13;7137:21;7130:5;7127:32;7117:60;;7173:1;7170;7163:12;8273:273;8341:6;8394:2;8382:9;8373:7;8369:23;8365:32;8362:52;;;8410:1;8407;8400:12;8362:52;8442:9;8436:16;8492:4;8485:5;8481:16;8474:5;8471:27;8461:55;;8512:1;8509;8502:12;8551:204;8589:3;8625:4;8622:1;8618:12;8657:4;8654:1;8650:12;8692:3;8686:4;8682:14;8677:3;8674:23;8671:49;;;8700:18;;:::i;:::-;8736:13;;8551:204;-1:-1:-1;;;8551:204:49:o;8760:184::-;8830:6;8883:2;8871:9;8862:7;8858:23;8854:32;8851:52;;;8899:1;8896;8889:12;8851:52;-1:-1:-1;8922:16:49;;8760:184;-1:-1:-1;8760:184:49:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1126200",
        "executionCost": "1202",
        "totalCost": "1127402"
      },
      "external": {
        "calculateRootFromPowerOfTwo(bytes32[])": "infinite",
        "getEmptyTreeHashAtIndex(uint256)": "infinite",
        "getHashOfWordAtIndex(bytes,uint256)": "infinite",
        "getMerkleRootFromBytes(bytes,uint256)": "infinite",
        "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "infinite"
      }
    },
    "methodIdentifiers": {
      "calculateRootFromPowerOfTwo(bytes32[])": "82b0eab8",
      "getEmptyTreeHashAtIndex(uint256)": "451a1055",
      "getHashOfWordAtIndex(bytes,uint256)": "34bd712d",
      "getMerkleRootFromBytes(bytes,uint256)": "c84583a1",
      "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "79de4601"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"calculateRootFromPowerOfTwo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getEmptyTreeHashAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_wordIndex\",\"type\":\"uint256\"}],\"name\":\"getHashOfWordAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_log2Size\",\"type\":\"uint256\"}],\"name\":\"getMerkleRootFromBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_position\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_logSizeOfReplacement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_logSizeOfFullDrive\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_replacement\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"name\":\"getRootAfterReplacementInDrive\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateRootFromPowerOfTwo(bytes32[])\":{\"params\":{\"hashes\":\"The array containing power of 2 elements\"},\"returns\":{\"_0\":\"byte32 the root hash being calculated\"}},\"getEmptyTreeHashAtIndex(uint256)\":{\"details\":\"first index is keccak(0), second index is keccak(keccak(0), keccak(0))\",\"params\":{\"_index\":\"of hash wanted\"}},\"getHashOfWordAtIndex(bytes,uint256)\":{\"details\":\"if word is incomplete (< 8 bytes) it gets padded with zeroes\",\"params\":{\"_data\":\"array of bytes\",\"_wordIndex\":\"index of word inside the bytes to get the hash of\"}},\"getMerkleRootFromBytes(bytes,uint256)\":{\"details\":\"_data is padded with zeroes until is multiple of 8root is completed with zero tree until log2size is completehashes are taken word by word (8 bytes by 8 bytes)\",\"params\":{\"_data\":\"array of bytes to be merklelized\",\"_log2Size\":\"log2 of total size of the drive\"}},\"getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])\":{\"params\":{\"_logSizeOfFullDrive\":\"log2 of size the full drive, which can be the entire machine\",\"_logSizeOfReplacement\":\"log2 of size the replacement\",\"_position\":\"position of _drive\",\"_replacement\":\"hash of the replacement\",\"siblings\":\"of replacement that merkle root can be calculated\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRootFromPowerOfTwo(bytes32[])\":{\"notice\":\"Calculate the root of Merkle tree from an array of power of 2 elements\"},\"getEmptyTreeHashAtIndex(uint256)\":{\"notice\":\"Gets precomputed hash of zero in empty tree hashes\"},\"getHashOfWordAtIndex(bytes,uint256)\":{\"notice\":\"Get the hash of a word in an array of bytes\"},\"getMerkleRootFromBytes(bytes,uint256)\":{\"notice\":\"get merkle root of generic array of bytes\"},\"getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])\":{\"notice\":\"Gets merkle root hash of drive with a replacement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@cartesi/util/contracts/Merkle.sol\":\"Merkle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/CartesiMath.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title CartesiMath\\n/// @author Felipe Argento\\npragma solidity ^0.8.0;\\n\\nlibrary CartesiMath {\\n    // mapping values are packed as bytes3 each\\n    // see test/TestCartesiMath.ts for decimal values\\n    bytes constant log2tableTimes1M =\\n        hex\\\"0000000F4240182F421E8480236E082771822AD63A2DC6C0305E8532B04834C96736B3C23876D73A187A3B9D4A3D09003E5EA63FA0C540D17741F28843057D440BA745062945F60246DC1047B917488DC7495ABA4A207C4ADF8A4B98544C4B404CF8AA4DA0E64E44434EE3054F7D6D5013B750A61A5134C851BFF05247BD52CC58534DE753CC8D54486954C19C55384255AC75561E50568DE956FB575766B057D00758376F589CFA5900BA5962BC59C3135A21CA5A7EF15ADA945B34BF5B8D805BE4DF5C3AEA5C8FA95CE3265D356C5D86835DD6735E25455E73005EBFAD5F0B525F55F75F9FA25FE85A60302460770860BD0A61023061467F6189FD61CCAE620E98624FBF62902762CFD5630ECD634D12638AA963C7966403DC643F7F647A8264B4E864EEB56527EC6560906598A365D029660724663D9766738566A8F066DDDA6712476746386779AF67ACAF67DF3A6811526842FA68743268A4FC68D55C6905536934E169640A6992CF69C13169EF326A1CD46A4A186A76FF6AA38C6ACFC0\\\";\\n\\n    /// @notice Approximates log2 * 1M\\n    /// @param _num number to take log2 * 1M of\\n    /// @return approximate log2 times 1M\\n    function log2ApproxTimes1M(uint256 _num) public pure returns (uint256) {\\n        require(_num > 0, \\\"Number cannot be zero\\\");\\n        uint256 leading = 0;\\n\\n        if (_num == 1) return 0;\\n\\n        while (_num > 128) {\\n            _num = _num >> 1;\\n            leading += 1;\\n        }\\n        return (leading * uint256(1000000)) + (getLog2TableTimes1M(_num));\\n    }\\n\\n    /// @notice navigates log2tableTimes1M\\n    /// @param _num number to take log2 of\\n    /// @return result after table look-up\\n    function getLog2TableTimes1M(uint256 _num) public pure returns (uint256) {\\n        bytes3 result = 0;\\n        for (uint8 i = 0; i < 3; i++) {\\n            bytes3 tempResult = log2tableTimes1M[(_num - 1) * 3 + i];\\n            result = result | (tempResult >> (i * 8));\\n        }\\n\\n        return uint256(uint24(result));\\n    }\\n\\n    /// @notice get floor of log2 of number\\n    /// @param _num number to take floor(log2) of\\n    /// @return floor(log2) of _num\\n   function getLog2Floor(uint256 _num) public pure returns (uint8) {\\n       require(_num != 0, \\\"log of zero is undefined\\\");\\n\\n       return uint8(255 - clz(_num));\\n    }\\n\\n    /// @notice checks if a number is Power of 2\\n    /// @param _num number to check\\n    /// @return true if number is power of 2, false if not\\n    function isPowerOf2(uint256 _num) public pure returns (bool) {\\n        if (_num == 0) return false;\\n\\n        return _num & (_num - 1) == 0;\\n    }\\n\\n    /// @notice count trailing zeros\\n    /// @param _num number you want the ctz of\\n    /// @dev this a binary search implementation\\n    function ctz(uint256 _num) public pure returns (uint256) {\\n        if (_num == 0) return 256;\\n\\n        uint256 n = 0;\\n        if (_num & 0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0) { n = n + 128; _num = _num >> 128; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF == 0) { n = n + 64; _num = _num >> 64; }\\n        if (_num & 0x00000000000000000000000000000000000000000000000000000000FFFFFFFF == 0) { n = n + 32; _num = _num >> 32; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000000000000000FFFF == 0) { n = n + 16; _num = _num >> 16; }\\n        if (_num & 0x00000000000000000000000000000000000000000000000000000000000000FF == 0) { n = n +  8; _num = _num >>  8; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000000000000000000F == 0) { n = n +  4; _num = _num >>  4; }\\n        if (_num & 0x0000000000000000000000000000000000000000000000000000000000000003 == 0) { n = n +  2; _num = _num >>  2; }\\n        if (_num & 0x0000000000000000000000000000000000000000000000000000000000000001 == 0) { n = n +  1; }\\n\\n        return n;\\n    }\\n\\n    /// @notice count leading zeros\\n    /// @param _num number you want the clz of\\n    /// @dev this a binary search implementation\\n    function clz(uint256 _num) public pure returns (uint256) {\\n        if (_num == 0) return 256;\\n\\n        uint256 n = 0;\\n        if (_num & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 == 0) { n = n + 128; _num = _num << 128; }\\n        if (_num & 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 == 0) { n = n + 64; _num = _num << 64; }\\n        if (_num & 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 == 0) { n = n + 32; _num = _num << 32; }\\n        if (_num & 0xFFFF000000000000000000000000000000000000000000000000000000000000 == 0) { n = n + 16; _num = _num << 16; }\\n        if (_num & 0xFF00000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  8; _num = _num <<  8; }\\n        if (_num & 0xF000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  4; _num = _num <<  4; }\\n        if (_num & 0xC000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  2; _num = _num <<  2; }\\n        if (_num & 0x8000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  1; }\\n\\n        return n;\\n    }\\n}\\n\",\"keccak256\":\"0x28b74012e966438edff701decdc5ffd207b3f0244af65fbd7d397050986e58d4\",\"license\":\"Apache-2.0\"},\"@cartesi/util/contracts/Merkle.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Library for Merkle proofs\\npragma solidity ^0.8.0;\\n\\nimport \\\"./CartesiMath.sol\\\";\\n\\nlibrary Merkle {\\n    using CartesiMath for uint256;\\n\\n    uint128 constant L_WORD_SIZE = 3; // word = 8 bytes, log = 3\\n    // number of hashes in EMPTY_TREE_HASHES\\n    uint128 constant EMPTY_TREE_SIZE = 1952; // 61*32=1952. 32 bytes per 61 indexes (64 words)\\n\\n    // merkle root hashes of trees of zero concatenated\\n    // 32 bytes for each root, first one is keccak(0), second one is\\n    // keccak(keccack(0), keccak(0)) and so on\\n\\n    bytes constant EMPTY_TREE_HASHES =\\n        hex\\\"011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce4d9470a821fbe90117ec357e30bad9305732fb19ddf54a07dd3e29f440619254ae39ce8537aca75e2eff3e38c98011dfe934e700a0967732fc07b430dd656a233fc9a15f5b4869c872f81087bb6104b7d63e6f9ab47f2c43f3535eae7172aa7f17d2dd614cddaa4d879276b11e0672c9560033d3e8453a1d045339d34ba601b9c37b8b13ca95166fb7af16988a70fcc90f38bf9126fd833da710a47fb37a55e68e7a427fa943d9966b389f4f257173676090c6e95f43e2cb6d65f8758111e30930b0b9deb73e155c59740bacf14a6ff04b64bb8e201a506409c3fe381ca4ea90cd5deac729d0fdaccc441d09d7325f41586ba13c801b7eccae0f95d8f3933efed8b96e5b7f6f459e9cb6a2f41bf276c7b85c10cd4662c04cbbb365434726c0a0c9695393027fb106a8153109ac516288a88b28a93817899460d6310b71cf1e6163e8806fa0d4b197a259e8c3ac28864268159d0ac85f8581ca28fa7d2c0c03eb91e3eee5ca7a3da2b3053c9770db73599fb149f620e3facef95e947c0ee860b72122e31e4bbd2b7c783d79cc30f60c6238651da7f0726f767d22747264fdb046f7549f26cc70ed5e18baeb6c81bb0625cb95bb4019aeecd40774ee87ae29ec517a71f6ee264c5d761379b3d7d617ca83677374b49d10aec50505ac087408ca892b573c267a712a52e1d06421fe276a03efb1889f337201110fdc32a81f8e152499af665835aabfdc6740c7e2c3791a31c3cdc9f5ab962f681b12fc092816a62f27d86025599a41233848702f0cfc0437b445682df51147a632a0a083d2d38b5e13e466a8935afff58bb533b3ef5d27fba63ee6b0fd9e67ff20af9d50deee3f8bf065ec220c1fd4ba57e341261d55997f85d66d32152526736872693d2b437a233e2337b715f6ac9a6a272622fdc2d67fcfe1da3459f8dab4ed7e40a657a54c36766c5e8ac9a88b35b05c34747e6507f6b044ab66180dc76ac1a696de03189593fedc0d0dbbd855c8ead673544899b0960e4a5a7ca43b4ef90afe607de7698caefdc242788f654b57a4fb32a71b335ef6ff9a4cc118b282b53bdd6d6192b7a82c3c5126b9c7e33c8e5a5ac9738b8bd31247fb7402054f97b573e8abb9faad219f4fd085aceaa7f542d787ee4196d365f3cc566e7bbcfbfd451230c48d804c017d21e2d8fa914e2559bb72bf0ab78c8ab92f00ef0d0d576eccdd486b64138a4172674857e543d1d5b639058dd908186597e366ad5f3d9c7ceaff44d04d1550b8d33abc751df07437834ba5acb32328a396994aebb3c40f759c2d6d7a3cb5377e55d5d218ef5a296dda8ddc355f3f50c3d0b660a51dfa4d98a6a5a33564556cf83c1373a814641d6a1dcef97b883fee61bb84fe60a3409340217e629cc7e4dcc93b85d8820921ff5826148b60e6939acd7838e1d7f20562bff8ee4b5ec4a05ad997a57b9796fdcb2eda87883c2640b072b140b946bfdf6575cacc066fdae04f6951e63624cbd316a677cad529bbe4e97b9144e4bc06c4afd1de55dd3e1175f90423847a230d34dfb71ed56f2965a7f6c72e6aa33c24c303fd67745d632656c5ef90bec80f4f5d1daa251988826cef375c81c36bf457e09687056f924677cb0bccf98dff81e014ce25f2d132497923e267363963cdf4302c5049d63131dc03fd95f65d8b6aa5934f817252c028c90f56d413b9d5d10d89790707dae2fabb249f649929927c21dd71e3f656826de5451c5da375aadecbd59d5ebf3a31fae65ac1b316a1611f1b276b26530f58d7247df459ce1f86db1d734f6f811932f042cee45d0e455306d01081bc3384f82c5fb2aacaa19d89cdfa46cc916eac61121475ba2e6191b4feecbe1789717021a158ace5d06744b40f551076b67cd63af60007f8c99876e1424883a45ec49d497ddaf808a5521ca74a999ab0b3c7aa9c80f85e93977ec61ce68b20307a1a81f71ca645b568fcd319ccbb5f651e87b707d37c39e15f945ea69e2f7c7d2ccc85b7e654c07e96f0636ae4044fe0e38590b431795ad0f8647bdd613713ada493cc17efd313206380e6a685b8198475bbd021c6e9d94daab2214947127506073e44d5408ba166c512a0b86805d07f5a44d3c41706be2bc15e712e55805248b92e8677d90f6d284d1d6ffaff2c430657042a0e82624fa3717b06cc0a6fd12230ea586dae83019fb9e06034ed2803c98d554b93c9a52348cafff75c40174a91f9ae6b8647854a156029f0b88b83316663ce574a4978277bb6bb27a31085634b6ec78864b6d8201c7e93903d75815067e378289a3d072ae172dafa6a452470f8d645bebfad9779594fc0784bb764a22e3a8181d93db7bf97893c414217a618ccb14caa9e92e8c61673afc9583662e812adba1f87a9c68202d60e909efab43c42c0cb00695fc7f1ffe67c75ca894c3c51e1e5e731360199e600f6ced9a87b2a6a87e70bf251bb5075ab222138288164b2eda727515ea7de12e2496d4fe42ea8d1a120c03cf9c50622c2afe4acb0dad98fd62d07ab4e828a94495f6d1ab973982c7ccbe6c1fae02788e4422ae22282fa49cbdb04ba54a7a238c6fc41187451383460762c06d1c8a72b9cd718866ad4b689e10c9a8c38fe5ef045bd785b01e980fc82c7e3532ce81876b778dd9f1ceeba4478e86411fb6fdd790683916ca832592485093644e8760cd7b4c01dba1ccc82b661bf13f0e3f34acd6b88\\\";\\n\\n    /// @notice Gets merkle root hash of drive with a replacement\\n    /// @param _position position of _drive\\n    /// @param _logSizeOfReplacement log2 of size the replacement\\n    /// @param _logSizeOfFullDrive log2 of size the full drive, which can be the entire machine\\n    /// @param _replacement hash of the replacement\\n    /// @param siblings of replacement that merkle root can be calculated\\n    function getRootAfterReplacementInDrive(\\n        uint256 _position,\\n        uint256 _logSizeOfReplacement,\\n        uint256 _logSizeOfFullDrive,\\n        bytes32 _replacement,\\n        bytes32[] calldata siblings\\n    ) public pure returns (bytes32) {\\n        require(\\n            _logSizeOfFullDrive >= _logSizeOfReplacement &&\\n                _logSizeOfReplacement >= 3 &&\\n                _logSizeOfFullDrive <= 64,\\n            \\\"3 <= logSizeOfReplacement <= logSizeOfFullDrive <= 64\\\"\\n        );\\n\\n        uint256 size = 1 << _logSizeOfReplacement;\\n\\n        require(((size - 1) & _position) == 0, \\\"Position is not aligned\\\");\\n        require(\\n            siblings.length == _logSizeOfFullDrive - _logSizeOfReplacement,\\n            \\\"Proof length does not match\\\"\\n        );\\n\\n        for (uint256 i; i < siblings.length; i++) {\\n            if ((_position & (size << i)) == 0) {\\n                _replacement = keccak256(\\n                    abi.encodePacked(_replacement, siblings[i])\\n                );\\n            } else {\\n                _replacement = keccak256(\\n                    abi.encodePacked(siblings[i], _replacement)\\n                );\\n            }\\n        }\\n\\n        return _replacement;\\n    }\\n\\n    /// @notice Gets precomputed hash of zero in empty tree hashes\\n    /// @param _index of hash wanted\\n    /// @dev first index is keccak(0), second index is keccak(keccak(0), keccak(0))\\n    function getEmptyTreeHashAtIndex(uint256 _index)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        uint256 start = _index * 32;\\n        require(EMPTY_TREE_SIZE >= start + 32, \\\"index out of bounds\\\");\\n        bytes32 hashedZeros;\\n        bytes memory zeroTree = EMPTY_TREE_HASHES;\\n\\n        // first word is length, then skip index words\\n        assembly {\\n            hashedZeros := mload(add(add(zeroTree, 0x20), start))\\n        }\\n        return hashedZeros;\\n    }\\n\\n    /// @notice get merkle root of generic array of bytes\\n    /// @param _data array of bytes to be merklelized\\n    /// @param _log2Size log2 of total size of the drive\\n    /// @dev _data is padded with zeroes until is multiple of 8\\n    /// @dev root is completed with zero tree until log2size is complete\\n    /// @dev hashes are taken word by word (8 bytes by 8 bytes)\\n    function getMerkleRootFromBytes(bytes calldata _data, uint256 _log2Size)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        require(_log2Size >= 3 && _log2Size <= 64, \\\"range of log2Size: [3,64]\\\");\\n\\n        // if _data is empty return pristine drive of size log2size\\n        if (_data.length == 0) return getEmptyTreeHashAtIndex(_log2Size - 3);\\n\\n        // total size of the drive in words\\n        uint256 size = 1 << (_log2Size - 3);\\n        require(\\n            size << L_WORD_SIZE >= _data.length,\\n            \\\"data is bigger than drive\\\"\\n        );\\n        // the stack depth is log2(_data.length / 8) + 2\\n        uint256 stack_depth = 2 +\\n            ((_data.length) >> L_WORD_SIZE).getLog2Floor();\\n        bytes32[] memory stack = new bytes32[](stack_depth);\\n\\n        uint256 numOfHashes; // total number of hashes on stack (counting levels)\\n        uint256 stackLength; // total length of stack\\n        uint256 numOfJoins; // number of hashes of the same level on stack\\n        uint256 topStackLevel; // hash level of the top of the stack\\n\\n        while (numOfHashes < size) {\\n            if ((numOfHashes << L_WORD_SIZE) < _data.length) {\\n                // we still have words to hash\\n                stack[stackLength] = getHashOfWordAtIndex(_data, numOfHashes);\\n                numOfHashes++;\\n\\n                numOfJoins = numOfHashes;\\n            } else {\\n                // since padding happens in hashOfWordAtIndex function\\n                // we only need to complete the stack with pre-computed\\n                // hash(0), hash(hash(0),hash(0)) and so on\\n                topStackLevel = numOfHashes.ctz();\\n\\n                stack[stackLength] = getEmptyTreeHashAtIndex(topStackLevel);\\n\\n                //Empty Tree Hash summarizes many hashes\\n                numOfHashes = numOfHashes + (1 << topStackLevel);\\n                numOfJoins = numOfHashes >> topStackLevel;\\n            }\\n\\n            stackLength++;\\n\\n            // while there are joins, hash top of stack together\\n            while (numOfJoins & 1 == 0) {\\n                bytes32 h2 = stack[stackLength - 1];\\n                bytes32 h1 = stack[stackLength - 2];\\n\\n                stack[stackLength - 2] = keccak256(abi.encodePacked(h1, h2));\\n                stackLength = stackLength - 1; // remove hashes from stack\\n\\n                numOfJoins = numOfJoins >> 1;\\n            }\\n        }\\n        require(stackLength == 1, \\\"stack error\\\");\\n\\n        return stack[0];\\n    }\\n\\n    /// @notice Get the hash of a word in an array of bytes\\n    /// @param _data array of bytes\\n    /// @param _wordIndex index of word inside the bytes to get the hash of\\n    /// @dev if word is incomplete (< 8 bytes) it gets padded with zeroes\\n    function getHashOfWordAtIndex(bytes calldata _data, uint256 _wordIndex)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        uint256 start = _wordIndex << L_WORD_SIZE;\\n        uint256 end = start + (1 << L_WORD_SIZE);\\n\\n        // TODO: in .lua this just returns zero, but this might be more consistent\\n        require(start <= _data.length, \\\"word out of bounds\\\");\\n\\n        if (end <= _data.length) {\\n            return keccak256(abi.encodePacked(_data[start:end]));\\n        }\\n\\n        // word is incomplete\\n        // fill paddedSlice with incomplete words - the rest is going to be bytes(0)\\n        bytes memory paddedSlice = new bytes(8);\\n        uint256 remaining = _data.length - start;\\n\\n        for (uint256 i; i < remaining; i++) {\\n            paddedSlice[i] = _data[start + i];\\n        }\\n\\n        return keccak256(paddedSlice);\\n    }\\n\\n    /// @notice Calculate the root of Merkle tree from an array of power of 2 elements\\n    /// @param hashes The array containing power of 2 elements\\n    /// @return byte32 the root hash being calculated\\n    function calculateRootFromPowerOfTwo(bytes32[] memory hashes)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        // revert when the input is not of power of 2\\n        require((hashes.length).isPowerOf2(), \\\"array len not power of 2\\\");\\n\\n        if (hashes.length == 1) {\\n            return hashes[0];\\n        } else {\\n            bytes32[] memory newHashes = new bytes32[](hashes.length >> 1);\\n\\n            for (uint256 i; i < hashes.length; i += 2) {\\n                newHashes[i >> 1] = keccak256(\\n                    abi.encodePacked(hashes[i], hashes[i + 1])\\n                );\\n            }\\n\\n            return calculateRootFromPowerOfTwo(newHashes);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe9896db44cc4dab335a3e776c629186824823d316d902b2efecb4b0a3e3dfdb7\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calculateRootFromPowerOfTwo(bytes32[])": {
        "notice": "Calculate the root of Merkle tree from an array of power of 2 elements"
      },
      "getEmptyTreeHashAtIndex(uint256)": {
        "notice": "Gets precomputed hash of zero in empty tree hashes"
      },
      "getHashOfWordAtIndex(bytes,uint256)": {
        "notice": "Get the hash of a word in an array of bytes"
      },
      "getMerkleRootFromBytes(bytes,uint256)": {
        "notice": "get merkle root of generic array of bytes"
      },
      "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": {
        "notice": "Gets merkle root hash of drive with a replacement"
      }
    },
    "version": 1
  }
}