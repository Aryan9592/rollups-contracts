{
  "contractName": "IERC20Portal",
  "sourceName": "contracts/portals/IERC20Portal.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dapp",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "depositERC20Tokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "depositERC20Tokens(address,address,uint256,bytes)": {
        "details": "The caller must allow the portal to withdraw at least      `_amount` tokens from their account beforehand.",
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_dapp": "The address of the DApp",
          "_data": "Additional data to be interpreted by L2",
          "_token": "The ERC-20 token contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "depositERC20Tokens(address,address,uint256,bytes)": {
        "notice": "Transfer ERC-20 tokens to a DApp and add an input to         the DApp's input box to signal such operation."
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": null,
    "methodIdentifiers": {
      "depositERC20Tokens(address,address,uint256,bytes)": "95854b81"
    }
  }
}