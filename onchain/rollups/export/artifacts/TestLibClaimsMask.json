{
  "contractName": "TestLibClaimsMask",
  "sourceName": "contracts/test_helper/TestLibClaimsMask.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "alreadyClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        }
      ],
      "name": "clearAgreementMask",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        }
      ],
      "name": "getAgreementMask",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        }
      ],
      "name": "getConsensusGoalMask",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "getNumClaims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "increaseNumClaims",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "newClaimsMask",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numValidators",
          "type": "uint256"
        }
      ],
      "name": "newClaimsMaskWithConsensusGoalSet",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "removeValidator",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        }
      ],
      "name": "setAgreementMask",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ClaimsMask",
          "name": "_claimsMask",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_validatorIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setNumClaims",
      "outputs": [
        {
          "internalType": "ClaimsMask",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506105d7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063cb9f881311610071578063cb9f881314610120578063cd70835c14610143578063cf7b90a614610156578063d4056ffe14610169578063de7fb2801461017c578063fa95f4001461018f57600080fd5b806352f1d2b4146100ae578063574125c2146100d45780638336d005146100e7578063a8c5d8f4146100fa578063ac266b8c1461010d575b600080fd5b6100c16100bc3660046104aa565b6101a2565b6040519081526020015b60405180910390f35b6100c16100e23660046104d6565b6101b7565b6100c16100f53660046104d6565b6101c8565b6100c16101083660046104ef565b6101d0565b6100c161011b3660046104ef565b6101e3565b61013361012e3660046104ef565b6101ef565b60405190151581526020016100cb565b6100c16101513660046104ef565b610202565b6100c16101643660046104d6565b61020e565b6100c16101773660046104d6565b61021f565b6100c161018a3660046104aa565b61022e565b6100c161019d3660046104d6565b61023b565b60006101af848484610247565b949350505050565b60006101c2826102a3565b92915050565b6000816101c2565b60006101dc8383610304565b9392505050565b60006101dc8383610352565b6000600160f884901c831c1615156101dc565b60006101dc83836103b8565b60006001600160f81b0382166101c2565b600060f082901c60ff166101c2565b60006101af8484846103f6565b60006101c28260f81c90565b6000600883106102725760405162461bcd60e51b815260040161026990610511565b60405180910390fd5b600061027e8585610304565b9050600061028c8483610553565b90506102998686836103f6565b9695505050505050565b600060088211156102eb5760405162461bcd60e51b8152602060048201526012602482015271757020746f20382076616c696461746f727360701b6044820152606401610269565b60006102fa600180851b61056b565b60f01b9392505050565b6000600882106103265760405162461bcd60e51b815260040161026990610511565b60006103376001634000000061056b565b90508061034584601e610582565b85901c1691505092915050565b6000600882106103745760405162461bcd60e51b815260040161026990610511565b8260006103828460f8610553565b6001901b199182169190506103988460f0610553565b6001901b199182169190506103af828560006103f6565b95945050505050565b6000600882106103da5760405162461bcd60e51b815260040161026990610511565b60006103e78360f8610553565b6001901b841791505092915050565b6000600883106104185760405162461bcd60e51b815260040161026990610511565b6104276001634000000061056b565b82111561046c5760405162461bcd60e51b8152602060048201526013602482015272436c61696d734d61736b204f766572666c6f7760681b6044820152606401610269565b600061047984601e610582565b6104886001634000000061056b565b901b19905084811661049b85601e610582565b9390931b909217949350505050565b6000806000606084860312156104bf57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104e857600080fd5b5035919050565b6000806040838503121561050257600080fd5b50508035926020909101359150565b602080825260129082015271696e646578206f7574206f662072616e676560701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156105665761056661053d565b500190565b60008282101561057d5761057d61053d565b500390565b600081600019048311821515161561059c5761059c61053d565b50029056fea2646970667358221220592a89da88da08f5cbe6f023ba006c0c7bbcc12f6d8822fd79f8ec0d865a80e664736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063cb9f881311610071578063cb9f881314610120578063cd70835c14610143578063cf7b90a614610156578063d4056ffe14610169578063de7fb2801461017c578063fa95f4001461018f57600080fd5b806352f1d2b4146100ae578063574125c2146100d45780638336d005146100e7578063a8c5d8f4146100fa578063ac266b8c1461010d575b600080fd5b6100c16100bc3660046104aa565b6101a2565b6040519081526020015b60405180910390f35b6100c16100e23660046104d6565b6101b7565b6100c16100f53660046104d6565b6101c8565b6100c16101083660046104ef565b6101d0565b6100c161011b3660046104ef565b6101e3565b61013361012e3660046104ef565b6101ef565b60405190151581526020016100cb565b6100c16101513660046104ef565b610202565b6100c16101643660046104d6565b61020e565b6100c16101773660046104d6565b61021f565b6100c161018a3660046104aa565b61022e565b6100c161019d3660046104d6565b61023b565b60006101af848484610247565b949350505050565b60006101c2826102a3565b92915050565b6000816101c2565b60006101dc8383610304565b9392505050565b60006101dc8383610352565b6000600160f884901c831c1615156101dc565b60006101dc83836103b8565b60006001600160f81b0382166101c2565b600060f082901c60ff166101c2565b60006101af8484846103f6565b60006101c28260f81c90565b6000600883106102725760405162461bcd60e51b815260040161026990610511565b60405180910390fd5b600061027e8585610304565b9050600061028c8483610553565b90506102998686836103f6565b9695505050505050565b600060088211156102eb5760405162461bcd60e51b8152602060048201526012602482015271757020746f20382076616c696461746f727360701b6044820152606401610269565b60006102fa600180851b61056b565b60f01b9392505050565b6000600882106103265760405162461bcd60e51b815260040161026990610511565b60006103376001634000000061056b565b90508061034584601e610582565b85901c1691505092915050565b6000600882106103745760405162461bcd60e51b815260040161026990610511565b8260006103828460f8610553565b6001901b199182169190506103988460f0610553565b6001901b199182169190506103af828560006103f6565b95945050505050565b6000600882106103da5760405162461bcd60e51b815260040161026990610511565b60006103e78360f8610553565b6001901b841791505092915050565b6000600883106104185760405162461bcd60e51b815260040161026990610511565b6104276001634000000061056b565b82111561046c5760405162461bcd60e51b8152602060048201526013602482015272436c61696d734d61736b204f766572666c6f7760681b6044820152606401610269565b600061047984601e610582565b6104886001634000000061056b565b901b19905084811661049b85601e610582565b9390931b909217949350505050565b6000806000606084860312156104bf57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104e857600080fd5b5035919050565b6000806040838503121561050257600080fd5b50508035926020909101359150565b602080825260129082015271696e646578206f7574206f662072616e676560701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156105665761056661053d565b500190565b60008282101561057d5761057d61053d565b500390565b600081600019048311821515161561059c5761059c61053d565b50029056fea2646970667358221220592a89da88da08f5cbe6f023ba006c0c7bbcc12f6d8822fd79f8ec0d865a80e664736f6c634300080d0033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB9F8813 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCB9F8813 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xCD70835C EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xCF7B90A6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD4056FFE EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDE7FB280 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xFA95F400 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52F1D2B4 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x574125C2 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8336D005 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA8C5D8F4 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xAC266B8C EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP5 DUP5 DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2 DUP3 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP4 DUP4 PUSH2 0x304 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP4 DUP4 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xF8 DUP5 SWAP1 SHR DUP4 SHR AND ISZERO ISZERO PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP4 DUP4 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB DUP3 AND PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF0 DUP3 SWAP1 SHR PUSH1 0xFF AND PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP5 DUP5 DUP5 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2 DUP3 PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27E DUP6 DUP6 PUSH2 0x304 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28C DUP5 DUP4 PUSH2 0x553 JUMP JUMPDEST SWAP1 POP PUSH2 0x299 DUP7 DUP7 DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 GT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x757020746F20382076616C696461746F7273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA PUSH1 0x1 DUP1 DUP6 SHL PUSH2 0x56B JUMP JUMPDEST PUSH1 0xF0 SHL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x56B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x345 DUP5 PUSH1 0x1E PUSH2 0x582 JUMP JUMPDEST DUP6 SWAP1 SHR AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH2 0x382 DUP5 PUSH1 0xF8 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x398 DUP5 PUSH1 0xF0 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x3AF DUP3 DUP6 PUSH1 0x0 PUSH2 0x3F6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7 DUP4 PUSH1 0xF8 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL DUP5 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x427 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x56B JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x436C61696D734D61736B204F766572666C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 DUP5 PUSH1 0x1E PUSH2 0x582 JUMP JUMPDEST PUSH2 0x488 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x56B JUMP JUMPDEST SWAP1 SHL NOT SWAP1 POP DUP5 DUP2 AND PUSH2 0x49B DUP6 PUSH1 0x1E PUSH2 0x582 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SHL SWAP1 SWAP3 OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x696E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x53D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x57D JUMPI PUSH2 0x57D PUSH2 0x53D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x53D JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A DUP10 0xDA DUP9 0xDA ADDMOD CREATE2 0xCB 0xE6 CREATE 0x23 0xBA STOP PUSH13 0xC7BBCC12F6D8822FD79F8EC0D DUP7 GAS DUP1 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
      "sourceMap": "720:2398:47:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@alreadyClaimed_6048": {
          "entryPoint": null,
          "id": 6048,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@alreadyClaimed_9936": {
          "entryPoint": 495,
          "id": 9936,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@clearAgreementMask_6002": {
          "entryPoint": null,
          "id": 6002,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@clearAgreementMask_9905": {
          "entryPoint": 526,
          "id": 9905,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getAgreementMask_6020": {
          "entryPoint": null,
          "id": 6020,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getAgreementMask_9919": {
          "entryPoint": 571,
          "id": 9919,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getConsensusGoalMask_6110": {
          "entryPoint": null,
          "id": 6110,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getConsensusGoalMask_9968": {
          "entryPoint": 543,
          "id": 9968,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getNumClaims_5852": {
          "entryPoint": 772,
          "id": 5852,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@getNumClaims_9848": {
          "entryPoint": 464,
          "id": 9848,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@increaseNumClaims_5893": {
          "entryPoint": 583,
          "id": 5893,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@increaseNumClaims_9869": {
          "entryPoint": 418,
          "id": 9869,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@newClaimsMaskWithConsensusGoalSet_5811": {
          "entryPoint": 675,
          "id": 5811,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@newClaimsMaskWithConsensusGoalSet_9831": {
          "entryPoint": 439,
          "id": 9831,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@newClaimsMask_5778": {
          "entryPoint": null,
          "id": 5778,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@newClaimsMask_9817": {
          "entryPoint": 456,
          "id": 9817,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@removeValidator_6182": {
          "entryPoint": 850,
          "id": 6182,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@removeValidator_9986": {
          "entryPoint": 483,
          "id": 9986,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@setAgreementMask_6089": {
          "entryPoint": 952,
          "id": 6089,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@setAgreementMask_9954": {
          "entryPoint": 514,
          "id": 9954,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@setNumClaims_5971": {
          "entryPoint": 1014,
          "id": 5971,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@setNumClaims_9890": {
          "entryPoint": 558,
          "id": 9890,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 1238,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760t_uint256": {
          "entryPoint": 1263,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760t_uint256t_uint256": {
          "entryPoint": 1194,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_724a1a52159ca2ba80a0176a83b5dd7273d23b0484847d7480bf867e72e8022d__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1297,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c4d2189ab07abe2786c9ddd18bc105c0ac91aadb5554043dc1484eea89108e20__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_d1a2afdc0f74321c3b7d82f19b47510e11d228fd856d186619a9fd649a0593ab__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_userDefinedValueType$_ClaimsMask_$5760__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 1363,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 1410,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 1387,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 1341,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:3245:49",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:49",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "149:212:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "195:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "204:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "207:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "197:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "197:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "197:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "170:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "179:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "166:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "166:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "191:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "162:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "162:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "159:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "220:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "230:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "220:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "262:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "289:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "300:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "285:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "285:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "272:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "272:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "262:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "313:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "340:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "351:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "336:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "323:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "323:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "313:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760t_uint256t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "99:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "110:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "122:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "130:6:49",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "138:6:49",
                    "type": ""
                  }
                ],
                "src": "14:347:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "498:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "508:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "520:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "531:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "516:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "516:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "508:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "550:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "561:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "543:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "543:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_userDefinedValueType$_ClaimsMask_$5760__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "467:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "478:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "489:4:49",
                    "type": ""
                  }
                ],
                "src": "366:208:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "649:110:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "695:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "704:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "707:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "697:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "697:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "697:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "670:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "679:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "666:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "666:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "691:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "662:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "662:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "659:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "720:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "743:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "730:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "720:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "615:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "626:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "638:6:49",
                    "type": ""
                  }
                ],
                "src": "579:180:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "882:161:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "928:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "937:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "940:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "930:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "930:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "930:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "903:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "912:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "899:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "899:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "924:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "892:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "953:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "976:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "963:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "963:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "953:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "995:42:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1022:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1033:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1018:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1018:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1005:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1005:32:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "995:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "840:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "851:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "863:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "871:6:49",
                    "type": ""
                  }
                ],
                "src": "764:279:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1149:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1159:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1171:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1182:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1159:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1201:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1212:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1194:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1194:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1194:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1118:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1129:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1140:4:49",
                    "type": ""
                  }
                ],
                "src": "1048:177:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1325:92:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1335:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1347:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1358:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1343:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1343:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1335:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1402:6:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1395:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1395:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1388:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1388:22:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1370:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:41:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1370:41:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1294:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1305:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1316:4:49",
                    "type": ""
                  }
                ],
                "src": "1230:187:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1523:110:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1569:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1578:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1581:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1571:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1571:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1544:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1553:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1540:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1540:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1565:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "1533:52:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1594:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1617:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1604:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1594:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1489:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1500:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1512:6:49",
                    "type": ""
                  }
                ],
                "src": "1422:211:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1812:168:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1829:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1840:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1822:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1822:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1822:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1863:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1874:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1859:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1859:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1879:2:49",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1852:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1852:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1902:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1913:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1898:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1898:18:49"
                          },
                          {
                            "hexValue": "696e646578206f7574206f662072616e6765",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1918:20:49",
                            "type": "",
                            "value": "index out of range"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1891:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:48:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1891:48:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1948:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1960:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1971:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1956:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1956:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1948:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_724a1a52159ca2ba80a0176a83b5dd7273d23b0484847d7480bf867e72e8022d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1789:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1803:4:49",
                    "type": ""
                  }
                ],
                "src": "1638:342:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2017:95:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2034:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2041:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2046:10:49",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2037:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2037:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2027:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2027:31:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2027:31:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2074:1:49",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2077:4:49",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2067:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2067:15:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2098:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:4:49",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "2091:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2091:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2091:15:49"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "1985:127:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2165:80:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2192:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "2194:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2194:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2194:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2181:1:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2188:1:49"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2184:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2184:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2178:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2178:13:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2175:39:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2223:16:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2234:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2237:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2230:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2230:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "2223:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "2148:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "2151:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "2157:3:49",
                    "type": ""
                  }
                ],
                "src": "2117:128:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2424:168:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2441:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2452:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2434:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2434:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2434:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2475:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2486:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2471:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2471:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2491:2:49",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2464:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2464:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2514:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2525:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2510:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2510:18:49"
                          },
                          {
                            "hexValue": "757020746f20382076616c696461746f7273",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2530:20:49",
                            "type": "",
                            "value": "up to 8 validators"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2503:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2503:48:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2503:48:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2560:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2572:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2583:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2568:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2568:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2560:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_d1a2afdc0f74321c3b7d82f19b47510e11d228fd856d186619a9fd649a0593ab__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2401:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2415:4:49",
                    "type": ""
                  }
                ],
                "src": "2250:342:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2646:76:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2668:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "2670:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2670:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2670:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2662:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2665:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2659:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2659:8:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2656:34:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2699:17:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2711:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2714:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2707:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2707:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "2699:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "2628:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "2631:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "2637:4:49",
                    "type": ""
                  }
                ],
                "src": "2597:125:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2779:116:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2838:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "2840:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2840:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2840:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2810:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2803:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2803:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2796:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2796:17:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2818:1:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2829:1:49",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2825:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2825:6:49"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2833:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2821:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2821:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2815:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2815:21:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2792:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:45:49"
                      },
                      "nodeType": "YulIf",
                      "src": "2789:71:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2869:20:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "2884:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2887:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "2880:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2880:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "2869:7:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "2758:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "2761:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "2767:7:49",
                    "type": ""
                  }
                ],
                "src": "2727:168:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3074:169:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3091:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3102:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3084:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3084:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3084:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3125:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3136:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3121:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3121:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3141:2:49",
                            "type": "",
                            "value": "19"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3114:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3114:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3114:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3164:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3175:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3160:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3160:18:49"
                          },
                          {
                            "hexValue": "436c61696d734d61736b204f766572666c6f77",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3180:21:49",
                            "type": "",
                            "value": "ClaimsMask Overflow"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3153:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3153:49:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3153:49:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3211:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3223:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3234:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3219:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3211:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c4d2189ab07abe2786c9ddd18bc105c0ac91aadb5554043dc1484eea89108e20__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3051:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3065:4:49",
                    "type": ""
                  }
                ],
                "src": "2900:343:49"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_userDefinedValueType$_ClaimsMask_$5760__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_userDefinedValueType$_ClaimsMask_$5760(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_724a1a52159ca2ba80a0176a83b5dd7273d23b0484847d7480bf867e72e8022d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"index out of range\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d1a2afdc0f74321c3b7d82f19b47510e11d228fd856d186619a9fd649a0593ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"up to 8 validators\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c4d2189ab07abe2786c9ddd18bc105c0ac91aadb5554043dc1484eea89108e20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ClaimsMask Overflow\")\n        tail := add(headStart, 96)\n    }\n}",
          "id": 49,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB9F8813 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCB9F8813 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xCD70835C EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xCF7B90A6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD4056FFE EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDE7FB280 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xFA95F400 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52F1D2B4 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x574125C2 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8336D005 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA8C5D8F4 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xAC266B8C EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCB JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP5 DUP5 DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2 DUP3 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP4 DUP4 PUSH2 0x304 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP4 DUP4 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xF8 DUP5 SWAP1 SHR DUP4 SHR AND ISZERO ISZERO PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP4 DUP4 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB DUP3 AND PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF0 DUP3 SWAP1 SHR PUSH1 0xFF AND PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP5 DUP5 DUP5 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2 DUP3 PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27E DUP6 DUP6 PUSH2 0x304 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28C DUP5 DUP4 PUSH2 0x553 JUMP JUMPDEST SWAP1 POP PUSH2 0x299 DUP7 DUP7 DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 GT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x757020746F20382076616C696461746F7273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA PUSH1 0x1 DUP1 DUP6 SHL PUSH2 0x56B JUMP JUMPDEST PUSH1 0xF0 SHL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x56B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x345 DUP5 PUSH1 0x1E PUSH2 0x582 JUMP JUMPDEST DUP6 SWAP1 SHR AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH2 0x382 DUP5 PUSH1 0xF8 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x398 DUP5 PUSH1 0xF0 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL NOT SWAP2 DUP3 AND SWAP2 SWAP1 POP PUSH2 0x3AF DUP3 DUP6 PUSH1 0x0 PUSH2 0x3F6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 LT PUSH2 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7 DUP4 PUSH1 0xF8 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL DUP5 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 LT PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x427 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x56B JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x436C61696D734D61736B204F766572666C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 DUP5 PUSH1 0x1E PUSH2 0x582 JUMP JUMPDEST PUSH2 0x488 PUSH1 0x1 PUSH4 0x40000000 PUSH2 0x56B JUMP JUMPDEST SWAP1 SHL NOT SWAP1 POP DUP5 DUP2 AND PUSH2 0x49B DUP6 PUSH1 0x1E PUSH2 0x582 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SHL SWAP1 SWAP3 OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x696E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x53D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x57D JUMPI PUSH2 0x57D PUSH2 0x53D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x53D JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A DUP10 0xDA DUP9 0xDA ADDMOD CREATE2 0xCB 0xE6 CREATE 0x23 0xBA STOP PUSH13 0xC7BBCC12F6D8822FD79F8EC0D DUP7 GAS DUP1 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
      "sourceMap": "720:2398:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:322;;;;;;:::i;:::-;;:::i;:::-;;;543:25:49;;;531:2;516:18;1326:322:47;;;;;;;;890:215;;;;;;:::i;:::-;;:::i;753:131::-;;;;;;:::i;:::-;;:::i;1111:209::-;;;;;;:::i;:::-;;:::i;2898:218::-;;;;;;:::i;:::-;;:::i;2267:210::-;;;;;;:::i;:::-;;:::i;:::-;;;1395:14:49;;1388:22;1370:41;;1358:2;1343:18;2267:210:47;1230:187:49;2483:220:47;;;;;;:::i;:::-;;:::i;1898:182::-;;;;;;:::i;:::-;;:::i;2709:183::-;;;;;;:::i;:::-;;:::i;1654:238::-;;;;;;:::i;:::-;;:::i;2086:175::-;;;;;;:::i;:::-;;:::i;1326:322::-;1469:10;1510:131;1559:11;1588:15;1621:6;1510:31;:131::i;:::-;1491:150;1326:322;-1:-1:-1;;;;1326:322:47:o;890:215::-;1002:10;1035:63;1083:14;1035:47;:63::i;:::-;1028:70;890:215;-1:-1:-1;;890:215:47:o;753:131::-;813:10;870:6;842:35;1513:121:37;1111:209:47;1227:7;1257:56;1284:11;1297:15;1257:26;:56::i;:::-;1250:63;1111:209;-1:-1:-1;;;1111:209:47:o;2898:218::-;3017:10;3050:59;3080:11;3093:15;3050:29;:59::i;2267:210::-;2385:4;5700:1:37;5657:3;5623:37;;;5622:58;;5621:80;5620:87;;2412:58:47;5369:345:37;2483:220:47;2603:10;2636:60;2667:11;2680:15;2636:30;:60::i;1898:182::-;1995:10;-1:-1:-1;;;;;4746:49:37;;2028:45:47;4599:265:37;2709:183:47;2808:7;6533:44:37;;;;;;2838:47:47;6401:209:37;1654:238:47;1792:10;1821:64;1848:11;1861:15;1878:6;1821:26;:64::i;2086:175::-;2181:7;2211:43;2242:11;5127:3:37;5093:37;;4965:197;3155:454;3300:10;3348:1;3330:15;:19;3322:50;;;;-1:-1:-1;;;3322:50:37;;;;;;;:::i;:::-;;;;;;;;;3382:18;3403:42;3416:11;3429:15;3403:12;:42::i;:::-;3382:63;-1:-1:-1;3455:14:37;3472:19;3485:6;3382:63;3472:19;:::i;:::-;3455:36;;3552:50;3565:11;3578:15;3595:6;3552:12;:50::i;:::-;3545:57;3155:454;-1:-1:-1;;;;;;3155:454:37:o;1848:331::-;1962:10;2014:1;1996:14;:19;;1988:50;;;;-1:-1:-1;;;1988:50:37;;2452:2:49;1988:50:37;;;2434:21:49;2491:2;2471:18;;;2464:30;-1:-1:-1;;;2510:18:49;;;2503:48;2568:18;;1988:50:37;2250:342:49;1988:50:37;2048:21;2072:25;2096:1;2073:19;;;2072:25;:::i;:::-;2147:3;2130:20;;1848:331;-1:-1:-1;;;1848:331:37:o;2510:372::-;2628:7;2677:1;2659:15;:19;2651:50;;;;-1:-1:-1;;;2651:50:37;;;;;;;:::i;:::-;2711:15;2729:23;2751:1;2730:17;2729:23;:::i;:::-;2711:41;-1:-1:-1;2711:41:37;2833:30;2848:15;1323:2;2833:30;:::i;:::-;2800:11;2782:82;;2781:94;2762:113;;;2510:372;;;;:::o;6813:772::-;6934:10;6986:1;6968:15;:19;6960:50;;;;-1:-1:-1;;;6960:50:37;;;;;;;:::i;:::-;7064:11;7020:23;7164:21;:15;7182:3;7164:21;:::i;:::-;7158:1;:28;;7156:31;7233:26;;;;7156:31;-1:-1:-1;7342:21:37;:15;7360:3;7342:21;:::i;:::-;7336:1;:28;;7334:31;7415:26;;;;7334:31;-1:-1:-1;7512:66:37;7415:26;7559:15;7576:1;7512:12;:66::i;:::-;7493:85;6813:772;-1:-1:-1;;;;;6813:772:37:o;5927:368::-;6049:10;6101:1;6083:15;:19;6075:50;;;;-1:-1:-1;;;6075:50:37;;;;;;;:::i;:::-;6135:15;6206:21;6212:15;6206:3;:21;:::i;:::-;6200:1;:28;;6154:75;;;-1:-1:-1;;5927:368:37;;;;:::o;3871:633::-;4011:10;4059:1;4041:15;:19;4033:50;;;;-1:-1:-1;;;4033:50:37;;;;;;;:::i;:::-;4112:23;4134:1;4113:17;4112:23;:::i;:::-;4101:6;:35;;4093:67;;;;-1:-1:-1;;;4093:67:37;;3102:2:49;4093:67:37;;;3084:21:49;3141:2;3121:18;;;3114:30;-1:-1:-1;;;3160:18:49;;;3153:49;3219:18;;4093:67:37;2900:343:49;4093:67:37;4170:15;4232:30;4247:15;1323:2;4232:30;:::i;:::-;4191:23;4213:1;4192:17;4191:23;:::i;:::-;4190:73;;4188:76;;-1:-1:-1;4302:40:37;;;4427:30;4442:15;1323:2;4427:30;:::i;:::-;4416:42;;;;4395:64;;;;;-1:-1:-1;;;;3871:633:37:o;14:347:49:-;122:6;130;138;191:2;179:9;170:7;166:23;162:32;159:52;;;207:1;204;197:12;159:52;-1:-1:-1;;230:23:49;;;300:2;285:18;;272:32;;-1:-1:-1;351:2:49;336:18;;;323:32;;14:347;-1:-1:-1;14:347:49:o;579:180::-;638:6;691:2;679:9;670:7;666:23;662:32;659:52;;;707:1;704;697:12;659:52;-1:-1:-1;730:23:49;;579:180;-1:-1:-1;579:180:49:o;764:279::-;863:6;871;924:2;912:9;903:7;899:23;895:32;892:52;;;940:1;937;930:12;892:52;-1:-1:-1;;963:23:49;;;1033:2;1018:18;;;1005:32;;-1:-1:-1;764:279:49:o;1638:342::-;1840:2;1822:21;;;1879:2;1859:18;;;1852:30;-1:-1:-1;;;1913:2:49;1898:18;;1891:48;1971:2;1956:18;;1638:342::o;1985:127::-;2046:10;2041:3;2037:20;2034:1;2027:31;2077:4;2074:1;2067:15;2101:4;2098:1;2091:15;2117:128;2157:3;2188:1;2184:6;2181:1;2178:13;2175:39;;;2194:18;;:::i;:::-;-1:-1:-1;2230:9:49;;2117:128::o;2597:125::-;2637:4;2665:1;2662;2659:8;2656:34;;;2670:18;;:::i;:::-;-1:-1:-1;2707:9:49;;2597:125::o;2727:168::-;2767:7;2833:1;2829;2825:6;2821:14;2818:1;2815:21;2810:1;2803:9;2796:17;2792:45;2789:71;;;2840:18;;:::i;:::-;-1:-1:-1;2880:9:49;;2727:168::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "299000",
        "executionCost": "337",
        "totalCost": "299337"
      },
      "external": {
        "alreadyClaimed(uint256,uint256)": "364",
        "clearAgreementMask(uint256)": "357",
        "getAgreementMask(uint256)": "414",
        "getConsensusGoalMask(uint256)": "376",
        "getNumClaims(uint256,uint256)": "627",
        "increaseNumClaims(uint256,uint256,uint256)": "infinite",
        "newClaimsMask(uint256)": "340",
        "newClaimsMaskWithConsensusGoalSet(uint256)": "453",
        "removeValidator(uint256,uint256)": "infinite",
        "setAgreementMask(uint256,uint256)": "488",
        "setNumClaims(uint256,uint256,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "alreadyClaimed(uint256,uint256)": "cb9f8813",
      "clearAgreementMask(uint256)": "cf7b90a6",
      "getAgreementMask(uint256)": "fa95f400",
      "getConsensusGoalMask(uint256)": "d4056ffe",
      "getNumClaims(uint256,uint256)": "a8c5d8f4",
      "increaseNumClaims(uint256,uint256,uint256)": "52f1d2b4",
      "newClaimsMask(uint256)": "8336d005",
      "newClaimsMaskWithConsensusGoalSet(uint256)": "574125c2",
      "removeValidator(uint256,uint256)": "ac266b8c",
      "setAgreementMask(uint256,uint256)": "cd70835c",
      "setNumClaims(uint256,uint256,uint256)": "de7fb280"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"alreadyClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"}],\"name\":\"clearAgreementMask\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"}],\"name\":\"getAgreementMask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"}],\"name\":\"getConsensusGoalMask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"getNumClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseNumClaims\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"newClaimsMask\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numValidators\",\"type\":\"uint256\"}],\"name\":\"newClaimsMaskWithConsensusGoalSet\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"removeValidator\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"}],\"name\":\"setAgreementMask\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"_claimsMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setNumClaims\",\"outputs\":[{\"internalType\":\"ClaimsMask\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test_helper/TestLibClaimsMask.sol\":\"TestLibClaimsMask\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/LibClaimsMask.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title ClaimsMask library\\npragma solidity >=0.8.8;\\n\\n// ClaimsMask is used to keep track of the number of claims for up to 8 validators\\n// | agreement mask | consensus goal mask | #claims_validator7 | #claims_validator6 | ... | #claims_validator0 |\\n// |     8 bits     |        8 bits       |      30 bits       |      30 bits       | ... |      30 bits       |\\n// In Validator Manager, #claims_validator indicates the #claims the validator has made.\\n// In Fee Manager, #claims_validator indicates the #claims the validator has redeemed. In this case,\\n//      agreement mask and consensus goal mask are not used.\\n\\ntype ClaimsMask is uint256;\\n\\nlibrary LibClaimsMask {\\n    uint256 constant claimsBitLen = 30; // #bits used for each #claims\\n\\n    /// @notice this function creates a new ClaimsMask variable with value _value\\n    /// @param  _value the value following the format of ClaimsMask\\n    function newClaimsMask(uint256 _value) internal pure returns (ClaimsMask) {\\n        return ClaimsMask.wrap(_value);\\n    }\\n\\n    /// @notice this function creates a new ClaimsMask variable with the consensus goal mask set,\\n    ///         according to the number of validators\\n    /// @param  _numValidators the number of validators\\n    function newClaimsMaskWithConsensusGoalSet(uint256 _numValidators)\\n        internal\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        require(_numValidators <= 8, \\\"up to 8 validators\\\");\\n        uint256 consensusMask = (1 << _numValidators) - 1;\\n        return ClaimsMask.wrap(consensusMask << 240); // 256 - 8 - 8 = 240\\n    }\\n\\n    /// @notice this function returns the #claims for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    ///     this index can be obtained though `getNumberOfClaimsByIndex` function in Validator Manager\\n    function getNumClaims(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 bitmask = (1 << claimsBitLen) - 1;\\n        return\\n            (ClaimsMask.unwrap(_claimsMask) >>\\n                (claimsBitLen * _validatorIndex)) & bitmask;\\n    }\\n\\n    /// @notice this function increases the #claims for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    /// @param  _value the increase amount\\n    function increaseNumClaims(\\n        ClaimsMask _claimsMask,\\n        uint256 _validatorIndex,\\n        uint256 _value\\n    ) internal pure returns (ClaimsMask) {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 currentNum = getNumClaims(_claimsMask, _validatorIndex);\\n        uint256 newNum = currentNum + _value; // overflows checked by default with sol0.8\\n        return setNumClaims(_claimsMask, _validatorIndex, newNum);\\n    }\\n\\n    /// @notice this function sets the #claims for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    /// @param  _value the set value\\n    function setNumClaims(\\n        ClaimsMask _claimsMask,\\n        uint256 _validatorIndex,\\n        uint256 _value\\n    ) internal pure returns (ClaimsMask) {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        require(_value <= ((1 << claimsBitLen) - 1), \\\"ClaimsMask Overflow\\\");\\n        uint256 bitmask = ~(((1 << claimsBitLen) - 1) <<\\n            (claimsBitLen * _validatorIndex));\\n        uint256 clearedClaimsMask = ClaimsMask.unwrap(_claimsMask) & bitmask;\\n        _claimsMask = ClaimsMask.wrap(\\n            clearedClaimsMask | (_value << (claimsBitLen * _validatorIndex))\\n        );\\n        return _claimsMask;\\n    }\\n\\n    /// @notice get consensus goal mask\\n    /// @param  _claimsMask the ClaimsMask value\\n    function clearAgreementMask(ClaimsMask _claimsMask)\\n        internal\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        uint256 clearedMask = ClaimsMask.unwrap(_claimsMask) & ((1 << 248) - 1); // 256 - 8 = 248\\n        return ClaimsMask.wrap(clearedMask);\\n    }\\n\\n    /// @notice get the entire agreement mask\\n    /// @param  _claimsMask the ClaimsMask value\\n    function getAgreementMask(ClaimsMask _claimsMask)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        return (ClaimsMask.unwrap(_claimsMask) >> 248); // get the first 8 bits\\n    }\\n\\n    /// @notice check if a validator has already claimed\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    function alreadyClaimed(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        // get the first 8 bits. Then & operation on the validator's bit to see if it's set\\n        return\\n            (((ClaimsMask.unwrap(_claimsMask) >> 248) >> _validatorIndex) &\\n                1) != 0;\\n    }\\n\\n    /// @notice set agreement mask for the specified validator\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    function setAgreementMask(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        internal\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 setMask = (ClaimsMask.unwrap(_claimsMask) |\\n            (1 << (248 + _validatorIndex))); // 256 - 8 = 248\\n        return ClaimsMask.wrap(setMask);\\n    }\\n\\n    /// @notice get the entire consensus goal mask\\n    /// @param  _claimsMask the ClaimsMask value\\n    function getConsensusGoalMask(ClaimsMask _claimsMask)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        return ((ClaimsMask.unwrap(_claimsMask) << 8) >> 248); // get the second 8 bits\\n    }\\n\\n    /// @notice remove validator from the ClaimsMask\\n    /// @param  _claimsMask the ClaimsMask value\\n    /// @param  _validatorIndex index of the validator in the validator array, starting from 0\\n    function removeValidator(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        internal\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        require(_validatorIndex < 8, \\\"index out of range\\\");\\n        uint256 claimsMaskValue = ClaimsMask.unwrap(_claimsMask);\\n        // remove validator from agreement bitmask\\n        uint256 zeroMask = ~(1 << (_validatorIndex + 248)); // 256 - 8 = 248\\n        claimsMaskValue = (claimsMaskValue & zeroMask);\\n        // remove validator from consensus goal mask\\n        zeroMask = ~(1 << (_validatorIndex + 240)); // 256 - 8 - 8 = 240\\n        claimsMaskValue = (claimsMaskValue & zeroMask);\\n        // remove validator from #claims\\n        return\\n            setNumClaims(ClaimsMask.wrap(claimsMaskValue), _validatorIndex, 0);\\n    }\\n}\\n\",\"keccak256\":\"0x80b7355ef8d176c87e9c446542c4a7de8ee208601639af8acc23f6854f8f0080\",\"license\":\"Apache-2.0\"},\"contracts/test_helper/TestLibClaimsMask.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Test ClaimsMask library\\npragma solidity >=0.8.8;\\n\\nimport \\\"../libraries/LibClaimsMask.sol\\\";\\n\\ncontract TestLibClaimsMask {\\n    function newClaimsMask(uint256 _value) public pure returns (ClaimsMask) {\\n        return LibClaimsMask.newClaimsMask(_value);\\n    }\\n\\n    function newClaimsMaskWithConsensusGoalSet(uint256 _numValidators)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        return LibClaimsMask.newClaimsMaskWithConsensusGoalSet(_numValidators);\\n    }\\n\\n    function getNumClaims(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        return LibClaimsMask.getNumClaims(_claimsMask, _validatorIndex);\\n    }\\n\\n    function increaseNumClaims(\\n        ClaimsMask _claimsMask,\\n        uint256 _validatorIndex,\\n        uint256 _value\\n    ) public pure returns (ClaimsMask) {\\n        return\\n            LibClaimsMask.increaseNumClaims(\\n                _claimsMask,\\n                _validatorIndex,\\n                _value\\n            );\\n    }\\n\\n    function setNumClaims(\\n        ClaimsMask _claimsMask,\\n        uint256 _validatorIndex,\\n        uint256 _value\\n    ) public pure returns (ClaimsMask) {\\n        return LibClaimsMask.setNumClaims(_claimsMask, _validatorIndex, _value);\\n    }\\n\\n    function clearAgreementMask(ClaimsMask _claimsMask)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        return LibClaimsMask.clearAgreementMask(_claimsMask);\\n    }\\n\\n    function getAgreementMask(ClaimsMask _claimsMask)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        return LibClaimsMask.getAgreementMask(_claimsMask);\\n    }\\n\\n    function alreadyClaimed(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (bool)\\n    {\\n        return LibClaimsMask.alreadyClaimed(_claimsMask, _validatorIndex);\\n    }\\n\\n    function setAgreementMask(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        return LibClaimsMask.setAgreementMask(_claimsMask, _validatorIndex);\\n    }\\n\\n    function getConsensusGoalMask(ClaimsMask _claimsMask)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        return LibClaimsMask.getConsensusGoalMask(_claimsMask);\\n    }\\n\\n    function removeValidator(ClaimsMask _claimsMask, uint256 _validatorIndex)\\n        public\\n        pure\\n        returns (ClaimsMask)\\n    {\\n        return LibClaimsMask.removeValidator(_claimsMask, _validatorIndex);\\n    }\\n}\\n\",\"keccak256\":\"0x51f9daa63ba096209cd4a8aa426aefa4901d74b5a384b6239ea3cc031bf9d5c9\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}