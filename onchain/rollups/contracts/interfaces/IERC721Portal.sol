// Copyright 2022 Cartesi Pte. Ltd.

// SPDX-License-Identifier: Apache-2.0
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

/// @title Generic ERC721 Portal interface
pragma solidity >=0.7.0;

interface IERC721Portal {
    /// @notice deposit an ERC721 token in the portal and create a token in L2
    /// @param _ERC721 address of the ERC721 contract
    /// @param _tokenId index of token for the provided ERC721 contract
    /// @param _data information to be interpreted by L2
    /// @return hash of input generated by deposit
    function erc721Deposit(
        address _ERC721,
        uint256 _tokenId,
        bytes calldata _data
    ) external returns (bytes32);

    /// @notice withdraw an ERC721 token from the portal
    /// @param _data data with withdrawal information
    /// @dev can only be called by the Rollups contract
    function erc721Withdrawal(bytes calldata _data) external returns (bool);

    /// @notice emitted on ERC721 deposited
    event ERC721Deposited(
        address ERC721,
        address sender,
        uint256 tokenId,
        bytes data
    );

    /// @notice emitted on ERC721 withdrawal
    event ERC721Withdrawn(
        address ERC721,
        address payable receiver,
        uint256 tokenId
    );
}
