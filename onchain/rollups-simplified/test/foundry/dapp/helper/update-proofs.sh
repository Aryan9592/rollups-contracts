#!/usr/bin/env bash

if [[ $# -ge 1 ]]
then
    machine_emulator_repo=$1
    shift
else
    echo "Usage: $0 <path to local clone of machine-emulator repository>" >&2
    exit 1
fi

# Save path to helper folder
HELPER_FOLDER="${BASH_SOURCE%/*}"

# Save path to gen-proofs folder
GEN_PROOFS_FOLDER=${machine_emulator_repo}/tools/gen-proofs

# Save path to local gen-proofs.sh file
# Keywords to find in the log and in the script
LOG_KEYWORDS=( "voucher 3" "voucher 4" "voucher 5" )
SCRIPT_KEYWORDS=( "fourth" "fifth" "sixth" )

# Number of keywords
NUM_OF_KEYWORDS=${#LOG_KEYWORDS[@]}

# Go to the helper folder
cd "${HELPER_FOLDER}"

# Get absolute path of helper folder
HELPER_FOLDER=`pwd`

# Run the tests and pipe the output to a file
echo "Running forge tests..."
forge test -vv --match-contract CartesiDAppTest > logs

# Exit when command fails
set -euo pipefail

# Echo an error message before exiting and clean any logs
failure() {
  local lineno=$1
  local msg=$2
  echo "Failed at ${lineno}: ${msg}"
}

# Install a trap to better debug errors
trap 'failure ${LINENO} "${BASH_COMMAND}"' ERR

# Search for keyword in logs
for ((i = 0; i < ${NUM_OF_KEYWORDS}; i++))
do
    # Extract a chunk from the log that starts with the keyword
    chunk=`grep -A 3 "${LOG_KEYWORDS[$i]}" logs || true`

    # If chunk was found, then replace address and payload in script
    if [[ -n $chunk ]]
    then
        # Get the 2nd line in the chunk, which is the address, with spaces and '0x' removed
        address=`echo "${chunk}" | sed -n '2p' | sed 's/^[ ]*0x//'`

        # Get the 3rd line in the chunk, which is the payload, with spaces and '0x' removed
        payload=`echo "${chunk}" | sed -n '3p' | sed 's/^[ ]*0x//'`

        # Replace values in local gen-proof.sh file
        sed -i -e "/${SCRIPT_KEYWORDS[$i]}/{n;n;s/.*/PAYLOAD=${payload}/}" gen-proofs.sh
        sed -i -e "/${SCRIPT_KEYWORDS[$i]}/{n;n;n;s/.*/MSG_SENDER=${address}/}" gen-proofs.sh

        echo "Values for '${LOG_KEYWORDS[$i]}' replaced in script."
    else
        echo "Values for '${LOG_KEYWORDS[$i]}' not found in test output. Proof must be correct."
    fi
done

# Go to gen-proofs folder
pushd "${GEN_PROOFS_FOLDER}" >/dev/null

# Copy script to gen-proofs folder
cp "${HELPER_FOLDER}/gen-proofs.sh" gen-proofs.sh

# Run docker to generate proofs
echo "Running docker image to generate proofs..."
docker run -it --rm \
    --name gen-proofs \
    -v "${PWD}/gen-proofs.sh:/opt/gen-proofs/gen-proofs.sh" \
    -v "${PWD}/output:/opt/gen-proofs/output" \
    -w /opt/gen-proofs \
    cartesi/server-manager-gen-proofs:devel \
    ./gen-proofs.sh >/dev/null

# Decode strings in JSON from Base64 to hexadecimal
# Formats the output JSON with jq so that git diffs are smoother
echo "Processing JSON generated by docker image..."
python3 -m b64to16 output/epoch-status.json | jq > "${HELPER_FOLDER}/voucherProofs.json"

# Go back to the helper folder
popd >/dev/null

# Generate Solidity libraries with proofs
echo "Generating Solidity contracts for each proof..."
npx ts-node genProofLibraries.ts

# Clean logs
rm -f logs

echo "Done!"
